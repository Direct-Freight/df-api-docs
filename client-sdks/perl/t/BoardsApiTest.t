=begin comment

Direct Freight API

In order to use the Direct Freight API please first contact us to get an API Token. This token needs to be sent as a HTTP header argument in every request to our API.  api-token=\"SECRET KEY\"  Please keep your api-token a secret. If the token is compromised please contact us to get a new one.  This api token authenticates your application and gives it access to the API.  The API token should not be confused with the end-user-token. That token is given to you via the end_user_authentications endpoint when the user logs in. This token is needed in order to use certain features, and get certain sensitive information.  Both Tokens are stateless, and delivered via the HTTP headers.

OpenAPI spec version: 2.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end comment

=cut

#
# NOTE: This class is auto generated by Swagger Codegen
# Please update the test cases below to test the API endpoints.
# Ref: https://github.com/swagger-api/swagger-codegen
#
use Test::More tests => 1; #TODO update number of test cases
use Test::Exception;

use lib 'lib';
use strict;
use warnings;

use_ok('WWW::SwaggerClient::BoardsApi');

my $api = WWW::SwaggerClient::BoardsApi->new();
isa_ok($api, 'WWW::SwaggerClient::BoardsApi');

#
# boards_board_type_origin_state_origin_city_origin_radius_load_type_destination_state_destination_city_get test
#
{
    my $board_type = undef; # replace NULL with a proper value
    my $origin_state = undef; # replace NULL with a proper value
    my $origin_city = undef; # replace NULL with a proper value
    my $origin_radius = undef; # replace NULL with a proper value
    my $destination_state = undef; # replace NULL with a proper value
    my $destination_city = undef; # replace NULL with a proper value
    my $load_type = undef; # replace NULL with a proper value
    my $end_user_token = undef; # replace NULL with a proper value
    my $result = $api->boards_board_type_origin_state_origin_city_origin_radius_load_type_destination_state_destination_city_get(board_type => $board_type, origin_state => $origin_state, origin_city => $origin_city, origin_radius => $origin_radius, destination_state => $destination_state, destination_city => $destination_city, load_type => $load_type, end_user_token => $end_user_token);
}

#
# boards_board_type_post test
#
{
    my $body = undef; # replace NULL with a proper value
    my $board_type = undef; # replace NULL with a proper value
    my $end_user_token = undef; # replace NULL with a proper value
    my $result = $api->boards_board_type_post(body => $body, board_type => $board_type, end_user_token => $end_user_token);
}

#
# boards_board_type_state_list_get test
#
{
    my $board_type = undef; # replace NULL with a proper value
    my $result = $api->boards_board_type_state_list_get(board_type => $board_type);
}

#
# boards_hidden_companies_delete test
#
{
    my $end_user_token = undef; # replace NULL with a proper value
    my $company_id = undef; # replace NULL with a proper value
    my $result = $api->boards_hidden_companies_delete(end_user_token => $end_user_token, company_id => $company_id);
}

#
# boards_hidden_companies_get test
#
{
    my $end_user_token = undef; # replace NULL with a proper value
    my $company_name = undef; # replace NULL with a proper value
    my $result = $api->boards_hidden_companies_get(end_user_token => $end_user_token, company_name => $company_name);
}

#
# boards_hidden_companies_patch test
#
{
    my $end_user_token = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $result = $api->boards_hidden_companies_patch(end_user_token => $end_user_token, body => $body);
}

#
# boards_hidden_companies_post test
#
{
    my $end_user_token = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $result = $api->boards_hidden_companies_post(end_user_token => $end_user_token, body => $body);
}

#
# boards_hidden_entries_delete test
#
{
    my $end_user_token = undef; # replace NULL with a proper value
    my $entry_id = undef; # replace NULL with a proper value
    my $result = $api->boards_hidden_entries_delete(end_user_token => $end_user_token, entry_id => $entry_id);
}

#
# boards_hidden_entries_get test
#
{
    my $end_user_token = undef; # replace NULL with a proper value
    my $entry_id = undef; # replace NULL with a proper value
    my $result = $api->boards_hidden_entries_get(end_user_token => $end_user_token, entry_id => $entry_id);
}

#
# boards_hidden_entries_patch test
#
{
    my $end_user_token = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $result = $api->boards_hidden_entries_patch(end_user_token => $end_user_token, body => $body);
}

#
# boards_hidden_entries_post test
#
{
    my $end_user_token = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $result = $api->boards_hidden_entries_post(end_user_token => $end_user_token, body => $body);
}

#
# boards_notes_delete test
#
{
    my $end_user_token = undef; # replace NULL with a proper value
    my $note_id = undef; # replace NULL with a proper value
    my $result = $api->boards_notes_delete(end_user_token => $end_user_token, note_id => $note_id);
}

#
# boards_notes_get test
#
{
    my $end_user_token = undef; # replace NULL with a proper value
    my $entry_id = undef; # replace NULL with a proper value
    my $result = $api->boards_notes_get(end_user_token => $end_user_token, entry_id => $entry_id);
}

#
# boards_notes_patch test
#
{
    my $end_user_token = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $result = $api->boards_notes_patch(end_user_token => $end_user_token, body => $body);
}

#
# boards_notes_post test
#
{
    my $end_user_token = undef; # replace NULL with a proper value
    my $body = undef; # replace NULL with a proper value
    my $result = $api->boards_notes_post(end_user_token => $end_user_token, body => $body);
}


1;
