=begin comment

Direct Freight API

In order to use the Direct Freight API please first contact us to get an API Token. This token needs to be sent as a HTTP header argument in every request to our API.  api-token=\"SECRET KEY\"  Please keep your api-token a secret. If the token is compromised please contact us to get a new one.  This api token authenticates your application and gives it access to the API.  The API token should not be confused with the end-user-token. That token is given to you via the end_user_authentications endpoint when the user logs in. This token is needed in order to use certain features, and get certain sensitive information.  Both Tokens are stateless, and delivered via the HTTP headers.

OpenAPI spec version: 2.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end comment

=cut

#
# NOTE: This class is auto generated by the swagger code generator program. 
# Do not edit the class manually.
# Ref: https://github.com/swagger-api/swagger-codegen
#
package WWW::SwaggerClient::Object::AlertProperties;

require 5.6.0;
use strict;
use warnings;
use utf8;
use JSON qw(decode_json);
use Data::Dumper;
use Module::Runtime qw(use_module);
use Log::Any qw($log);
use Date::Parse;
use DateTime;

use base ("Class::Accessor", "Class::Data::Inheritable");


#
#
#
# NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
# REF: https://github.com/swagger-api/swagger-codegen
#

=begin comment

Direct Freight API

In order to use the Direct Freight API please first contact us to get an API Token. This token needs to be sent as a HTTP header argument in every request to our API.  api-token=\"SECRET KEY\"  Please keep your api-token a secret. If the token is compromised please contact us to get a new one.  This api token authenticates your application and gives it access to the API.  The API token should not be confused with the end-user-token. That token is given to you via the end_user_authentications endpoint when the user logs in. This token is needed in order to use certain features, and get certain sensitive information.  Both Tokens are stateless, and delivered via the HTTP headers.

OpenAPI spec version: 2.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end comment

=cut

#
# NOTE: This class is auto generated by the swagger code generator program. 
# Do not edit the class manually.
# Ref: https://github.com/swagger-api/swagger-codegen
#
__PACKAGE__->mk_classdata('attribute_map' => {});
__PACKAGE__->mk_classdata('swagger_types' => {});
__PACKAGE__->mk_classdata('method_documentation' => {}); 
__PACKAGE__->mk_classdata('class_documentation' => {});

# new object
sub new { 
    my ($class, %args) = @_; 

	my $self = bless {}, $class;
	
	foreach my $attribute (keys %{$class->attribute_map}) {
		my $args_key = $class->attribute_map->{$attribute};
		$self->$attribute( $args{ $args_key } );
	}
	
	return $self;
}  

# return perl hash
sub to_hash {
    return decode_json(JSON->new->convert_blessed->encode( shift ));
}

# used by JSON for serialization
sub TO_JSON { 
    my $self = shift;
    my $_data = {};
    foreach my $_key (keys %{$self->attribute_map}) {
        if (defined $self->{$_key}) {
            $_data->{$self->attribute_map->{$_key}} = $self->{$_key};
        }
    }
    return $_data;
}

# from Perl hashref
sub from_hash {
    my ($self, $hash) = @_;

    # loop through attributes and use swagger_types to deserialize the data
    while ( my ($_key, $_type) = each %{$self->swagger_types} ) {
    	my $_json_attribute = $self->attribute_map->{$_key}; 
        if ($_type =~ /^array\[/i) { # array
            my $_subclass = substr($_type, 6, -1);
            my @_array = ();
            foreach my $_element (@{$hash->{$_json_attribute}}) {
                push @_array, $self->_deserialize($_subclass, $_element);
            }
            $self->{$_key} = \@_array;
        } elsif (exists $hash->{$_json_attribute}) { #hash(model), primitive, datetime
            $self->{$_key} = $self->_deserialize($_type, $hash->{$_json_attribute});
        } else {
        	$log->debugf("Warning: %s (%s) does not exist in input hash\n", $_key, $_json_attribute);
        }
    }
  
    return $self;
}

# deserialize non-array data
sub _deserialize {
    my ($self, $type, $data) = @_;
    $log->debugf("deserializing %s with %s",Dumper($data), $type);
        
    if ($type eq 'DateTime') {
        return DateTime->from_epoch(epoch => str2time($data));
    } elsif ( grep( /^$type$/, ('int', 'double', 'string', 'boolean'))) {
        return $data;
    } else { # hash(model)
        my $_instance = eval "WWW::SwaggerClient::Object::$type->new()";
        return $_instance->from_hash($data);
    }
}



__PACKAGE__->class_documentation({description => '',
                                  class => 'AlertProperties',
                                  required => [], # TODO
}                                 );

__PACKAGE__->method_documentation({
    'days_of_week' => {
    	datatype => 'object',
    	base_name => 'days_of_week',
    	description => 'Limit the days that alerts are sent to the days listed. Send an array of strings. Valid strings are &#39;Sun&#39;,&#39;Mon&#39;,&#39;Tue&#39;,&#39;Wed&#39;,&#39;Thu&#39;,&#39;Fri&#39;,and &#39;Sat&#39;.',
    	format => '',
    	read_only => '',
    		},
    'email_address' => {
    	datatype => 'string',
    	base_name => 'email_address',
    	description => 'The address for the alert.',
    	format => '',
    	read_only => '',
    		},
    'end_hour' => {
    	datatype => 'object',
    	base_name => 'end_hour',
    	description => 'Has the same values as start_hour',
    	format => '',
    	read_only => '',
    		},
    'expires_after' => {
    	datatype => 'object',
    	base_name => 'expires_after',
    	description => 'The last day the alert will be valid. Valid time frames are from today until one year into the future.',
    	format => '',
    	read_only => '',
    		},
    'list_order' => {
    	datatype => 'object',
    	base_name => 'list_order',
    	description => 'Any value that is valid in the boards sort_order is also valid here.',
    	format => '',
    	read_only => '',
    		},
    'list_type' => {
    	datatype => 'object',
    	base_name => 'list_type',
    	description => 'This specify the type of list that is returned, including disabling the list from being sent at all. Valid values are &#39;complete-list&#39;,&#39;only-new&#39;, and &#39;not-active&#39;.',
    	format => '',
    	read_only => '',
    		},
    'minute_frequency' => {
    	datatype => 'object',
    	base_name => 'minute_frequency',
    	description => 'How many minutes to wait before sending another alert. Valid values are &#39;15&#39;,&#39;30&#39;,&#39;60&#39;,&#39;120&#39;,&#39;240&#39;,&#39;480&#39;, and &#39;1440&#39;.',
    	format => '',
    	read_only => '',
    		},
    'send_type' => {
    	datatype => 'object',
    	base_name => 'send_type',
    	description => 'What method to send the alert list. Valid types are &#39;email&#39;,or &#39;text&#39;.',
    	format => '',
    	read_only => '',
    		},
    'start_hour' => {
    	datatype => 'object',
    	base_name => 'start_hour',
    	description => 'A value between 3-21 corresponding to the hour of the day.',
    	format => '',
    	read_only => '',
    		},
    'time_zone' => {
    	datatype => 'object',
    	base_name => 'time_zone',
    	description => 'A number between -1 and 2. -1 &#x3D; EST, 0 &#x3D; CST, 1 &#x3D; MST, 2 &#x3D; PST',
    	format => '',
    	read_only => '',
    		},
});

__PACKAGE__->swagger_types( {
    'days_of_week' => 'object',
    'email_address' => 'string',
    'end_hour' => 'object',
    'expires_after' => 'object',
    'list_order' => 'object',
    'list_type' => 'object',
    'minute_frequency' => 'object',
    'send_type' => 'object',
    'start_hour' => 'object',
    'time_zone' => 'object'
} );

__PACKAGE__->attribute_map( {
    'days_of_week' => 'days_of_week',
    'email_address' => 'email_address',
    'end_hour' => 'end_hour',
    'expires_after' => 'expires_after',
    'list_order' => 'list_order',
    'list_type' => 'list_type',
    'minute_frequency' => 'minute_frequency',
    'send_type' => 'send_type',
    'start_hour' => 'start_hour',
    'time_zone' => 'time_zone'
} );

__PACKAGE__->mk_accessors(keys %{__PACKAGE__->attribute_map});


1;
