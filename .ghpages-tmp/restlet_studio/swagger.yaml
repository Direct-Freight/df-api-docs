---
swagger: "2.0"
info:
  description: "In order to use the Direct Freight API please first contact us to\
    \ get an API Token. This token needs to be sent as a HTTP header argument in every\
    \ request to our API.\n\napi-token=\"SECRET KEY\"\n\nPlease keep your api-token\
    \ a secret. If the token is compromised please contact us to get a new one.\n\n\
    This api token authenticates your application and gives it access to the API.\n\
    \nThe API token should not be confused with the end-user-token. That token is\
    \ given to you via the end_user_authentications endpoint when the user logs in.\
    \ This token is needed in order to use certain features, and get certain sensitive\
    \ information.\n\nBoth Tokens are stateless, and delivered via the HTTP headers."
  version: "2.0.0"
  title: "Direct Freight API"
host: "www.directfreight.com"
basePath: "/api"
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
security:
- api_key: []
paths:
  /alerts/{board_type}:
    get:
      tags:
      - "alerts"
      summary: "STAGE=UNK Get a list of alerts. You can optionally limit the list\
        \ by specifcying alerts by their alert_id."
      parameters:
      - name: "alert_id"
        in: "query"
        required: false
        type: "array"
        description: "only get a subset of alerts. As this is a get request this is\
          \ specified as a query string parameter."
        items:
          type: "integer"
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "On success will return a list of alerts."
          schema:
            $ref: "#/definitions/alert_list"
    post:
      tags:
      - "alerts"
      summary: "STAGE=UNK Create an alert."
      description: "Any parameter that is defined here and is also defined on the\
        \ boards GET, follows the same rules."
      consumes: []
      parameters:
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/alert"
      responses:
        201:
          description: "Object created check the headers for a reference URL."
          schema:
            $ref: "#/definitions/create_status"
    delete:
      tags:
      - "alerts"
      summary: "STAGE=UNK Delete an alert."
      parameters:
      - name: "alert_id"
        in: "query"
        required: true
        type: "array"
        description: "Specify to just delete some alerts."
        items:
          type: "string"
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      responses:
        204:
          description: "successful operation"
    patch:
      tags:
      - "alerts"
      summary: "STAGE=UNK Update an alert."
      description: "Search objects are set at creation. You cannot modify them after\
        \ the alert has been created."
      consumes: []
      parameters:
      - name: "alert_id"
        in: "query"
        required: true
        type: "string"
        description: "Specify which alert you are updating."
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_alert_properties"
      responses:
        204:
          description: "Returned on response."
    parameters:
    - name: "board_type"
      in: "path"
      required: true
      type: "string"
      description: "Valid types are \"loads\", and \"trucks\"."
      enum:
      - "loads"
      - "trucks"
    x-restlet:
      section: "ALERTS"
  /billings:
    get:
      tags:
      - "billings"
      summary: "STAGE=UNK Returns the amount the end user will be charged. If a promo\
        \ code is present return adjusted amount. If there are special conditions\
        \ a string with the promo code benefits will also be returned."
      description: "Will return how much the end user will be charged to upgrade.\
        \ It will not charge the user, or consume the promo code."
      parameters:
      - name: "promo_code"
        in: "query"
        required: false
        type: "string"
        description: "The promo code. "
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/get_billing_response"
    post:
      tags:
      - "billings"
      summary: "STAGE=UNK This function will attempt to process a payment, and upgrade\
        \ a non subscibed user. "
      description: "This function will attempt to process a payment, and upgrade a\
        \ non subscibed user. "
      consumes: []
      parameters:
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/bill_user"
      responses:
        201:
          description: "Object created check the headers for a reference URL."
          schema:
            $ref: "#/definitions/create_status"
    x-restlet:
      section: "BILLINGS"
  /boards/{board_type}:
    post:
      tags:
      - "boards"
      summary: "Get a board."
      description: "This is the primary search method. Please specifify at least a\
        \ partial origin or destination."
      consumes: []
      parameters:
      - name: "end-user-token"
        in: "header"
        required: false
        type: "string"
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/board_request"
      responses:
        200:
          description: "Returns a list matching your search."
          schema:
            $ref: "#/definitions/board_response"
        422:
          description: "Unprocessable Entity. More information provided in the return\
            \ object."
          schema:
            $ref: "#/definitions/error_object"
    parameters:
    - name: "board_type"
      in: "path"
      required: true
      type: "string"
      description: "Valid types are \"loads\", and \"trucks\"."
      enum:
      - "loads"
      - "trucks"
    x-restlet:
      section: "BOARDS"
  /boards/{board_type}/state_list:
    get:
      tags:
      - "boards"
      summary: "STAGE=UNK A convenience method to get totals by state."
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/get_state_list_response"
    parameters:
    - name: "board_type"
      in: "path"
      required: true
      type: "string"
      description: "Valid types are \"loads\", and \"trucks\"."
      enum:
      - "loads"
      - "trucks"
    x-restlet:
      section: "BOARDS"
  /boards/hidden_companies:
    get:
      tags:
      - "boards"
      summary: "STAGE=UNK Get a list of companies that should be hidden."
      parameters:
      - name: "company_name"
        in: "query"
        required: true
        type: "array"
        description: "A list of id's to check if any should be visually hidden."
        items:
          type: "string"
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/get_hidden_companies_response"
    post:
      tags:
      - "boards"
      summary: "STAGE=UNK Mark a set of companies as hidden."
      consumes: []
      parameters:
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/mark_hidden_companies"
      responses:
        201:
          description: "Object created check the headers for a reference URL."
          schema:
            $ref: "#/definitions/create_status"
    delete:
      tags:
      - "boards"
      summary: "STAGE=UNK Mark a company as not hidden."
      parameters:
      - name: "company_id"
        in: "query"
        required: true
        type: "string"
        description: "The company that need to be marked as not hidden."
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      responses:
        204:
          description: "successful operation"
    patch:
      tags:
      - "boards"
      summary: "STAGE=UNK Toggle one or more company between hidden and unhidden."
      consumes: []
      parameters:
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/toggle_hidden_companies"
      responses:
        204:
          description: "successful operation"
    x-restlet:
      section: "BOARDS"
  /boards/hidden_entries:
    get:
      tags:
      - "boards"
      summary: "STAGE=UNK Get a list of entries that should be hidden."
      parameters:
      - name: "entry_id"
        in: "query"
        required: true
        type: "array"
        description: "A list of id's to check if any should be visually hidden."
        items:
          type: "string"
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/get_hidden_entries"
    post:
      tags:
      - "boards"
      summary: "STAGE=UNK Mark a set of entries as hidden."
      parameters:
      - name: "entry_id"
        in: "query"
        required: true
        type: "array"
        description: "The entry that need to be marked as hidden. "
        items:
          type: "string"
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      responses:
        201:
          description: "Object created check the headers for a reference URL."
          schema:
            $ref: "#/definitions/create_status"
    delete:
      tags:
      - "boards"
      summary: "STAGE=UNK Mark a set of entries as not hidden."
      parameters:
      - name: "entry_id"
        in: "query"
        required: true
        type: "string"
        description: "The entry that need to be marked as not hidden. "
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      responses:
        204:
          description: "successful operation"
    patch:
      tags:
      - "boards"
      summary: "STAGE=UNK Toggle one or more entry between hidden and unhidden."
      consumes: []
      parameters:
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/toggle_hidden_entries"
      responses:
        204:
          description: "successful operation"
    x-restlet:
      section: "BOARDS"
  /boards/notes:
    get:
      tags:
      - "boards"
      summary: "STAGE=UNK Get notes that this user has written."
      parameters:
      - name: "entry_id"
        in: "query"
        required: false
        type: "array"
        description: "Optionally just check if certain loads have notes associated\
          \ with them. "
        items:
          type: "string"
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/get_boards_notes_response"
    post:
      tags:
      - "boards"
      summary: "STAGE=UNK Create a new note."
      consumes: []
      parameters:
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/create_notes"
      responses:
        201:
          description: "Object created check the headers for a reference URL."
          schema:
            $ref: "#/definitions/create_status"
    delete:
      tags:
      - "boards"
      summary: "STAGE=UNK Delete a note."
      parameters:
      - name: "note_id"
        in: "query"
        required: true
        type: "string"
        description: "The entry to associate the note with. "
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      responses:
        204:
          description: "successful operation"
    patch:
      tags:
      - "boards"
      summary: "STAGE=UNK Update a note."
      consumes: []
      parameters:
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/update_notes"
      responses:
        204:
          description: "successful operation"
    x-restlet:
      section: "BOARDS"
  /credit_reports:
    get:
      tags:
      - "credit_reports"
      summary: "STAGE=UNK Request access to a credit report."
      parameters:
      - name: "credit_report_id"
        in: "query"
        required: true
        type: "string"
        description: "A special id returned with the board entries."
      - name: "format"
        in: "query"
        required: true
        type: "string"
        description: "Return format. Currently only supports html and json."
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
    x-restlet:
      section: "CREDIT_REPORTS"
  /end_user_authentication/users:
    post:
      tags:
      - "end_user_authentications"
      summary: "STAGE=UNK Create a new user."
      consumes: []
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/user"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/end-user-token"
        422:
          description: "Unprocessable Entity. More information provided in the return\
            \ object."
          schema:
            $ref: "#/definitions/error_object"
    x-restlet:
      section: "END_USER_AUTHENTICATIONS"
  /end_user_authentications:
    get:
      tags:
      - "end_user_authentications"
      summary: "STAGE=UNK Get current authentication level for the user."
      parameters:
      - name: "end-user-token"
        in: "header"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            properties:
              status:
                type: "string"
                description: "Will return the logged in user's status. Valid status's\
                  \ are \"Subscribed\", \"Posting\", \"Overdue\", or \"Not Logged\
                  \ In\"."
          examples:
            application/json: "{status: \"Subscribed\"}"
    post:
      tags:
      - "end_user_authentications"
      summary: "STAGE=UNK Logs a user in."
      description: "This function sends login credentials, and retrieves a stateless\
        \ token."
      consumes: []
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/login_credentials"
      responses:
        201:
          description: "successful operation"
          schema:
            $ref: "#/definitions/end-user-token"
        422:
          description: "Unprocessable Entity. More information provided in the return\
            \ object."
          schema:
            $ref: "#/definitions/error_object"
    delete:
      tags:
      - "end_user_authentications"
      summary: "STAGE=UNK Logs a user out."
      description: "This logs a user out. the end-user-token will no longer be valid."
      parameters:
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      responses:
        204:
          description: "Will not return content on a successful logout."
    x-restlet:
      section: "END_USER_AUTHENTICATIONS"
  /end_user_authentications/dates:
    get:
      tags:
      - "end_user_authentications"
      summary: "STAGE=UNK Gets an authoritative date_time string."
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            properties:
              now:
                type: "string"
                description: "The current date and time based on our server."
          examples:
            application/json:
              now: "now"
    x-restlet:
      section: "END_USER_AUTHENTICATIONS"
  /end_user_authentications/passwords:
    get:
      tags:
      - "end_user_authentications"
      summary: "STAGE=UNK Request a forgotten password."
      parameters:
      - name: "email"
        in: "query"
        required: true
        type: "string"
        description: "The user e-mail to send a password to if valid."
      responses:
        200:
          description: "This will return a success even if the e-mail is not in our\
            \ records."
        422:
          description: "Unprocessable Entity. More information provided in the return\
            \ object."
          schema:
            $ref: "#/definitions/error_object"
    patch:
      tags:
      - "end_user_authentications"
      summary: "STAGE=UNK Update a users password."
      consumes: []
      parameters:
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        required: true
        schema:
          type: "object"
          required:
          - "new_password"
          - "old_password"
          properties:
            new_password:
              type: "string"
              description: "The user's new password."
            old_password:
              type: "string"
              description: "Thee user's old password."
      responses:
        204:
          description: "A successful operation."
        422:
          description: "Unprocessable Entity. More information provided in the return\
            \ object."
          schema:
            $ref: "#/definitions/error_object"
    x-restlet:
      section: "END_USER_AUTHENTICATIONS"
  /location/distance:
    get:
      tags:
      - "locations"
      summary: "STAGE=UNK Get the distance between 2 locations. This is used to calculate\
        \ dead head miles."
      parameters:
      - name: "origin_city"
        in: "query"
        required: true
        type: "string"
      - name: "origin_state"
        in: "query"
        required: true
        type: "string"
      - name: "destination_city"
        in: "query"
        required: true
        type: "array"
        items:
          type: "string"
      - name: "destination_state"
        in: "query"
        required: true
        type: "array"
        items:
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/get_location_distance_response"
    x-restlet:
      section: "LOCATIONS"
  /locations/closest_city:
    get:
      tags:
      - "locations"
      summary: "STAGE=UNK Will return the closest city to a lat/lon point."
      parameters:
      - name: "latitude"
        in: "query"
        required: true
        type: "number"
        format: "float"
      - name: "longitude"
        in: "query"
        required: true
        type: "number"
        format: "float"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/get_closest_city_response"
    x-restlet:
      section: "LOCATIONS"
  /locations/partial_match:
    get:
      tags:
      - "locations"
      summary: "STAGE=UNK A string of a partial city or state name, and returns a\
        \ list of possible matches."
      parameters:
      - name: "term"
        in: "query"
        required: true
        type: "string"
        description: "Min 2 characters."
      - name: "search_type"
        in: "query"
        required: false
        type: "string"
        description: "\"state\", and \"city\" will return only returns only the respective\
          \ information for that search type. Misspelling, will default to city."
      responses:
        200:
          description: "successful operation"
    x-restlet:
      section: "LOCATIONS"
  /postings/{posting_type}:
    get:
      tags:
      - "postings"
      summary: "Get posts by this user."
      parameters:
      - name: "posting_id"
        in: "query"
        required: false
        type: "array"
        description: "To just return information about some postings."
        items:
          type: "string"
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/get_posting_type_response"
    post:
      tags:
      - "postings"
      summary: "Create a posting"
      consumes: []
      parameters:
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/post_object_model"
      responses:
        201:
          description: "Object created check the headers for a reference URL."
          schema:
            $ref: "#/definitions/create_status"
    delete:
      tags:
      - "postings"
      summary: "Remove one or more postings."
      parameters:
      - name: "posting_id"
        in: "query"
        required: true
        type: "array"
        description: "You must specify which entry to remove."
        items:
          type: "string"
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      responses:
        204:
          description: "success operation"
    patch:
      tags:
      - "postings"
      summary: "STAGE=UNK Update an posting."
      consumes: []
      parameters:
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/post_object_model"
      responses:
        204:
          description: "successful operation"
    parameters:
    - name: "posting_type"
      in: "path"
      required: true
      type: "string"
      description: "Valid types are \"loads\", \"trucks\", \"private_loads\", \"private_trucks\"\
        , \"test_loads\", and \"test_trucks\""
      enum:
      - "loads"
      - "trucks"
      - "private_loads"
      - "private_trucks"
      - "test_loads"
      - "test_trucks"
    x-restlet:
      section: "POSTINGS"
  /postings/{posting_type}/{action}:
    post:
      tags:
      - "postings"
      summary: "STAGE=UNK Copy or Move an posting."
      consumes: []
      parameters:
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/post_posting_type_action_body"
      responses:
        201:
          description: "Object created check the headers for a reference URL."
          schema:
            $ref: "#/definitions/create_status"
    parameters:
    - name: "posting_type"
      in: "path"
      required: true
      type: "string"
      description: "Valid types are \"loads\", \"trucks\", \"private_loads\", \"private_trucks\"\
        , \"test_loads\", and \"test_trucks\""
      enum:
      - "loads"
      - "trucks"
      - "private_loads"
      - "private_trucks"
      - "test_loads"
      - "test_trucks"
    - name: "action"
      in: "path"
      required: true
      type: "string"
      description: "Specified in the url. Valid types are \"copy\", and \"move\""
    x-restlet:
      section: "POSTINGS"
  /postings/custom_categories/{category_type}:
    get:
      tags:
      - "postings"
      summary: "STAGE=UNK Get a list of custom columns, or custom_column data."
      parameters:
      - name: "category_id"
        in: "query"
        required: false
        type: "array"
        description: "To just return information about some postings."
        items:
          type: "string"
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/get_custom_categories_response"
    post:
      tags:
      - "postings"
      summary: "STAGE=UNK Create new category names, or add new data."
      parameters:
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      responses:
        201:
          description: "Object created check the headers for a reference URL."
          schema:
            $ref: "#/definitions/create_status"
    delete:
      tags:
      - "postings"
      summary: "STAGE=UNK Delete some or all custom columns, or custom_column data."
      parameters:
      - name: "category_id"
        in: "query"
        required: false
        type: "array"
        description: "To just delete information about some postings."
        items:
          type: "string"
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      responses:
        204:
          description: "200 OK"
    patch:
      tags:
      - "postings"
      summary: "STAGE=UNK Update a category name, or value."
      parameters:
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      responses:
        204:
          description: "successful operation"
    parameters:
    - name: "category_type"
      in: "path"
      required: true
      type: "string"
      description: "Valid types are \"names\", and \"data\"."
    x-restlet:
      section: "POSTINGS"
  /postings/multiple/{posting_type}:
    post:
      tags:
      - "postings"
      summary: "STAGE=UNK Create, multiple entries at once. This is a convenience\
        \ method."
      consumes: []
      parameters:
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/create_multiple_postings"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/post_posting_multiple_response"
    parameters:
    - name: "posting_type"
      in: "path"
      required: true
      type: "string"
      description: "Valid types are \"loads\", \"trucks\", \"private_loads\", \"private_trucks\"\
        , \"test_loads\", and \"test_trucks\""
      enum:
      - "loads"
      - "trucks"
      - "private_loads"
      - "private_trucks"
      - "test_loads"
      - "test_trucks"
    x-restlet:
      section: "POSTINGS"
  /profiles:
    get:
      tags:
      - "profiles"
      summary: "STAGE=UNK Request the logged in user's profile."
      parameters:
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/profile_model"
    post:
      tags:
      - "profiles"
      summary: "STAGE=UNK Create a new profile."
      consumes: []
      parameters:
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/create_profile"
      responses:
        201:
          description: "Object created check the headers for a reference URL."
          schema:
            $ref: "#/definitions/create_status"
    patch:
      tags:
      - "profiles"
      summary: "STAGE=UNK Update profile information."
      description: "Please send in at least one field to be updated."
      consumes: []
      parameters:
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_profile"
      responses:
        204:
          description: "successful operation"
    x-restlet:
      section: "PROFILES"
  /profiles/documents:
    get:
      tags:
      - "profiles"
      summary: "STAGE=UNK Retrieve documents"
      description: "Retrieve documents"
      parameters:
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "success"
    post:
      tags:
      - "profiles"
      summary: "STAGE=UNK Upload a new document."
      consumes: []
      parameters:
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/upload_document"
      responses:
        201:
          description: "Object created check the headers for a reference URL."
          schema:
            $ref: "#/definitions/create_status"
    delete:
      tags:
      - "profiles"
      summary: "STAGE=UNK Delete the document."
      parameters:
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      responses:
        204:
          description: "success operation"
    patch:
      tags:
      - "profiles"
      summary: "STAGE=UNK Rename a document."
      consumes: []
      parameters:
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/rename_document"
      responses:
        204:
          description: "success"
    x-restlet:
      section: "PROFILES"
  /profiles/mobile_carriers:
    get:
      tags:
      - "profiles"
      summary: "STAGE=UNK Retrieve one or more mobile carriers. "
      description: "Retrieve a list of supported carriers."
      parameters:
      - name: "carrier_id"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        description: "A way to just get back the info for just one carrier."
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/mobile_carrier_response"
    x-restlet:
      section: "PROFILES"
  /profiles/optins:
    get:
      tags:
      - "profiles"
      summary: "STAGE=UNK Check if the profile has opted to being contacted by text."
      parameters:
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/success_status_response"
    post:
      tags:
      - "profiles"
      summary: "STAGE=UNK Create, and send an Optin Code."
      parameters:
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/post_optin_code_response"
    delete:
      tags:
      - "profiles"
      summary: "STAGE=UNK Marks the profile as opted out."
      parameters:
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      responses:
        204:
          description: "successful operation"
    patch:
      tags:
      - "profiles"
      summary: "STAGE=UNK Marks the profile as opted in."
      parameters:
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      responses:
        204:
          description: "successful operation"
    x-restlet:
      section: "PROFILES"
  /validations/email_exists:
    get:
      tags:
      - "validations"
      summary: "STAGE=UNK Check if an e-mail exists."
      description: "Enter an e-mail to see if it is available. Can be used as ?email=xxx\
        \ or as a JSON request."
      parameters:
      - name: "email"
        in: "query"
        required: true
        type: "string"
      - name: "end-user-token"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/get_email_exists_response"
    x-restlet:
      section: "VALIDATIONS"
securityDefinitions:
  api_key:
    description: "This token needs to be sent as a HTTP header argument in every request\
      \ to our API."
    type: "apiKey"
    name: "api-token"
    in: "header"
definitions:
  alert:
    type: "object"
    required:
    - "days_of_week"
    - "email_address"
    - "end_hour"
    - "expires_after"
    - "list_order"
    - "list_type"
    - "minute_frequency"
    - "search"
    - "send_type"
    - "start_hour"
    - "time_zone"
    properties:
      days_of_week:
        type: "object"
        description: "Limit the days that alerts are sent to the days listed. Send\
          \ an array of strings. Valid strings are 'Sun','Mon','Tue','Wed','Thu','Fri',and\
          \ 'Sat'."
      email_address:
        type: "string"
        description: "The address for the alert."
      end_hour:
        type: "object"
        description: "Has the same values as start_hour"
      expires_after:
        type: "object"
        description: "The last day the alert will be valid. Valid time frames are\
          \ from today until one year into the future."
      list_order:
        type: "object"
        description: "Any value that is valid in the boards sort_order is also valid\
          \ here."
      list_type:
        type: "object"
        description: "This specify the type of list that is returned, including disabling\
          \ the list from being sent at all. Valid values are 'complete-list','only-new',\
          \ and 'not-active'."
      minute_frequency:
        type: "object"
        description: "How many minutes to wait before sending another alert. Valid\
          \ values are '15','30','60','120','240','480', and '1440'."
      send_type:
        type: "object"
        description: "What method to send the alert list. Valid types are 'email',or\
          \ 'text'."
      start_hour:
        type: "object"
        description: "A value between 3-21 corresponding to the hour of the day."
      time_zone:
        type: "object"
        description: "A number between -1 and 2. -1 = EST, 0 = CST, 1 = MST, 2 = PST"
      search:
        type: "object"
        properties:
          search_id:
            type: "integer"
          search_type:
            type: "string"
          date_received:
            type: "string"
            format: "date"
          trailers:
            type: "string"
          date_available:
            type: "string"
            format: "date"
          origin_state:
            type: "string"
          origin_city:
            type: "string"
          origin_radius:
            type: "integer"
          destination_state:
            type: "string"
          destination_city:
            type: "string"
          destination_radius:
            type: "integer"
          load_size:
            type: "string"
    x-restlet:
      section: "ALERTS"
  alert_list:
    type: "array"
    description: "A hash containing a list of objects. Each entry should have 1 alert\
      \ object, and 1 search object, and 2 integer counts. One for the number of new\
      \ loads, and one for the number of total loads that match the search critera."
    items:
      $ref: "#/definitions/alert"
    example: "{\n  \"data\": [\n    \"{}\",\n    \"{}\"\n  ]\n}"
    x-restlet:
      section: "ALERTS"
  patch_alert_properties:
    type: "object"
    properties:
      days_of_week:
        type: "object"
        description: "Limit the days that alerts are sent to the days listed. Send\
          \ an array of strings. Valid strings are 'Sun','Mon','Tue','Wed','Thu','Fri',and\
          \ 'Sat'."
      end_hour:
        type: "object"
        description: "Has the same values as start_hour"
      expires_after:
        type: "object"
        description: "The last day the alert will be valid. Valid time frames are\
          \ from today until one year into the future."
      list_order:
        type: "object"
        description: "Any value that is valid in the boards sort_order is also valid\
          \ here."
      list_type:
        type: "object"
        description: "This specify the type of list that is returned, including disabling\
          \ the list from being sent at all. Valid values are 'complete-list','only-new',\
          \ and 'not-active'."
      minute_frequency:
        type: "object"
        description: "How many minutes to wait before sending another alert. Valid\
          \ values are '15','30','60','120','240','480', and '1440'."
      send_type:
        type: "object"
        description: "What method to send the alert list. Valid types are 'email',or\
          \ 'text'."
      start_hour:
        type: "object"
        description: "A value between 3-21 corresponding to the hour of the day."
      time_zone:
        type: "object"
        description: "A number between -1 and 2. -1 = EST, 0 = CST, 1 = MST, 2 = PST"
    x-restlet:
      section: "ALERTS"
  bill_user:
    type: "object"
    required:
    - "billing_address"
    properties:
      billing_address:
        type: "object"
        description: "first_name, last_name, address, city, state, and phone all needed. "
      cc_data:
        type: "object"
        description: "This is optional if a check number is provided. "
      check_data:
        type: "object"
        description: "This is optional if a credit number is provided. "
      promo_code:
        type: "string"
        description: "Optional Promo Code for a discount. "
    x-restlet:
      section: "BILLINGS"
  get_billing_response:
    type: "object"
    properties:
      amount:
        type: "integer"
        format: "int32"
        description: "Amount How much the user will be charged. This may be 0."
      promo_conditions:
        type: "object"
        description: "Any extra text relating to the promo code. For example \"15\
          \ Day Free. 34.95 charged after that.\""
    example: "{\n  \"amount\": 0,\n  \"promo_conditions\": \"{}\"\n}"
    x-restlet:
      section: "BILLINGS"
  board_request:
    type: "object"
    properties:
      alert_id:
        type: "integer"
        description: "By specifying an alert_id we will record the loads seen by this\
          \ user, and associate it with their alert. "
        example: 5555
      count:
        type: "boolean"
        description: "If included this will return a total count instead of a list. "
      sort_parameter:
        type: "string"
        description: "Use almost any one of the columns of a returned board."
      item_count:
        type: "integer"
        description: "This is how many board objects will be returned in the search.\
          \ By default it will return 50 items per page. Max is 100, minimum is 1. "
      page_number:
        type: "integer"
        description: "The page you want to get. Will return an empty board on an invalid\
          \ page."
      origin_city:
        type: "string"
        description: "Must be at least 3 characters. "
        example: "chillicothe"
      origin_radius:
        type: "integer"
        description: "If both city and state, it will search for all entries within\
          \ # Miles of the city. "
      origin_state:
        type: "array"
        description: "If multiple states are entered the city field will be ignored,\
          \ and a multi state search will be performed."
        items:
          type: "string"
      destination_city:
        type: "string"
        description: "Must be at least 2 characters. "
        example: "chicago"
      destination_radius:
        type: "integer"
        description: "If both city and state are specified, it will search for all\
          \ entries within # Miles of the city. "
      destination_state:
        type: "array"
        description: "If multiple states are entered the city field will be ignored,\
          \ and a multi state search will be performed."
        items:
          type: "string"
      load_size:
        type: "string"
        description: "This is only valid on load boards. Valid values are \"Full\"\
          \ and \"Partial\"\". "
        default: "Full"
      only_new:
        type: "boolean"
        description: "This will only return unseen results. This requires an alert_id\
          \ to be specified. "
      ship_date:
        type: "array"
        description: "Limit the board to only show loads with X ship date. "
        items:
          type: "string"
      trailer_type:
        type: "array"
        description: "A string array of valid trailer types to limit the search. "
        items:
          type: "string"
    x-restlet:
      section: "BOARDS"
  board_response:
    type: "object"
    properties:
      list:
        type: "object"
        description: "A list of entries for this board."
      page_number:
        type: "object"
        description: "The page you are on."
      total_items:
        type: "object"
        description: "A count of all the entry objects for the specified search."
      total_pages:
        type: "integer"
        format: "int32"
        description: "A count of the # of pages based on the search parameters."
    example: "{\n  \"list\": \"{}\",\n  \"page_number\": \"{}\",\n  \"total_items\"\
      : \"{}\",\n  \"total_pages\": 0\n}"
    x-restlet:
      section: "BOARDS"
  create_notes:
    type: "object"
    required:
    - "body"
    - "entry_id"
    - "title"
    properties:
      body:
        type: "string"
      entry_id:
        type: "integer"
        description: "The entry to associate the note with. "
      title:
        type: "string"
        description: "Subject of the note. "
    x-restlet:
      section: "BOARDS"
  get_boards_notes_response:
    type: "object"
    properties:
      entry_id:
        type: "array"
        description: "A hash with each entry id as the name, and a note_object as\
          \ the value."
        items:
          type: "string"
    example: "{\n  \"entry_id\": [\n    \"entry_id\",\n    \"entry_id\"\n  ]\n}"
    x-restlet:
      section: "BOARDS"
  update_notes:
    type: "object"
    required:
    - "body"
    - "title"
    properties:
      body:
        type: "string"
      title:
        type: "string"
        description: "Subject of the note. "
    x-restlet:
      section: "BOARDS"
  get_state_list_response:
    type: "object"
    properties:
      state_totals:
        type: "object"
        description: "A hash of state totals."
        example: "{     \"MS\": 1449,     \"NS\": 24,     \"VT\": 145,     \"MD\"\
          : 520,     \"ID\": 2091,     \"SK\": 126,     \"WA\": 2207,     \"SC\":\
          \ 1619,     \"VA\": 1781,     \"PQ\": 10,     \"ON\": 270,     \"KS\": 969,\
          \     \"NE\": 1386,     \"OR\": 2984,     \"WI\": 2714,     \"GA\": 3184,\
          \     \"IN\": 3363,     \"KY\": 1731,     \"NV\": 534,     \"NC\": 1824,\
          \     \"BC\": 124,     \"DC\": 7,     .... }"
    example:
      state_totals: "{     \"MS\": 1449,     \"NS\": 24,     \"VT\": 145,     \"MD\"\
        : 520,     \"ID\": 2091,     \"SK\": 126,     \"WA\": 2207,     \"SC\": 1619,\
        \     \"VA\": 1781,     \"PQ\": 10,     \"ON\": 270,     \"KS\": 969,    \
        \ \"NE\": 1386,     \"OR\": 2984,     \"WI\": 2714,     \"GA\": 3184,    \
        \ \"IN\": 3363,     \"KY\": 1731,     \"NV\": 534,     \"NC\": 1824,     \"\
        BC\": 124,     \"DC\": 7,     .... }"
    x-restlet:
      section: "BOARDS"
  toggle_hidden_entries:
    type: "object"
    required:
    - "entry_id"
    properties:
      entry_id:
        type: "array"
        description: "The entry that need to be toggled. "
        items:
          type: "string"
    x-restlet:
      section: "BOARDS"
  end-user-token:
    type: "object"
    properties:
      end-user-token:
        type: "string"
        description: "On success and end-user-token is returned."
        example: "XX423ASOEUHT4AESUTH"
    x-restlet:
      section: "END_USER_AUTHENTICATIONS"
  login_credentials:
    type: "object"
    required:
    - "login"
    - "realm"
    - "secret"
    properties:
      login:
        type: "string"
        description: "The e-mail, or username information needed to log in. "
      realm:
        type: "string"
        description: "This specifies who to log in with. If left blank we will assume\
          \ email/password. Valid realms are username, email, facebook(not implemneted),\
          \ google(not implemented), and linkedin(not implemented). "
        enum:
        - "username"
        - "email"
      secret:
        type: "string"
        description: "The password, or token required for this login. "
    x-restlet:
      section: "END_USER_AUTHENTICATIONS"
  get_closest_city_response:
    type: "object"
    properties:
      city:
        type: "string"
      state_abbreviation:
        type: "object"
      state_name:
        type: "object"
    example: "{\n  \"city\": \"city\",\n  \"state_abbreviation\": \"{}\",\n  \"state_name\"\
      : \"{}\"\n}"
    x-restlet:
      section: "LOCATIONS"
  get_location_distance_response:
    type: "object"
    properties:
      distance:
        type: "integer"
        format: "int32"
        description: "A number representing the miles between the two locations."
    example: "{\n  \"distance\": 0\n}"
    x-restlet:
      section: "LOCATIONS"
  create_multiple_postings:
    type: "object"
    required:
    - "list"
    properties:
      contact_fax:
        type: "string"
        description: "By default we use the number listed in their profile. "
      contact_name:
        type: "string"
        description: "The dispatchers name. By default we use the profile information. "
      contact_phone:
        type: "string"
        description: "By default we use the number listed in their profile. "
      delete_current_before_posting:
        type: "boolean"
        description: "An optional argument that will first delete all of the users\
          \ loads before entering the fresh list. Caution, this will still delete\
          \ everything even if some of the entries fail to be created. "
      list:
        type: "array"
        description: "Valid types are &quot;loads&quot;, &quot;trucks&quot;, &quot;private_loads&quot;,\
          \ &quot;private_trucks&quot;, &quot;test_loads&quot;, and &quot;test_trucks&quot; "
        items:
          type: "string"
    x-restlet:
      section: "POSTINGS"
  create_profile:
    type: "object"
    required:
    - "address"
    - "city"
    - "company"
    - "contact_extension"
    - "contact_name"
    - "contact_number"
    - "dot_number"
    - "fax_number"
    - "mc_number"
    - "mobile_carrier"
    - "mobile_number"
    - "password"
    - "state"
    - "web_page"
    - "zip"
    properties:
      address:
        type: "string"
      city:
        type: "string"
      company:
        type: "string"
        description: "Company name. "
      contact_extension:
        type: "string"
      contact_name:
        type: "string"
        description: "Contact name. "
      contact_number:
        type: "string"
      dot_number:
        type: "string"
      fax_number:
        type: "string"
      mc_number:
        type: "string"
      mobile_carrier:
        type: "integer"
      mobile_number:
        type: "string"
      password:
        type: "string"
        description: "Needed to set up the user/pass for authentication. "
      state:
        type: "string"
      web_page:
        type: "string"
      zip:
        type: "string"
    x-restlet:
      section: "PROFILES"
  patch_profile:
    type: "object"
    required:
    - "address"
    - "city"
    - "company"
    - "contact_extension"
    - "contact_name"
    - "contact_number"
    - "dot_number"
    - "fax_number"
    - "mc_number"
    - "mobile_carrier"
    - "mobile_number"
    - "state"
    - "web_page"
    - "zip"
    properties:
      address:
        type: "string"
      city:
        type: "string"
      company:
        type: "string"
        description: "Company name. "
      contact_extension:
        type: "string"
      contact_name:
        type: "string"
        description: "Contact name. "
      contact_number:
        type: "string"
      dot_number:
        type: "string"
      fax_number:
        type: "string"
      mc_number:
        type: "string"
      mobile_carrier:
        type: "integer"
      mobile_number:
        type: "string"
      state:
        type: "string"
      web_page:
        type: "string"
      zip:
        type: "string"
    x-restlet:
      section: "PROFILES"
  profile_model:
    type: "object"
    properties:
      address:
        type: "string"
        description: "The address associated with their entries."
      city:
        type: "string"
      company:
        type: "string"
      contact_extension:
        type: "string"
      contact_name:
        type: "string"
        description: "Contact name."
      contact_number:
        type: "string"
      dot_number:
        type: "string"
      fax_number:
        type: "string"
      mc_number:
        type: "string"
      mobile_carrier:
        type: "string"
      mobile_number:
        type: "string"
      state:
        type: "string"
      web_page:
        type: "string"
      zip:
        type: "string"
    example:
      address: "P.O. Box 131"
      city: "Chillicothe"
      company: "Direct Freight"
      contact_extension: "x333"
      contact_name: "Joe Doe"
      contact_number: "555-555-5555"
      dot_number: 123456
      fax_number: "555-555-5555"
      mc_number: 123456
      mobile_carrier: "Company_X"
      mobile_number: "555-555-1234"
      state: "MO"
      web_page: "http://www.directfreight.com"
      zip: 55555
    x-restlet:
      section: "PROFILES"
  rename_document:
    type: "object"
    required:
    - "current_name"
    - "new_name"
    properties:
      current_name:
        type: "string"
        description: "The document to be renamed. "
      new_name:
        type: "string"
        description: "Replacement name. "
    x-restlet:
      section: "PROFILES"
  upload_document:
    type: "object"
    required:
    - "The"
    properties:
      The:
        type: "object"
        description: "file to be uploaded. "
    x-restlet:
      section: "PROFILES"
  create_status:
    type: "object"
    properties:
      success:
        type: "integer"
    x-restlet:
      section: "common_definitions"
  error_object:
    type: "object"
    required:
    - "code"
    - "description"
    - "error"
    properties:
      code:
        type: "integer"
      error:
        type: "string"
      description:
        type: "string"
    example: "{\n  \"code\": 1,\n  \"error\": \"Generic Validation\",\n  \"description\"\
      : \"The e-mail address must be valid.\"\n}"
    x-restlet:
      section: "common_definitions"
  get_custom_categories_response:
    type: "object"
    properties:
      categories:
        type: "array"
        description: "A list of each category, type and it's corresponding position."
        items:
          type: "string"
    example: "{\n  \"categories\": [\n    \"categories\",\n    \"categories\"\n  ]\n\
      }"
    x-restlet:
      section: "not categorized yet"
  get_email_exists_response:
    type: "object"
    properties:
      exists:
        type: "boolean"
        description: "Returns a true value if it is associated with an account."
    example: "{\n  \"exists\": true\n}"
    x-restlet:
      section: "not categorized yet"
  get_hidden_companies_response:
    type: "object"
    properties:
      company_name:
        type: "array"
        description: "A subset of companies that need to be marked as hidden."
        items:
          type: "string"
    example: "{\n  \"company_name\": [\n    \"company_name\",\n    \"company_name\"\
      \n  ]\n}"
    x-restlet:
      section: "not categorized yet"
  get_hidden_entries:
    type: "object"
    properties:
      entry_id:
        type: "array"
        description: "A subset of entries that need to be marked as hidden."
        items:
          type: "string"
    example:
      entry_id:
      - "entry_id"
      - "entry_id"
    x-restlet:
      section: "not categorized yet"
  get_posting_type_response:
    type: "object"
    properties:
      posting_list:
        type: "array"
        description: "A list of posting objects you can iterate over."
        items:
          type: "string"
    example:
      posting_list:
      - "posting_list"
      - "posting_list"
    x-restlet:
      section: "not categorized yet"
  user:
    type: "object"
    required:
    - "email"
    - "password"
    properties:
      email:
        type: "string"
        description: "This must be a valid e-mail. "
      password:
        type: "string"
        description: "Currently this is a 6-10 digit alphanumeric password. "
    x-restlet:
      section: "not categorized yet"
  toggle_hidden_companies:
    type: "object"
    required:
    - "company_id"
    properties:
      company_id:
        type: "string"
        description: "The company name that need to be toggled. "
    x-restlet:
      section: "not categorized yet"
  success_status_response:
    type: "object"
    properties:
      status:
        type: "string"
        description: "A text status like OPTIN, NORESPONSE, OPTOUT."
    example:
      status: "status"
    x-restlet:
      section: "not categorized yet"
  mark_hidden_companies:
    type: "object"
    required:
    - "company_name"
    properties:
      company_name:
        type: "string"
        description: "The comapny that need to be marked as hidden. "
    x-restlet:
      section: "not categorized yet"
  mobile_carrier_response:
    type: "object"
    properties:
      carrier_id:
        type: "integer"
        format: "int32"
        description: "The carrier ID."
      carrier_name:
        type: "object"
        description: "Their mobile carrier."
    example:
      carrier_id: 0
      carrier_name: "{}"
    x-restlet:
      section: "not categorized yet"
  post_object_model:
    type: "object"
    required:
    - "origin_city"
    - "origin_state"
    - "posting_id"
    - "ship_date"
    - "trailer_type"
    properties:
      comment:
        type: "object"
      custom_id:
        type: "object"
        description: "A unique identifier a user can provide for their own records."
      destination_city:
        type: "object"
        description: "For truck type entries this is optional."
      destination_state:
        type: "object"
        description: "For truck type entries this is optional."
      height:
        type: "object"
      length:
        type: "object"
      load_size:
        type: "object"
        description: "Require for load type entries only. This field expects one of\
          \ the 2 following terms, full or partial."
      origin_city:
        type: "object"
        description: "Required for all entry types."
      origin_state:
        type: "object"
        description: "Required, 2 character limit."
      other_trailer_types:
        type: "object"
        description: "This may be empty."
      pay_rate:
        type: "object"
      posting_id:
        type: "integer"
        format: "int32"
        description: "A unique id in our system for the user's entry."
      receive_date:
        type: "object"
      ship_date:
        type: "object"
      trailer_type:
        type: "object"
        description: "This can have 1 or more standard trailer types."
      weight:
        type: "object"
      width:
        type: "object"
    x-restlet:
      section: "not categorized yet"
  post_optin_code_response:
    type: "object"
    properties:
      optin_code:
        type: "string"
        description: "A text string with the code sent."
    example:
      optin_code: "optin_code"
    x-restlet:
      section: "not categorized yet"
  post_posting_multiple_response:
    type: "object"
    properties:
      success:
        type: "boolean"
        description: "This will return true, and have a unique location in the location\
          \ header."
    example:
      success: true
    x-restlet:
      section: "not categorized yet"
  post_posting_type_action_body:
    type: "object"
    required:
    - "source_id"
    - "source_posting"
    properties:
      source_id:
        type: "object"
        description: "The posting id of the posting you are moving or copying. Optional\
          \ for create."
      source_posting:
        type: "string"
        description: "The posting_type where you are moving or copying the posting\
          \ from. Optional for create. Items can only be moved to like types. loads\
          \ -> private_private loads."
    x-restlet:
      section: "not categorized yet"
x-restlet:
  sections:
    ALERTS: {}
    BILLINGS: {}
    BOARDS: {}
    CREDIT_REPORTS: {}
    END_USER_AUTHENTICATIONS: {}
    LOCATIONS: {}
    POSTINGS: {}
    PROFILES: {}
    VALIDATIONS: {}
    common_definitions: {}
    not categorized yet: {}
