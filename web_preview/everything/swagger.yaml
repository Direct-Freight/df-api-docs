basePath: /v1
consumes:
  - application/json
host: api.directfreight.com
info:
  contact: {}
  description: |-
    In order to use the Direct Freight API please first contact us to get an API Token. This token needs to be sent as a HTTP header argument in every request to our API.

    api-token="SECRET KEY"

    Please keep your api-token a secret. If the token is compromised please contact us to get a new one.

    This api token authenticates your application and gives it access to the API.

    The API token should not be confused with the end-user-token. That token is given to you via the end_user_authentications endpoint when the user logs in. This token is needed in order to use certain features, and get certain sensitive information.

    Both Tokens are stateless, and delivered via the HTTP headers.
  title: Direct Freight API
  version: '1.0'
  x-logo:
    url: 'https://www.directfreight.com/home/images/logo-direct-freight.png'
produces:
  - application/json
schemes:
  - https
security:
  - api-token: []
securityDefinitions:
  api-token:
    in: header
    name: api-token
    type: apiKey
swagger: '2.0'
x-restlet:
  sections:
    ALERTS: {}
    BOARDS: {}
    END_USER_AUTHENTICATIONS: {}
    LOCATIONS: {}
    Mobile Update: {}
    Optins: {}
    POSTINGS: {}
    PROFILES: {}
    VALIDATIONS: {}
    common_definitions: {}
    not categorized yet: {}
parameters:
  end-user-token:
    in: header
    name: end-user-token
    required: true
    type: string
  end-user-token-optional:
    in: header
    name: end-user-token
    required: false
    type: string
  board_type:
    description: 'Valid types are "loads", and "trucks".'
    enum:
      - loads
      - trucks
    in: path
    name: board_type
    required: true
    type: string
  posting_type:
    description: 'Valid types are "loads", "trucks", "private_loads", "private_trucks", "test_loads", and "test_trucks"'
    enum:
      - loads
      - trucks
      - private_loads
      - private_trucks
      - test_loads
      - test_trucks
    in: path
    name: posting_type
    required: true
    type: string
responses:
  error_422:
    description: Unprocessable Entity. More information provided in the return object.
    schema:
      $ref: '#/definitions/error_object'
  object_created:
    description: Object created check the headers for a reference URL.
    schema:
      $ref: '#/definitions/create_status'
paths:
  '/alerts/{board_type}':
    delete:
      parameters:
        - description: Specify to just delete some alerts.
          in: query
          items:
            type: string
          name: alert_id
          required: true
          type: array
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '204':
          description: successful operation
      summary: STAGE=UNK Delete an alert.
      tags:
        - alerts
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE")
              .delete(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.delete("https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE",
              "method": "DELETE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("DELETE", "https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url: 'https://api.directfreight.com/v1/alerts/loads',
              qs: { alert_id: 'SOME_ARRAY_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("DELETE", "https://api.directfreight.com/v1/alerts/loads");

            req.query({
              "alert_id": "SOME_ARRAY_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `DELETE uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("DELETE",
            "'https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/alerts/loads');
            $request->setMethod(HTTP_METH_DELETE);

            $request->setQueryData(array(
              'alert_id' => 'SOME_ARRAY_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/alerts/loads');
            $request->setRequestMethod('DELETE');
            $request->setQuery(new http\QueryString(array(
              'alert_id' => 'SOME_ARRAY_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("DELETE", "/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/alerts/loads"

            querystring = {"alert_id":"SOME_ARRAY_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("DELETE", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url 'https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http DELETE 'https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method DELETE \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    get:
      description: Get a list of alerts. You can optionally limit the list by specifcying alerts by their alert_id.
      parameters:
        - description: only get a subset of alerts. As this is a get request this is specified as a query string parameter.
          in: query
          items:
            type: integer
          name: alert_id
          required: false
          type: array
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: On success will return a list of alerts.
          schema:
            $ref: '#/definitions/alert_list'
      summary: STAGE=UNK Retrieve alerts.
      tags:
        - alerts
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/alerts/loads',
              qs: { alert_id: 'SOME_ARRAY_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/alerts/loads");

            req.query({
              "alert_id": "SOME_ARRAY_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/alerts/loads');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'alert_id' => 'SOME_ARRAY_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/alerts/loads');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'alert_id' => 'SOME_ARRAY_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/alerts/loads"

            querystring = {"alert_id":"SOME_ARRAY_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    parameters:
      - description: 'Valid types are "loads", and "trucks".'
        enum:
          - loads
          - trucks
        in: path
        name: board_type
        required: true
        type: string
    patch:
      consumes: []
      description: Search objects are set at creation. You cannot modify them after the alert has been created.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/patch_alert_properties'
      responses:
        '204':
          description: Returned on response.
      summary: STAGE=UNK Update an alert.
      tags:
        - alerts
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/alerts/loads");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/alerts/loads");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/alerts/loads\"\n\n\tpayload := strings.NewReader(\"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/alerts/loads")
              .patch(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.patch("https://api.directfreight.com/v1/alerts/loads")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/alerts/loads",
              "method": "PATCH",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "alert_id": 0,
              "end_hour": 0,
              "expires_after": "<ADD EXAMPLE VALUE>",
              "list_order": "<ADD EXAMPLE VALUE>",
              "list_type": "complete-list",
              "minute_frequency": 0,
              "send_type": "email",
              "start_hour": 0,
              "time_zone": 0
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("PATCH", "https://api.directfreight.com/v1/alerts/loads");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PATCH",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/alerts/loads",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ alert_id: 0,
              end_hour: 0,
              expires_after: '<ADD EXAMPLE VALUE>',
              list_order: '<ADD EXAMPLE VALUE>',
              list_type: 'complete-list',
              minute_frequency: 0,
              send_type: 'email',
              start_hour: 0,
              time_zone: 0 }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'PATCH',
              url: 'https://api.directfreight.com/v1/alerts/loads',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { alert_id: 0,
                 end_hour: 0,
                 expires_after: '<ADD EXAMPLE VALUE>',
                 list_order: '<ADD EXAMPLE VALUE>',
                 list_type: 'complete-list',
                 minute_frequency: 0,
                 send_type: 'email',
                 start_hour: 0,
                 time_zone: 0 },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("PATCH", "https://api.directfreight.com/v1/alerts/loads");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "alert_id": 0,
              "end_hour": 0,
              "expires_after": "<ADD EXAMPLE VALUE>",
              "list_order": "<ADD EXAMPLE VALUE>",
              "list_type": "complete-list",
              "minute_frequency": 0,
              "send_type": "email",
              "start_hour": 0,
              "time_zone": 0
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"alert_id": @0,
                                          @"end_hour": @0,
                                          @"expires_after": @"<ADD EXAMPLE VALUE>",
                                          @"list_order": @"<ADD EXAMPLE VALUE>",
                                          @"list_type": @"complete-list",
                                          @"minute_frequency": @0,
                                          @"send_type": @"email",
                                          @"start_hour": @0,
                                          @"time_zone": @0 };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/alerts/loads"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PATCH"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/alerts/loads" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}" in

            Client.call ~headers ~body `PATCH uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("PATCH",
            "https://api.directfreight.com/v1/alerts/loads");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"alert_id":0,"end_hour":0,"expires_after":"<ADD EXAMPLE VALUE>","list_order":"<ADD EXAMPLE VALUE>","list_type":"complete-list","minute_frequency":0,"send_type":"email","start_hour":0,"time_zone":0}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/alerts/loads",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PATCH",
              CURLOPT_POSTFIELDS => "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('PATCH');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/alerts/loads');
            $request->setMethod(HttpRequest::HTTP_METH_PATCH);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"alert_id":0,"end_hour":0,"expires_after":"<ADD EXAMPLE VALUE>","list_order":"<ADD EXAMPLE VALUE>","list_type":"complete-list","minute_frequency":0,"send_type":"email","start_hour":0,"time_zone":0}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"alert_id":0,"end_hour":0,"expires_after":"<ADD EXAMPLE VALUE>","list_order":"<ADD EXAMPLE VALUE>","list_type":"complete-list","minute_frequency":0,"send_type":"email","start_hour":0,"time_zone":0}');

            $request->setRequestUrl('https://api.directfreight.com/v1/alerts/loads');
            $request->setRequestMethod('PATCH');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("PATCH", "/v1/alerts/loads", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/alerts/loads"

            payload = "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("PATCH", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/alerts/loads")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Patch.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request PATCH \
              --url https://api.directfreight.com/v1/alerts/loads \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"alert_id":0,"end_hour":0,"expires_after":"<ADD EXAMPLE VALUE>","list_order":"<ADD EXAMPLE VALUE>","list_type":"complete-list","minute_frequency":0,"send_type":"email","start_hour":0,"time_zone":0}'
        - lang: Shell_httpie
          source: |-
            echo '{"alert_id":0,"end_hour":0,"expires_after":"<ADD EXAMPLE VALUE>","list_order":"<ADD EXAMPLE VALUE>","list_type":"complete-list","minute_frequency":0,"send_type":"email","start_hour":0,"time_zone":0}' |  \
              http PATCH https://api.directfreight.com/v1/alerts/loads \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method PATCH \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"alert_id":0,"end_hour":0,"expires_after":"<ADD EXAMPLE VALUE>","list_order":"<ADD EXAMPLE VALUE>","list_type":"complete-list","minute_frequency":0,"send_type":"email","start_hour":0,"time_zone":0}' \
              --output-document \
              - https://api.directfreight.com/v1/alerts/loads
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "alert_id": 0,
              "end_hour": 0,
              "expires_after": "<ADD EXAMPLE VALUE>",
              "list_order": "<ADD EXAMPLE VALUE>",
              "list_type": "complete-list",
              "minute_frequency": 0,
              "send_type": "email",
              "start_hour": 0,
              "time_zone": 0
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/alerts/loads")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "PATCH"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      consumes: []
      description: 'Any parameter that is defined here and is also defined on the boards GET, follows the same rules.'
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/alert'
      responses:
        '201':
          $ref: '#/responses/object_created'
      summary: STAGE=UNK Create an alert.
      tags:
        - alerts
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/alerts/loads");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"email_address\":\"<ADD EXAMPLE VALUE>\",\"end_hour\":0,\"expires_after\":\"2019-12-30\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"search\":{\"delivery_date\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"origin_state\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/alerts/loads");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"email_address\":\"<ADD EXAMPLE VALUE>\",\"end_hour\":0,\"expires_after\":\"2019-12-30\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"search\":{\"delivery_date\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"origin_state\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/alerts/loads\"\n\n\tpayload := strings.NewReader(\"{\\\"email_address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2019-12-30\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"search\\\":{\\\"delivery_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"email_address\":\"<ADD EXAMPLE VALUE>\",\"end_hour\":0,\"expires_after\":\"2019-12-30\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"search\":{\"delivery_date\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"origin_state\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/alerts/loads")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/alerts/loads")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"email_address\":\"<ADD EXAMPLE VALUE>\",\"end_hour\":0,\"expires_after\":\"2019-12-30\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"search\":{\"delivery_date\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"origin_state\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/alerts/loads",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"email_address\":\"<ADD EXAMPLE VALUE>\",\"end_hour\":0,\"expires_after\":\"2019-12-30\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"search\":{\"delivery_date\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"origin_state\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "email_address": "<ADD EXAMPLE VALUE>",
              "end_hour": 0,
              "expires_after": "2019-12-30",
              "list_order": "<ADD EXAMPLE VALUE>",
              "list_type": "complete-list",
              "minute_frequency": 0,
              "search": {
                "delivery_date": "<ADD EXAMPLE VALUE>",
                "destination_city": "<ADD EXAMPLE VALUE>",
                "destination_radius": 0,
                "destination_state": "<ADD EXAMPLE VALUE>",
                "full_load": false,
                "origin_city": "<ADD EXAMPLE VALUE>",
                "origin_radius": 0,
                "origin_state": "<ADD EXAMPLE VALUE>"
              },
              "send_type": "email",
              "start_hour": 0,
              "time_zone": 0
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/alerts/loads");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/alerts/loads",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ email_address: '<ADD EXAMPLE VALUE>',
              end_hour: 0,
              expires_after: '2019-12-30',
              list_order: '<ADD EXAMPLE VALUE>',
              list_type: 'complete-list',
              minute_frequency: 0,
              search: 
               { delivery_date: '<ADD EXAMPLE VALUE>',
                 destination_city: '<ADD EXAMPLE VALUE>',
                 destination_radius: 0,
                 destination_state: '<ADD EXAMPLE VALUE>',
                 full_load: false,
                 origin_city: '<ADD EXAMPLE VALUE>',
                 origin_radius: 0,
                 origin_state: '<ADD EXAMPLE VALUE>' },
              send_type: 'email',
              start_hour: 0,
              time_zone: 0 }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/alerts/loads',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { email_address: '<ADD EXAMPLE VALUE>',
                 end_hour: 0,
                 expires_after: '2019-12-30',
                 list_order: '<ADD EXAMPLE VALUE>',
                 list_type: 'complete-list',
                 minute_frequency: 0,
                 search: 
                  { delivery_date: '<ADD EXAMPLE VALUE>',
                    destination_city: '<ADD EXAMPLE VALUE>',
                    destination_radius: 0,
                    destination_state: '<ADD EXAMPLE VALUE>',
                    full_load: false,
                    origin_city: '<ADD EXAMPLE VALUE>',
                    origin_radius: 0,
                    origin_state: '<ADD EXAMPLE VALUE>' },
                 send_type: 'email',
                 start_hour: 0,
                 time_zone: 0 },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/alerts/loads");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "email_address": "<ADD EXAMPLE VALUE>",
              "end_hour": 0,
              "expires_after": "2019-12-30",
              "list_order": "<ADD EXAMPLE VALUE>",
              "list_type": "complete-list",
              "minute_frequency": 0,
              "search": {
                "delivery_date": "<ADD EXAMPLE VALUE>",
                "destination_city": "<ADD EXAMPLE VALUE>",
                "destination_radius": 0,
                "destination_state": "<ADD EXAMPLE VALUE>",
                "full_load": false,
                "origin_city": "<ADD EXAMPLE VALUE>",
                "origin_radius": 0,
                "origin_state": "<ADD EXAMPLE VALUE>"
              },
              "send_type": "email",
              "start_hour": 0,
              "time_zone": 0
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"email_address": @"<ADD EXAMPLE VALUE>",
                                          @"end_hour": @0,
                                          @"expires_after": @"2019-12-30",
                                          @"list_order": @"<ADD EXAMPLE VALUE>",
                                          @"list_type": @"complete-list",
                                          @"minute_frequency": @0,
                                          @"search": @{ @"delivery_date": @"<ADD EXAMPLE VALUE>", @"destination_city": @"<ADD EXAMPLE VALUE>", @"destination_radius": @0, @"destination_state": @"<ADD EXAMPLE VALUE>", @"full_load": @NO, @"origin_city": @"<ADD EXAMPLE VALUE>", @"origin_radius": @0, @"origin_state": @"<ADD EXAMPLE VALUE>" },
                                          @"send_type": @"email",
                                          @"start_hour": @0,
                                          @"time_zone": @0 };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/alerts/loads"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/alerts/loads" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"email_address\":\"<ADD EXAMPLE VALUE>\",\"end_hour\":0,\"expires_after\":\"2019-12-30\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"search\":{\"delivery_date\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"origin_state\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/alerts/loads");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"email_address":"<ADD EXAMPLE VALUE>","end_hour":0,"expires_after":"2019-12-30","list_order":"<ADD EXAMPLE VALUE>","list_type":"complete-list","minute_frequency":0,"search":{"delivery_date":"<ADD EXAMPLE VALUE>","destination_city":"<ADD EXAMPLE VALUE>","destination_radius":0,"destination_state":"<ADD EXAMPLE VALUE>","full_load":false,"origin_city":"<ADD EXAMPLE VALUE>","origin_radius":0,"origin_state":"<ADD EXAMPLE VALUE>"},"send_type":"email","start_hour":0,"time_zone":0}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/alerts/loads",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"email_address\":\"<ADD EXAMPLE VALUE>\",\"end_hour\":0,\"expires_after\":\"2019-12-30\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"search\":{\"delivery_date\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"origin_state\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/alerts/loads');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"email_address":"<ADD EXAMPLE VALUE>","end_hour":0,"expires_after":"2019-12-30","list_order":"<ADD EXAMPLE VALUE>","list_type":"complete-list","minute_frequency":0,"search":{"delivery_date":"<ADD EXAMPLE VALUE>","destination_city":"<ADD EXAMPLE VALUE>","destination_radius":0,"destination_state":"<ADD EXAMPLE VALUE>","full_load":false,"origin_city":"<ADD EXAMPLE VALUE>","origin_radius":0,"origin_state":"<ADD EXAMPLE VALUE>"},"send_type":"email","start_hour":0,"time_zone":0}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"email_address":"<ADD EXAMPLE VALUE>","end_hour":0,"expires_after":"2019-12-30","list_order":"<ADD EXAMPLE VALUE>","list_type":"complete-list","minute_frequency":0,"search":{"delivery_date":"<ADD EXAMPLE VALUE>","destination_city":"<ADD EXAMPLE VALUE>","destination_radius":0,"destination_state":"<ADD EXAMPLE VALUE>","full_load":false,"origin_city":"<ADD EXAMPLE VALUE>","origin_radius":0,"origin_state":"<ADD EXAMPLE VALUE>"},"send_type":"email","start_hour":0,"time_zone":0}');

            $request->setRequestUrl('https://api.directfreight.com/v1/alerts/loads');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"email_address\":\"<ADD EXAMPLE VALUE>\",\"end_hour\":0,\"expires_after\":\"2019-12-30\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"search\":{\"delivery_date\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"origin_state\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/alerts/loads", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/alerts/loads"

            payload = "{\"email_address\":\"<ADD EXAMPLE VALUE>\",\"end_hour\":0,\"expires_after\":\"2019-12-30\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"search\":{\"delivery_date\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"origin_state\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/alerts/loads")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"email_address\":\"<ADD EXAMPLE VALUE>\",\"end_hour\":0,\"expires_after\":\"2019-12-30\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"search\":{\"delivery_date\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"origin_state\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/alerts/loads \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"email_address":"<ADD EXAMPLE VALUE>","end_hour":0,"expires_after":"2019-12-30","list_order":"<ADD EXAMPLE VALUE>","list_type":"complete-list","minute_frequency":0,"search":{"delivery_date":"<ADD EXAMPLE VALUE>","destination_city":"<ADD EXAMPLE VALUE>","destination_radius":0,"destination_state":"<ADD EXAMPLE VALUE>","full_load":false,"origin_city":"<ADD EXAMPLE VALUE>","origin_radius":0,"origin_state":"<ADD EXAMPLE VALUE>"},"send_type":"email","start_hour":0,"time_zone":0}'
        - lang: Shell_httpie
          source: |-
            echo '{"email_address":"<ADD EXAMPLE VALUE>","end_hour":0,"expires_after":"2019-12-30","list_order":"<ADD EXAMPLE VALUE>","list_type":"complete-list","minute_frequency":0,"search":{"delivery_date":"<ADD EXAMPLE VALUE>","destination_city":"<ADD EXAMPLE VALUE>","destination_radius":0,"destination_state":"<ADD EXAMPLE VALUE>","full_load":false,"origin_city":"<ADD EXAMPLE VALUE>","origin_radius":0,"origin_state":"<ADD EXAMPLE VALUE>"},"send_type":"email","start_hour":0,"time_zone":0}' |  \
              http POST https://api.directfreight.com/v1/alerts/loads \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"email_address":"<ADD EXAMPLE VALUE>","end_hour":0,"expires_after":"2019-12-30","list_order":"<ADD EXAMPLE VALUE>","list_type":"complete-list","minute_frequency":0,"search":{"delivery_date":"<ADD EXAMPLE VALUE>","destination_city":"<ADD EXAMPLE VALUE>","destination_radius":0,"destination_state":"<ADD EXAMPLE VALUE>","full_load":false,"origin_city":"<ADD EXAMPLE VALUE>","origin_radius":0,"origin_state":"<ADD EXAMPLE VALUE>"},"send_type":"email","start_hour":0,"time_zone":0}' \
              --output-document \
              - https://api.directfreight.com/v1/alerts/loads
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "email_address": "<ADD EXAMPLE VALUE>",
              "end_hour": 0,
              "expires_after": "2019-12-30",
              "list_order": "<ADD EXAMPLE VALUE>",
              "list_type": "complete-list",
              "minute_frequency": 0,
              "search": [
                "delivery_date": "<ADD EXAMPLE VALUE>",
                "destination_city": "<ADD EXAMPLE VALUE>",
                "destination_radius": 0,
                "destination_state": "<ADD EXAMPLE VALUE>",
                "full_load": false,
                "origin_city": "<ADD EXAMPLE VALUE>",
                "origin_radius": 0,
                "origin_state": "<ADD EXAMPLE VALUE>"
              ],
              "send_type": "email",
              "start_hour": 0,
              "time_zone": 0
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/alerts/loads")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: ALERTS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/alerts/loads");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/alerts/loads\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/alerts/loads")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/alerts/loads")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/alerts/loads",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/alerts/loads");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/alerts/loads",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/alerts/loads',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/alerts/loads");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/alerts/loads"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/alerts/loads" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/alerts/loads");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/alerts/loads",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/alerts/loads');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/alerts/loads');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/alerts/loads", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/alerts/loads"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/alerts/loads")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/alerts/loads \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/alerts/loads \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/alerts/loads
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/alerts/loads")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  '/boards/{board_type}':
    parameters:
      - description: Defines the type of board requested.
        enum:
          - loads
          - trucks
        in: path
        name: board_type
        required: true
        type: string
        x-example: loads
    post:
      consumes: []
      description: This is the primary search method for loads and trucks. Please specifify at least an origin or destination.  The origin or destination may be state only.
      parameters:
        - default: 01234567890abc
          in: header
          name: end-user-token
          required: false
          type: string
          x-example: 01234567890abc
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/board_request'
      responses:
        '200':
          description: Returns a list matching your search.
          schema:
            $ref: '#/definitions/board_response'
        '422':
          $ref: '#/responses/error_422'
      summary: Retrieve a board
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/loads");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: 01234567890abc");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"alert_id\":5555,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"item_count\":25,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"return_count\":false,\"return_only_new\":false,\"sort_parameter\":\"age\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/loads");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "01234567890abc");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"alert_id\":5555,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"item_count\":25,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"return_count\":false,\"return_only_new\":false,\"sort_parameter\":\"age\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/loads\"\n\n\tpayload := strings.NewReader(\"{\\\"alert_id\\\":5555,\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"chicago\\\",\\\"destination_radius\\\":100,\\\"destination_state\\\":[\\\"IL\\\",\\\"HI\\\",\\\"NY\\\",\\\"KS\\\",\\\"TX\\\",\\\"MO\\\",\\\"AL\\\"],\\\"full_load\\\":true,\\\"item_count\\\":25,\\\"origin_city\\\":\\\"Kansas City\\\",\\\"origin_radius\\\":150,\\\"origin_state\\\":[\\\"MO\\\",\\\"IL\\\",\\\"TX\\\",\\\"CA\\\"],\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"return_only_new\\\":false,\\\"sort_parameter\\\":\\\"age\\\",\\\"trailer_type\\\":[\\\"F\\\",\\\"F+T\\\",\\\"F+S\\\",\\\"V\\\"]}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"01234567890abc\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"alert_id\":5555,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"item_count\":25,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"return_count\":false,\"return_only_new\":false,\"sort_parameter\":\"age\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/loads")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "01234567890abc")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/boards/loads")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "01234567890abc")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"alert_id\":5555,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"item_count\":25,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"return_count\":false,\"return_only_new\":false,\"sort_parameter\":\"age\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/loads",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "01234567890abc",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"alert_id\":5555,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"item_count\":25,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"return_count\":false,\"return_only_new\":false,\"sort_parameter\":\"age\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "alert_id": 5555,
              "company_name": "<ADD EXAMPLE VALUE>",
              "destination_city": "chicago",
              "destination_radius": 100,
              "destination_state": [
                "IL",
                "HI",
                "NY",
                "KS",
                "TX",
                "MO",
                "AL"
              ],
              "full_load": true,
              "item_count": 25,
              "origin_city": "Kansas City",
              "origin_radius": 150,
              "origin_state": [
                "MO",
                "IL",
                "TX",
                "CA"
              ],
              "page_number": 0,
              "return_count": false,
              "return_only_new": false,
              "sort_parameter": "age",
              "trailer_type": [
                "F",
                "F+T",
                "F+S",
                "V"
              ]
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/boards/loads");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "01234567890abc");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/loads",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "01234567890abc",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ alert_id: 5555,
              company_name: '<ADD EXAMPLE VALUE>',
              destination_city: 'chicago',
              destination_radius: 100,
              destination_state: [ 'IL', 'HI', 'NY', 'KS', 'TX', 'MO', 'AL' ],
              full_load: true,
              item_count: 25,
              origin_city: 'Kansas City',
              origin_radius: 150,
              origin_state: [ 'MO', 'IL', 'TX', 'CA' ],
              page_number: 0,
              return_count: false,
              return_only_new: false,
              sort_parameter: 'age',
              trailer_type: [ 'F', 'F+T', 'F+S', 'V' ] }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/boards/loads',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': '01234567890abc',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { alert_id: 5555,
                 company_name: '<ADD EXAMPLE VALUE>',
                 destination_city: 'chicago',
                 destination_radius: 100,
                 destination_state: [ 'IL', 'HI', 'NY', 'KS', 'TX', 'MO', 'AL' ],
                 full_load: true,
                 item_count: 25,
                 origin_city: 'Kansas City',
                 origin_radius: 150,
                 origin_state: [ 'MO', 'IL', 'TX', 'CA' ],
                 page_number: 0,
                 return_count: false,
                 return_only_new: false,
                 sort_parameter: 'age',
                 trailer_type: [ 'F', 'F+T', 'F+S', 'V' ] },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/boards/loads");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "01234567890abc",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "alert_id": 5555,
              "company_name": "<ADD EXAMPLE VALUE>",
              "destination_city": "chicago",
              "destination_radius": 100,
              "destination_state": [
                "IL",
                "HI",
                "NY",
                "KS",
                "TX",
                "MO",
                "AL"
              ],
              "full_load": true,
              "item_count": 25,
              "origin_city": "Kansas City",
              "origin_radius": 150,
              "origin_state": [
                "MO",
                "IL",
                "TX",
                "CA"
              ],
              "page_number": 0,
              "return_count": false,
              "return_only_new": false,
              "sort_parameter": "age",
              "trailer_type": [
                "F",
                "F+T",
                "F+S",
                "V"
              ]
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"01234567890abc",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"alert_id": @5555,
                                          @"company_name": @"<ADD EXAMPLE VALUE>",
                                          @"destination_city": @"chicago",
                                          @"destination_radius": @100,
                                          @"destination_state": @[ @"IL", @"HI", @"NY", @"KS", @"TX", @"MO", @"AL" ],
                                          @"full_load": @YES,
                                          @"item_count": @25,
                                          @"origin_city": @"Kansas City",
                                          @"origin_radius": @150,
                                          @"origin_state": @[ @"MO", @"IL", @"TX", @"CA" ],
                                          @"page_number": @0,
                                          @"return_count": @NO,
                                          @"return_only_new": @NO,
                                          @"sort_parameter": @"age",
                                          @"trailer_type": @[ @"F", @"F+T", @"F+S", @"V" ] };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/loads"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/loads" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "01234567890abc");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"alert_id\":5555,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"item_count\":25,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"return_count\":false,\"return_only_new\":false,\"sort_parameter\":\"age\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/boards/loads");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "01234567890abc" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"alert_id":5555,"company_name":"<ADD EXAMPLE VALUE>","destination_city":"chicago","destination_radius":100,"destination_state":["IL","HI","NY","KS","TX","MO","AL"],"full_load":true,"item_count":25,"origin_city":"Kansas City","origin_radius":150,"origin_state":["MO","IL","TX","CA"],"page_number":0,"return_count":false,"return_only_new":false,"sort_parameter":"age","trailer_type":["F","F+T","F+S","V"]}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/loads",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"alert_id\":5555,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"item_count\":25,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"return_count\":false,\"return_only_new\":false,\"sort_parameter\":\"age\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: 01234567890abc"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/loads');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => '01234567890abc',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"alert_id":5555,"company_name":"<ADD EXAMPLE VALUE>","destination_city":"chicago","destination_radius":100,"destination_state":["IL","HI","NY","KS","TX","MO","AL"],"full_load":true,"item_count":25,"origin_city":"Kansas City","origin_radius":150,"origin_state":["MO","IL","TX","CA"],"page_number":0,"return_count":false,"return_only_new":false,"sort_parameter":"age","trailer_type":["F","F+T","F+S","V"]}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"alert_id":5555,"company_name":"<ADD EXAMPLE VALUE>","destination_city":"chicago","destination_radius":100,"destination_state":["IL","HI","NY","KS","TX","MO","AL"],"full_load":true,"item_count":25,"origin_city":"Kansas City","origin_radius":150,"origin_state":["MO","IL","TX","CA"],"page_number":0,"return_count":false,"return_only_new":false,"sort_parameter":"age","trailer_type":["F","F+T","F+S","V"]}');

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/loads');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => '01234567890abc',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"alert_id\":5555,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"item_count\":25,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"return_count\":false,\"return_only_new\":false,\"sort_parameter\":\"age\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "01234567890abc",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/boards/loads", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/loads"

            payload = "{\"alert_id\":5555,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"item_count\":25,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"return_count\":false,\"return_only_new\":false,\"sort_parameter\":\"age\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "01234567890abc",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/loads")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = '01234567890abc'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"alert_id\":5555,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"item_count\":25,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"return_count\":false,\"return_only_new\":false,\"sort_parameter\":\"age\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/boards/loads \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: 01234567890abc' \
              --data '{"alert_id":5555,"company_name":"<ADD EXAMPLE VALUE>","destination_city":"chicago","destination_radius":100,"destination_state":["IL","HI","NY","KS","TX","MO","AL"],"full_load":true,"item_count":25,"origin_city":"Kansas City","origin_radius":150,"origin_state":["MO","IL","TX","CA"],"page_number":0,"return_count":false,"return_only_new":false,"sort_parameter":"age","trailer_type":["F","F+T","F+S","V"]}'
        - lang: Shell_httpie
          source: |-
            echo '{"alert_id":5555,"company_name":"<ADD EXAMPLE VALUE>","destination_city":"chicago","destination_radius":100,"destination_state":["IL","HI","NY","KS","TX","MO","AL"],"full_load":true,"item_count":25,"origin_city":"Kansas City","origin_radius":150,"origin_state":["MO","IL","TX","CA"],"page_number":0,"return_count":false,"return_only_new":false,"sort_parameter":"age","trailer_type":["F","F+T","F+S","V"]}' |  \
              http POST https://api.directfreight.com/v1/boards/loads \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:01234567890abc
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: 01234567890abc' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"alert_id":5555,"company_name":"<ADD EXAMPLE VALUE>","destination_city":"chicago","destination_radius":100,"destination_state":["IL","HI","NY","KS","TX","MO","AL"],"full_load":true,"item_count":25,"origin_city":"Kansas City","origin_radius":150,"origin_state":["MO","IL","TX","CA"],"page_number":0,"return_count":false,"return_only_new":false,"sort_parameter":"age","trailer_type":["F","F+T","F+S","V"]}' \
              --output-document \
              - https://api.directfreight.com/v1/boards/loads
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "01234567890abc",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "alert_id": 5555,
              "company_name": "<ADD EXAMPLE VALUE>",
              "destination_city": "chicago",
              "destination_radius": 100,
              "destination_state": ["IL", "HI", "NY", "KS", "TX", "MO", "AL"],
              "full_load": true,
              "item_count": 25,
              "origin_city": "Kansas City",
              "origin_radius": 150,
              "origin_state": ["MO", "IL", "TX", "CA"],
              "page_number": 0,
              "return_count": false,
              "return_only_new": false,
              "sort_parameter": "age",
              "trailer_type": ["F", "F+T", "F+S", "V"]
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/loads")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: BOARDS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/loads");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/loads\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/loads")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/boards/loads")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/loads",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/boards/loads");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/loads",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/boards/loads',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/boards/loads");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/loads"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/loads" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/boards/loads");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/loads",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/loads');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/loads');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/boards/loads", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/loads"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/boards/loads")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/boards/loads \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/boards/loads \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/boards/loads
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/loads")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  '/boards/{board_type}/state_totals':
    get:
      description: A convenience method to get totals by state.
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/get_state_list_response'
      summary: Totals by state
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/loads/state_totals");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/loads/state_totals");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/loads/state_totals\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/loads/state_totals")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/boards/loads/state_totals")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/loads/state_totals",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/boards/loads/state_totals");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/loads/state_totals",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/boards/loads/state_totals',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/boards/loads/state_totals");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/loads/state_totals"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/loads/state_totals" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "https://api.directfreight.com/v1/boards/loads/state_totals");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/loads/state_totals",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/loads/state_totals');
            $request->setMethod(HTTP_METH_GET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/loads/state_totals');
            $request->setRequestMethod('GET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/boards/loads/state_totals", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/loads/state_totals"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/loads/state_totals")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.directfreight.com/v1/boards/loads/state_totals \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http GET https://api.directfreight.com/v1/boards/loads/state_totals \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/boards/loads/state_totals
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/loads/state_totals")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    parameters:
      - description: 'Valid types are "loads", and "trucks".'
        enum:
          - loads
          - trucks
        in: path
        name: board_type
        required: true
        type: string
    x-restlet:
      section: BOARDS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/loads/state_totals");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/loads/state_totals\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/loads/state_totals")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/boards/loads/state_totals")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/loads/state_totals",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/boards/loads/state_totals");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/loads/state_totals",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/boards/loads/state_totals',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/boards/loads/state_totals");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/loads/state_totals"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/loads/state_totals" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/boards/loads/state_totals");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/loads/state_totals",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/loads/state_totals');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/loads/state_totals');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/boards/loads/state_totals", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/loads/state_totals"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/boards/loads/state_totals")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/boards/loads/state_totals \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/boards/loads/state_totals \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/boards/loads/state_totals
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/loads/state_totals")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /boards/hidden_companies:
    delete:
      description: Mark a company as not hidden.
      parameters:
        - description: The company that need to be marked as not hidden.
          in: query
          name: company_name
          required: true
          type: string
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '204':
          description: No content
      summary: STAGE=UNK Unhide companies
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE")
              .delete(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.delete("https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE",
              "method": "DELETE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("DELETE", "https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url: 'https://api.directfreight.com/v1/boards/hidden_companies',
              qs: { company_name: 'SOME_STRING_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("DELETE", "https://api.directfreight.com/v1/boards/hidden_companies");

            req.query({
              "company_name": "SOME_STRING_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `DELETE uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("DELETE",
            "'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/hidden_companies');
            $request->setMethod(HTTP_METH_DELETE);

            $request->setQueryData(array(
              'company_name' => 'SOME_STRING_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_companies');
            $request->setRequestMethod('DELETE');
            $request->setQuery(new http\QueryString(array(
              'company_name' => 'SOME_STRING_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("DELETE", "/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/hidden_companies"

            querystring = {"company_name":"SOME_STRING_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("DELETE", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url 'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http DELETE 'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method DELETE \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    get:
      description: Get a list of companies that should be hidden.
      parameters:
        - description: A list of company names to check if any should be visually hidden.  If this field is blank all hidden companies will be returned.
          in: query
          items:
            type: string
          name: company_name
          required: false
          type: array
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/get_hidden_companies_response'
      summary: STAGE=UNK List hidden companies.
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/boards/hidden_companies',
              qs: { company_name: 'SOME_ARRAY_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/boards/hidden_companies");

            req.query({
              "company_name": "SOME_ARRAY_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/hidden_companies');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'company_name' => 'SOME_ARRAY_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_companies');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'company_name' => 'SOME_ARRAY_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/hidden_companies"

            querystring = {"company_name":"SOME_ARRAY_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    patch:
      consumes: []
      description: Toggle one  company between hidden and unhidden.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/toggle_hidden_companies'
      responses:
        '204':
          description: successful operation
      summary: STAGE=UNK Change hidden status
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/hidden_companies");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/hidden_companies");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_companies\"\n\n\tpayload := strings.NewReader(\"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/hidden_companies")
              .patch(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.patch("https://api.directfreight.com/v1/boards/hidden_companies")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"company_name\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/hidden_companies",
              "method": "PATCH",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "company_name": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("PATCH", "https://api.directfreight.com/v1/boards/hidden_companies");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PATCH",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/hidden_companies",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ company_name: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'PATCH',
              url: 'https://api.directfreight.com/v1/boards/hidden_companies',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: { company_name: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("PATCH", "https://api.directfreight.com/v1/boards/hidden_companies");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "company_name": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"company_name": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/hidden_companies"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PATCH"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/hidden_companies" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `PATCH uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("PATCH",
            "https://api.directfreight.com/v1/boards/hidden_companies");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"company_name":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/hidden_companies",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PATCH",
              CURLOPT_POSTFIELDS => "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('PATCH');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/hidden_companies');
            $request->setMethod(HttpRequest::HTTP_METH_PATCH);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"company_name":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"company_name":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_companies');
            $request->setRequestMethod('PATCH');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("PATCH", "/v1/boards/hidden_companies", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/hidden_companies"

            payload = "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("PATCH", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/hidden_companies")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Patch.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request PATCH \
              --url https://api.directfreight.com/v1/boards/hidden_companies \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"company_name":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"company_name":"<ADD EXAMPLE VALUE>"}' |  \
              http PATCH https://api.directfreight.com/v1/boards/hidden_companies \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method PATCH \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"company_name":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/boards/hidden_companies
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = ["company_name": "<ADD EXAMPLE VALUE>"]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/hidden_companies")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "PATCH"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      consumes: []
      description: Mark a set of companies as hidden.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/mark_hidden_companies'
      responses:
        '201':
          $ref: '#/responses/object_created'
      summary: STAGE=UNK Hide companies.
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/hidden_companies");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/hidden_companies");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_companies\"\n\n\tpayload := strings.NewReader(\"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/hidden_companies")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/boards/hidden_companies")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"company_name\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/hidden_companies",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "company_name": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/boards/hidden_companies");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/hidden_companies",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ company_name: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/boards/hidden_companies',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: { company_name: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/boards/hidden_companies");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "company_name": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"company_name": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/hidden_companies"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/hidden_companies" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/boards/hidden_companies");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"company_name":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/hidden_companies",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/hidden_companies');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"company_name":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"company_name":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_companies');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/boards/hidden_companies", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/hidden_companies"

            payload = "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/hidden_companies")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/boards/hidden_companies \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"company_name":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"company_name":"<ADD EXAMPLE VALUE>"}' |  \
              http POST https://api.directfreight.com/v1/boards/hidden_companies \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"company_name":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/boards/hidden_companies
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = ["company_name": "<ADD EXAMPLE VALUE>"]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/hidden_companies")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: BOARDS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/hidden_companies");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_companies\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/hidden_companies")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/boards/hidden_companies")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/hidden_companies",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/boards/hidden_companies");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/hidden_companies",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/boards/hidden_companies',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/boards/hidden_companies");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/hidden_companies"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/hidden_companies" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/boards/hidden_companies");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/hidden_companies",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/hidden_companies');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_companies');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/boards/hidden_companies", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/hidden_companies"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/boards/hidden_companies")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/boards/hidden_companies \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/boards/hidden_companies \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/boards/hidden_companies
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/hidden_companies")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /boards/hidden_entries:
    delete:
      description: ' Mark an entry as unhidden.'
      parameters:
        - in: query
          items:
            type: string
          name: entry_id
          required: true
          type: array
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '204':
          description: No Content
      summary: STAGE=private Unhide 1 or more postings
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE")
              .delete(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.delete("https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE",
              "method": "DELETE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("DELETE", "https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url: 'https://api.directfreight.com/v1/boards/hidden_entries',
              qs: { entry_id: 'SOME_ARRAY_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("DELETE", "https://api.directfreight.com/v1/boards/hidden_entries");

            req.query({
              "entry_id": "SOME_ARRAY_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `DELETE uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("DELETE",
            "'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/hidden_entries');
            $request->setMethod(HTTP_METH_DELETE);

            $request->setQueryData(array(
              'entry_id' => 'SOME_ARRAY_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_entries');
            $request->setRequestMethod('DELETE');
            $request->setQuery(new http\QueryString(array(
              'entry_id' => 'SOME_ARRAY_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("DELETE", "/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/hidden_entries"

            querystring = {"entry_id":"SOME_ARRAY_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("DELETE", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url 'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http DELETE 'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method DELETE \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    get:
      description: Get a list of entries that should be hidden.
      parameters:
        - description: A list of id's to check if any should be visually hidden.
          in: query
          items:
            type: string
          name: entry_id
          required: true
          type: array
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/get_hidden_entries'
      summary: STAGE=UNK List hidden entries.
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/boards/hidden_entries',
              qs: { entry_id: 'SOME_ARRAY_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/boards/hidden_entries");

            req.query({
              "entry_id": "SOME_ARRAY_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/hidden_entries');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'entry_id' => 'SOME_ARRAY_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_entries');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'entry_id' => 'SOME_ARRAY_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/hidden_entries"

            querystring = {"entry_id":"SOME_ARRAY_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    patch:
      consumes: []
      description: Toggle one or more entries between hidden and unhidden.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/toggle_hidden_entries'
      responses:
        '204':
          description: successful operation
      summary: STAGE=UNK Change hidden status
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/hidden_entries");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/hidden_entries");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_entries\"\n\n\tpayload := strings.NewReader(\"{}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/hidden_entries")
              .patch(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.patch("https://api.directfreight.com/v1/boards/hidden_entries")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/hidden_entries",
              "method": "PATCH",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({});

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("PATCH", "https://api.directfreight.com/v1/boards/hidden_entries");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PATCH",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/hidden_entries",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({}));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'PATCH',
              url: 'https://api.directfreight.com/v1/boards/hidden_entries',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: {},
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("PATCH", "https://api.directfreight.com/v1/boards/hidden_entries");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({});

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{  };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/hidden_entries"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PATCH"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/hidden_entries" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{}" in

            Client.call ~headers ~body `PATCH uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("PATCH",
            "https://api.directfreight.com/v1/boards/hidden_entries");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/hidden_entries",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PATCH",
              CURLOPT_POSTFIELDS => "{}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('PATCH');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/hidden_entries');
            $request->setMethod(HttpRequest::HTTP_METH_PATCH);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{}');

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_entries');
            $request->setRequestMethod('PATCH');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("PATCH", "/v1/boards/hidden_entries", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/hidden_entries"

            payload = "{}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("PATCH", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/hidden_entries")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Patch.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request PATCH \
              --url https://api.directfreight.com/v1/boards/hidden_entries \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{}'
        - lang: Shell_httpie
          source: |-
            echo '{}' |  \
              http PATCH https://api.directfreight.com/v1/boards/hidden_entries \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method PATCH \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{}' \
              --output-document \
              - https://api.directfreight.com/v1/boards/hidden_entries
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = []

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/hidden_entries")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "PATCH"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      consumes: []
      description: Mark an entry as hidden.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/hidden_entry_object'
      responses:
        '201':
          $ref: '#/responses/object_created'
      summary: STAGE=private Hide 1 or more postings
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/hidden_entries");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/hidden_entries");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_entries\"\n\n\tpayload := strings.NewReader(\"{}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/hidden_entries")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/boards/hidden_entries")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/hidden_entries",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({});

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/boards/hidden_entries");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/hidden_entries",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({}));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/boards/hidden_entries',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: {},
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/boards/hidden_entries");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({});

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{  };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/hidden_entries"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/hidden_entries" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/boards/hidden_entries");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/hidden_entries",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/hidden_entries');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{}');

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_entries');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/boards/hidden_entries", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/hidden_entries"

            payload = "{}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/hidden_entries")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/boards/hidden_entries \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{}'
        - lang: Shell_httpie
          source: |-
            echo '{}' |  \
              http POST https://api.directfreight.com/v1/boards/hidden_entries \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{}' \
              --output-document \
              - https://api.directfreight.com/v1/boards/hidden_entries
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = []

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/hidden_entries")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: BOARDS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/hidden_entries");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_entries\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/hidden_entries")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/boards/hidden_entries")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/hidden_entries",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/boards/hidden_entries");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/hidden_entries",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/boards/hidden_entries',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/boards/hidden_entries");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/hidden_entries"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/hidden_entries" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/boards/hidden_entries");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/hidden_entries",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/hidden_entries');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_entries');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/boards/hidden_entries", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/hidden_entries"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/boards/hidden_entries")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/boards/hidden_entries \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/boards/hidden_entries \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/boards/hidden_entries
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/hidden_entries")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /boards/notes:
    delete:
      parameters:
        - description: 'The entry to associate the note with. '
          in: query
          name: note_id
          required: true
          type: string
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '204':
          description: successful operation
      summary: STAGE=UNK Delete a note.
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE")
              .delete(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.delete("https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE",
              "method": "DELETE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("DELETE", "https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/notes?note_id=SOME_STRING_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url: 'https://api.directfreight.com/v1/boards/notes',
              qs: { note_id: 'SOME_STRING_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("DELETE", "https://api.directfreight.com/v1/boards/notes");

            req.query({
              "note_id": "SOME_STRING_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `DELETE uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("DELETE",
            "'https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/notes');
            $request->setMethod(HTTP_METH_DELETE);

            $request->setQueryData(array(
              'note_id' => 'SOME_STRING_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/notes');
            $request->setRequestMethod('DELETE');
            $request->setQuery(new http\QueryString(array(
              'note_id' => 'SOME_STRING_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("DELETE", "/v1/boards/notes?note_id=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/notes"

            querystring = {"note_id":"SOME_STRING_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("DELETE", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url 'https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http DELETE 'https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method DELETE \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    get:
      description: Get notes that this user has written.
      parameters:
        - description: 'Optionally just check if certain loads have notes associated with them. '
          in: query
          items:
            type: string
          name: entry_id
          required: false
          type: array
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/get_boards_notes_response'
      summary: STAGE=UNK List user notes.
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/notes?entry_id=SOME_ARRAY_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/boards/notes',
              qs: { entry_id: 'SOME_ARRAY_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/boards/notes");

            req.query({
              "entry_id": "SOME_ARRAY_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/notes');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'entry_id' => 'SOME_ARRAY_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/notes');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'entry_id' => 'SOME_ARRAY_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/boards/notes?entry_id=SOME_ARRAY_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/notes"

            querystring = {"entry_id":"SOME_ARRAY_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    patch:
      consumes: []
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/update_notes'
      responses:
        '201':
          description: successful operation
          schema:
            $ref: '#/definitions/update_notes_status'
      summary: STAGE=UNK Update a note.
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/notes");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/notes");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/notes\"\n\n\tpayload := strings.NewReader(\"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"note_id\\\":0,\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/notes")
              .patch(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.patch("https://api.directfreight.com/v1/boards/notes")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/notes",
              "method": "PATCH",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "body": "<ADD EXAMPLE VALUE>",
              "note_id": 0,
              "title": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("PATCH", "https://api.directfreight.com/v1/boards/notes");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PATCH",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/notes",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ body: '<ADD EXAMPLE VALUE>',
              note_id: 0,
              title: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'PATCH',
              url: 'https://api.directfreight.com/v1/boards/notes',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { body: '<ADD EXAMPLE VALUE>',
                 note_id: 0,
                 title: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("PATCH", "https://api.directfreight.com/v1/boards/notes");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "body": "<ADD EXAMPLE VALUE>",
              "note_id": 0,
              "title": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"body": @"<ADD EXAMPLE VALUE>",
                                          @"note_id": @0,
                                          @"title": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/notes"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PATCH"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/notes" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `PATCH uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("PATCH",
            "https://api.directfreight.com/v1/boards/notes");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"body":"<ADD EXAMPLE VALUE>","note_id":0,"title":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/notes",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PATCH",
              CURLOPT_POSTFIELDS => "{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('PATCH');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/notes');
            $request->setMethod(HttpRequest::HTTP_METH_PATCH);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"body":"<ADD EXAMPLE VALUE>","note_id":0,"title":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"body":"<ADD EXAMPLE VALUE>","note_id":0,"title":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/notes');
            $request->setRequestMethod('PATCH');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("PATCH", "/v1/boards/notes", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/notes"

            payload = "{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("PATCH", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/notes")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Patch.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request PATCH \
              --url https://api.directfreight.com/v1/boards/notes \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"body":"<ADD EXAMPLE VALUE>","note_id":0,"title":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"body":"<ADD EXAMPLE VALUE>","note_id":0,"title":"<ADD EXAMPLE VALUE>"}' |  \
              http PATCH https://api.directfreight.com/v1/boards/notes \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method PATCH \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"body":"<ADD EXAMPLE VALUE>","note_id":0,"title":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/boards/notes
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "body": "<ADD EXAMPLE VALUE>",
              "note_id": 0,
              "title": "<ADD EXAMPLE VALUE>"
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/notes")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "PATCH"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      consumes: []
      description: Create a new note.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/create_notes'
      responses:
        '201':
          description: Object created check the headers for a reference URL.
          schema:
            $ref: '#/definitions/note_create_status'
      summary: STAGE=UNK Create a note.
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/notes");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/notes");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/notes\"\n\n\tpayload := strings.NewReader(\"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/notes")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/boards/notes")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/notes",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "body": "<ADD EXAMPLE VALUE>",
              "entry_id": "<ADD EXAMPLE VALUE>",
              "title": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/boards/notes");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/notes",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ body: '<ADD EXAMPLE VALUE>',
              entry_id: '<ADD EXAMPLE VALUE>',
              title: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/boards/notes',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { body: '<ADD EXAMPLE VALUE>',
                 entry_id: '<ADD EXAMPLE VALUE>',
                 title: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/boards/notes");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "body": "<ADD EXAMPLE VALUE>",
              "entry_id": "<ADD EXAMPLE VALUE>",
              "title": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"body": @"<ADD EXAMPLE VALUE>",
                                          @"entry_id": @"<ADD EXAMPLE VALUE>",
                                          @"title": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/notes"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/notes" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/boards/notes");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"body":"<ADD EXAMPLE VALUE>","entry_id":"<ADD EXAMPLE VALUE>","title":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/notes",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/notes');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"body":"<ADD EXAMPLE VALUE>","entry_id":"<ADD EXAMPLE VALUE>","title":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"body":"<ADD EXAMPLE VALUE>","entry_id":"<ADD EXAMPLE VALUE>","title":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/notes');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/boards/notes", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/notes"

            payload = "{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/notes")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/boards/notes \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"body":"<ADD EXAMPLE VALUE>","entry_id":"<ADD EXAMPLE VALUE>","title":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"body":"<ADD EXAMPLE VALUE>","entry_id":"<ADD EXAMPLE VALUE>","title":"<ADD EXAMPLE VALUE>"}' |  \
              http POST https://api.directfreight.com/v1/boards/notes \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"body":"<ADD EXAMPLE VALUE>","entry_id":"<ADD EXAMPLE VALUE>","title":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/boards/notes
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "body": "<ADD EXAMPLE VALUE>",
              "entry_id": "<ADD EXAMPLE VALUE>",
              "title": "<ADD EXAMPLE VALUE>"
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/notes")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: BOARDS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/notes");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/notes\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/notes")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/boards/notes")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/notes",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/boards/notes");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/notes",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/boards/notes',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/boards/notes");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/notes"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/notes" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/boards/notes");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/notes",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/notes');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/notes');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/boards/notes", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/notes"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/boards/notes")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/boards/notes \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/boards/notes \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/boards/notes
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/notes")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /end_user_authentication/users:
    post:
      consumes: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/user'
      responses:
        '201':
          description: successful operation
          schema:
            properties:
              end-user-token:
                description: Auto logs in the new user and gives them a token.
                type: string
            required:
              - end-user-token
            type: object
        '422':
          $ref: '#/responses/error_422'
      summary: STAGE=UNK Create a new user.
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentication/users");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"email\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentication/users");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"email\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentication/users\"\n\n\tpayload := strings.NewReader(\"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"email\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentication/users")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/end_user_authentication/users")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"email\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentication/users",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"email\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "email": "<ADD EXAMPLE VALUE>",
              "password": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/end_user_authentication/users");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentication/users",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ email: '<ADD EXAMPLE VALUE>',
              password: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/end_user_authentication/users',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { email: '<ADD EXAMPLE VALUE>',
                 password: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/end_user_authentication/users");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "email": "<ADD EXAMPLE VALUE>",
              "password": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"email": @"<ADD EXAMPLE VALUE>",
                                          @"password": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentication/users"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentication/users" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"email\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/end_user_authentication/users");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"email":"<ADD EXAMPLE VALUE>","password":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentication/users",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"email\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentication/users');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"email":"<ADD EXAMPLE VALUE>","password":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"email":"<ADD EXAMPLE VALUE>","password":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentication/users');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"email\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/end_user_authentication/users", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentication/users"

            payload = "{\"email\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentication/users")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"email\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/end_user_authentication/users \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --data '{"email":"<ADD EXAMPLE VALUE>","password":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"email":"<ADD EXAMPLE VALUE>","password":"<ADD EXAMPLE VALUE>"}' |  \
              http POST https://api.directfreight.com/v1/end_user_authentication/users \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"email":"<ADD EXAMPLE VALUE>","password":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentication/users
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "email": "<ADD EXAMPLE VALUE>",
              "password": "<ADD EXAMPLE VALUE>"
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentication/users")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: END_USER_AUTHENTICATIONS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentication/users");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentication/users\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentication/users")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/end_user_authentication/users")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentication/users",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentication/users");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentication/users",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/end_user_authentication/users',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentication/users");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentication/users"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentication/users" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/end_user_authentication/users");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentication/users",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentication/users');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentication/users');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/end_user_authentication/users", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentication/users"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/end_user_authentication/users")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/end_user_authentication/users \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/end_user_authentication/users \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentication/users
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentication/users")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /end_user_authentications:
    delete:
      description: This logs a user out. the end-user-token will no longer be valid.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '204':
          description: Will not return content on a successful logout.
      summary: Logout
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications")
              .delete(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.delete("https://api.directfreight.com/v1/end_user_authentications")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications",
              "method": "DELETE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("DELETE", "https://api.directfreight.com/v1/end_user_authentications");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url: 'https://api.directfreight.com/v1/end_user_authentications',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("DELETE", "https://api.directfreight.com/v1/end_user_authentications");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `DELETE uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("DELETE",
            "https://api.directfreight.com/v1/end_user_authentications");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications');
            $request->setMethod(HTTP_METH_DELETE);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications');
            $request->setRequestMethod('DELETE');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("DELETE", "/v1/end_user_authentications", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url https://api.directfreight.com/v1/end_user_authentications \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http DELETE https://api.directfreight.com/v1/end_user_authentications \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method DELETE \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    get:
      description: Get current authentication level for the user.
      parameters:
        - in: header
          name: end-user-token
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          examples:
            application/json: '{status: "Subscribed"}'
          schema:
            properties:
              status:
                description: Will return the logged in user's status.
                enum:
                  - subscribed
                  - posting
                  - overdue
                  - not_logged_in
                type: string
            type: object
      summary: Get authentication level.
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/end_user_authentications")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/end_user_authentications");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/end_user_authentications',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/end_user_authentications");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "https://api.directfreight.com/v1/end_user_authentications");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications');
            $request->setMethod(HTTP_METH_GET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications');
            $request->setRequestMethod('GET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/end_user_authentications", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.directfreight.com/v1/end_user_authentications \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET https://api.directfreight.com/v1/end_user_authentications \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      consumes: []
      description: 'This function sends login credentials, and retrieves a stateless token.'
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/login_credentials'
      responses:
        '201':
          description: successful operation
          schema:
            $ref: '#/definitions/end-user-token'
        '422':
          $ref: '#/responses/error_422'
      summary: Login
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications\"\n\n\tpayload := strings.NewReader(\"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"username\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/end_user_authentications")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "login": "<ADD EXAMPLE VALUE>",
              "realm": "username",
              "secret": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/end_user_authentications");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ login: '<ADD EXAMPLE VALUE>',
              realm: 'username',
              secret: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/end_user_authentications',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { login: '<ADD EXAMPLE VALUE>',
                 realm: 'username',
                 secret: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/end_user_authentications");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "login": "<ADD EXAMPLE VALUE>",
              "realm": "username",
              "secret": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"login": @"<ADD EXAMPLE VALUE>",
                                          @"realm": @"username",
                                          @"secret": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/end_user_authentications");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"login":"<ADD EXAMPLE VALUE>","realm":"username","secret":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"login":"<ADD EXAMPLE VALUE>","realm":"username","secret":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"login":"<ADD EXAMPLE VALUE>","realm":"username","secret":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/end_user_authentications", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications"

            payload = "{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/end_user_authentications \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --data '{"login":"<ADD EXAMPLE VALUE>","realm":"username","secret":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"login":"<ADD EXAMPLE VALUE>","realm":"username","secret":"<ADD EXAMPLE VALUE>"}' |  \
              http POST https://api.directfreight.com/v1/end_user_authentications \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"login":"<ADD EXAMPLE VALUE>","realm":"username","secret":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "login": "<ADD EXAMPLE VALUE>",
              "realm": "username",
              "secret": "<ADD EXAMPLE VALUE>"
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: END_USER_AUTHENTICATIONS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/end_user_authentications")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/end_user_authentications',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/end_user_authentications");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/end_user_authentications", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/end_user_authentications")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/end_user_authentications \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/end_user_authentications \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /end_user_authentications/dates:
    get:
      description: Gets an authoritative date_time string.
      parameters: []
      responses:
        '200':
          description: successful operation
          examples:
            application/json: |-
              {
                "now": "now"
              }
          schema:
            properties:
              now:
                description: The current date and time based on our server.
                type: string
            type: object
      summary: Retrieve date
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/dates");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications/dates");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/dates\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/dates")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/end_user_authentications/dates")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/dates",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/end_user_authentications/dates");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/dates",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/end_user_authentications/dates',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/end_user_authentications/dates");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/dates"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/dates" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "https://api.directfreight.com/v1/end_user_authentications/dates");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/dates",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/dates');
            $request->setMethod(HTTP_METH_GET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/dates');
            $request->setRequestMethod('GET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/end_user_authentications/dates", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/dates"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications/dates")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.directfreight.com/v1/end_user_authentications/dates \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http GET https://api.directfreight.com/v1/end_user_authentications/dates \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/dates
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/dates")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: END_USER_AUTHENTICATIONS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/dates");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/dates\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/dates")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/end_user_authentications/dates")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/dates",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/dates");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/dates",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/end_user_authentications/dates',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/dates");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/dates"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/dates" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/end_user_authentications/dates");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/dates",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/dates');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/dates');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/end_user_authentications/dates", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/dates"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/end_user_authentications/dates")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/end_user_authentications/dates \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/dates \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/dates
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/dates")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /end_user_authentications/passwords:
    get:
      description: Request a forgotten password.
      parameters:
        - description: The user e-mail to send a password to if valid.
          in: query
          name: email
          required: true
          type: string
      responses:
        '200':
          description: This will return a success even if the e-mail is not in our records.
        '422':
          $ref: '#/responses/error_422'
      summary: STAGE=UNK Retrieve password
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/end_user_authentications/passwords',
              qs: { email: 'SOME_STRING_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/end_user_authentications/passwords");

            req.query({
              "email": "SOME_STRING_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/passwords');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'email' => 'SOME_STRING_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/passwords');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'email' => 'SOME_STRING_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/passwords"

            querystring = {"email":"SOME_STRING_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    patch:
      consumes: []
      description: Update a users password.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              new_password:
                description: The user's new password.
                type: string
              old_password:
                description: Thee user's old password.
                type: string
            required:
              - new_password
              - old_password
            type: object
      responses:
        '204':
          description: A successful operation.
        '422':
          $ref: '#/responses/error_422'
      summary: STAGE=UNK Update password.
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/passwords");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications/passwords");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/passwords\"\n\n\tpayload := strings.NewReader(\"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/passwords")
              .patch(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.patch("https://api.directfreight.com/v1/end_user_authentications/passwords")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/passwords",
              "method": "PATCH",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "new_password": "<ADD EXAMPLE VALUE>",
              "old_password": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("PATCH", "https://api.directfreight.com/v1/end_user_authentications/passwords");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PATCH",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/passwords",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ new_password: '<ADD EXAMPLE VALUE>',
              old_password: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'PATCH',
              url: 'https://api.directfreight.com/v1/end_user_authentications/passwords',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { new_password: '<ADD EXAMPLE VALUE>',
                 old_password: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("PATCH", "https://api.directfreight.com/v1/end_user_authentications/passwords");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "new_password": "<ADD EXAMPLE VALUE>",
              "old_password": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"new_password": @"<ADD EXAMPLE VALUE>",
                                          @"old_password": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/passwords"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PATCH"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/passwords" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `PATCH uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("PATCH",
            "https://api.directfreight.com/v1/end_user_authentications/passwords");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"new_password":"<ADD EXAMPLE VALUE>","old_password":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/passwords",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PATCH",
              CURLOPT_POSTFIELDS => "{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('PATCH');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/passwords');
            $request->setMethod(HttpRequest::HTTP_METH_PATCH);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"new_password":"<ADD EXAMPLE VALUE>","old_password":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"new_password":"<ADD EXAMPLE VALUE>","old_password":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/passwords');
            $request->setRequestMethod('PATCH');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("PATCH", "/v1/end_user_authentications/passwords", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/passwords"

            payload = "{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("PATCH", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications/passwords")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Patch.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request PATCH \
              --url https://api.directfreight.com/v1/end_user_authentications/passwords \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"new_password":"<ADD EXAMPLE VALUE>","old_password":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"new_password":"<ADD EXAMPLE VALUE>","old_password":"<ADD EXAMPLE VALUE>"}' |  \
              http PATCH https://api.directfreight.com/v1/end_user_authentications/passwords \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method PATCH \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"new_password":"<ADD EXAMPLE VALUE>","old_password":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/passwords
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "new_password": "<ADD EXAMPLE VALUE>",
              "old_password": "<ADD EXAMPLE VALUE>"
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/passwords")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "PATCH"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: END_USER_AUTHENTICATIONS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/passwords");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/passwords\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/passwords")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/end_user_authentications/passwords")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/passwords",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/passwords");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/passwords",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/end_user_authentications/passwords',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/passwords");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/passwords"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/passwords" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/end_user_authentications/passwords");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/passwords",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/passwords');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/passwords');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/end_user_authentications/passwords", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/passwords"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/end_user_authentications/passwords")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/end_user_authentications/passwords \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/passwords \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/passwords
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/passwords")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /locations/autocomplete:
    get:
      description: 'A string of a partial city or state name, and returns a list of possible matches.'
      parameters:
        - description: 'City or State or Postal code to search for.   It matches city name and state name and state abbreviation.  So for instance "MO" would return Missouri, Montana, and Montreal, QC  while  ME would return Maine, Mexico, and Memphis, TN'
          in: query
          name: searchtext
          required: true
          type: string
        - description: 'restricts the results return.  regions will only return states, provinces, and countries.  cities will only return cities and postals.  The default is to return both cities and regions in the results.'
          enum:
            - cities
            - regions
          in: query
          name: return_only
          required: false
          type: string
        - default: 100
          description: The number of records to return.   Limit 1 has a special property where it will only return a high confidence match so it may return zero results if no match found.
          in: query
          maximum: 100
          minimum: 1
          name: limit
          required: false
          type: number
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/autocomplete_response'
      summary: autocomplete
      tags:
        - locations
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/locations/autocomplete',
              qs: 
               { searchtext: 'SOME_STRING_VALUE',
                 return_only: 'SOME_STRING_VALUE',
                 limit: '100' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/locations/autocomplete");

            req.query({
              "searchtext": "SOME_STRING_VALUE",
              "return_only": "SOME_STRING_VALUE",
              "limit": "100"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/locations/autocomplete');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'searchtext' => 'SOME_STRING_VALUE',
              'return_only' => 'SOME_STRING_VALUE',
              'limit' => '100'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/locations/autocomplete');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'searchtext' => 'SOME_STRING_VALUE',
              'return_only' => 'SOME_STRING_VALUE',
              'limit' => '100'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/locations/autocomplete"

            querystring = {"searchtext":"SOME_STRING_VALUE","return_only":"SOME_STRING_VALUE","limit":"100"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: LOCATIONS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/locations/autocomplete");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/locations/autocomplete\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/locations/autocomplete")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/locations/autocomplete")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/locations/autocomplete",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/locations/autocomplete");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/locations/autocomplete",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/locations/autocomplete',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/locations/autocomplete");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/locations/autocomplete"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/locations/autocomplete" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/locations/autocomplete");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/locations/autocomplete",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/locations/autocomplete');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/locations/autocomplete');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/locations/autocomplete", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/locations/autocomplete"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/locations/autocomplete")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/locations/autocomplete \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/locations/autocomplete \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/locations/autocomplete
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/locations/autocomplete")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /locations/reverse_geocode:
    get:
      description: returns the nearest city to a lat/lon point. (reverse geocode)
      parameters:
        - format: float
          in: query
          name: latitude
          required: true
          type: number
        - format: float
          in: query
          name: longitude
          required: true
          type: number
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/reverse_geocode_response'
      summary: reverse_geocode
      tags:
        - locations
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/locations/reverse_geocode',
              qs: 
               { latitude: 'SOME_NUMBER_VALUE',
                 longitude: 'SOME_NUMBER_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/locations/reverse_geocode");

            req.query({
              "latitude": "SOME_NUMBER_VALUE",
              "longitude": "SOME_NUMBER_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/locations/reverse_geocode');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'latitude' => 'SOME_NUMBER_VALUE',
              'longitude' => 'SOME_NUMBER_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/locations/reverse_geocode');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'latitude' => 'SOME_NUMBER_VALUE',
              'longitude' => 'SOME_NUMBER_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/locations/reverse_geocode"

            querystring = {"latitude":"SOME_NUMBER_VALUE","longitude":"SOME_NUMBER_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: LOCATIONS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/locations/reverse_geocode");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/locations/reverse_geocode\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/locations/reverse_geocode")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/locations/reverse_geocode")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/locations/reverse_geocode",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/locations/reverse_geocode");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/locations/reverse_geocode",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/locations/reverse_geocode',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/locations/reverse_geocode");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/locations/reverse_geocode"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/locations/reverse_geocode" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/locations/reverse_geocode");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/locations/reverse_geocode",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/locations/reverse_geocode');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/locations/reverse_geocode');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/locations/reverse_geocode", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/locations/reverse_geocode"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/locations/reverse_geocode")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/locations/reverse_geocode \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/locations/reverse_geocode \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/locations/reverse_geocode
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/locations/reverse_geocode")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /mobile_updates:
    get:
      parameters:
        - in: query
          name: email_address
          required: false
          type: string
      responses:
        '200':
          description: Status 200
          schema:
            properties:
              bullet_points:
                items:
                  default: '[]'
                  type: string
                type: array
              information_url:
                default: 'null'
                type: string
              message:
                default: 'null'
                type: string
              title:
                default: 'null'
                type: string
              update_url:
                default: 'null'
                type: string
            required:
              - bullet_points
              - information_url
              - message
              - title
              - update_url
            type: object
      summary: Get any available update information.
      tags:
        - mobile update
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/mobile_updates?email_address=SOME_STRING_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/mobile_updates',
              qs: { email_address: 'SOME_STRING_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/mobile_updates");

            req.query({
              "email_address": "SOME_STRING_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/mobile_updates');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'email_address' => 'SOME_STRING_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/mobile_updates');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'email_address' => 'SOME_STRING_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/mobile_updates?email_address=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/mobile_updates"

            querystring = {"email_address":"SOME_STRING_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: Mobile Update
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/mobile_updates");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/mobile_updates\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/mobile_updates")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/mobile_updates")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/mobile_updates",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/mobile_updates");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/mobile_updates",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/mobile_updates',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/mobile_updates");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/mobile_updates"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/mobile_updates" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/mobile_updates");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/mobile_updates",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/mobile_updates');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/mobile_updates');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/mobile_updates", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/mobile_updates"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/mobile_updates")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/mobile_updates \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/mobile_updates \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/mobile_updates
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/mobile_updates")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /optins:
    delete:
      description: By only sending in their EUA token you would be requesting to opt them out of everything.
      parameters:
        - enum:
            - email
            - text
            - push
          in: query
          name: notification_medium
          required: false
          type: string
        - default: all
          description: This would allow granular optouts. Currently ignored.
          enum:
            - all
            - alerts
          in: query
          name: notification_channel
          required: false
          type: string
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '204':
          description: Status 204
      summary: STAGE=UNK Opt someone out of one or more mediums and channels.
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all")
              .delete(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.delete("https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all",
              "method": "DELETE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("DELETE", "https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url: 'https://api.directfreight.com/v1/optins',
              qs: 
               { notification_medium: 'SOME_STRING_VALUE',
                 notification_channel: 'all' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("DELETE", "https://api.directfreight.com/v1/optins");

            req.query({
              "notification_medium": "SOME_STRING_VALUE",
              "notification_channel": "all"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `DELETE uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("DELETE",
            "'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/optins');
            $request->setMethod(HTTP_METH_DELETE);

            $request->setQueryData(array(
              'notification_medium' => 'SOME_STRING_VALUE',
              'notification_channel' => 'all'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/optins');
            $request->setRequestMethod('DELETE');
            $request->setQuery(new http\QueryString(array(
              'notification_medium' => 'SOME_STRING_VALUE',
              'notification_channel' => 'all'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("DELETE", "/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/optins"

            querystring = {"notification_medium":"SOME_STRING_VALUE","notification_channel":"all"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("DELETE", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url 'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http DELETE 'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method DELETE \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    get:
      parameters:
        - description: To limit your list to just one medium.
          enum:
            - email
            - text
            - push
          in: query
          name: notification_medium
          required: false
          type: string
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: Status 200
          schema:
            properties:
              list:
                items:
                  properties:
                    notification_channel:
                      default: all
                      type: string
                    notification_medium:
                      enum:
                        - email
                        - text
                        - push
                      type: string
                    status:
                      enum:
                        - optin
                        - optout
                        - no response
                        - no record
                      type: string
                  required:
                    - notification_channel
                    - notification_medium
                    - status
                  type: object
                type: array
            required:
              - list
            type: object
      summary: STAGE=UNK Get the optin status of a user.
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/optins?notification_medium=SOME_STRING_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/optins',
              qs: { notification_medium: 'SOME_STRING_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/optins");

            req.query({
              "notification_medium": "SOME_STRING_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/optins');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'notification_medium' => 'SOME_STRING_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/optins');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'notification_medium' => 'SOME_STRING_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/optins?notification_medium=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/optins"

            querystring = {"notification_medium":"SOME_STRING_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    patch:
      consumes: []
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              notification_medium:
                enum:
                  - email
                  - text
                type: string
              verification_code:
                description: 'This code is generated on a POST, and will arrive via the same medium it was designated for.'
                type: string
            required:
              - notification_medium
              - verification_code
            type: object
      responses:
        '204':
          description: Status 204
      summary: STAGE=UNK Confirm an optin.
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/optins");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/optins");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins\"\n\n\tpayload := strings.NewReader(\"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/optins")
              .patch(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.patch("https://api.directfreight.com/v1/optins")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/optins",
              "method": "PATCH",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "notification_medium": "email",
              "verification_code": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("PATCH", "https://api.directfreight.com/v1/optins");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PATCH",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/optins",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ notification_medium: 'email',
              verification_code: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'PATCH',
              url: 'https://api.directfreight.com/v1/optins',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { notification_medium: 'email',
                 verification_code: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("PATCH", "https://api.directfreight.com/v1/optins");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "notification_medium": "email",
              "verification_code": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"notification_medium": @"email",
                                          @"verification_code": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/optins"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PATCH"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/optins" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `PATCH uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("PATCH",
            "https://api.directfreight.com/v1/optins");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"notification_medium":"email","verification_code":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/optins",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PATCH",
              CURLOPT_POSTFIELDS => "{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('PATCH');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/optins');
            $request->setMethod(HttpRequest::HTTP_METH_PATCH);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"notification_medium":"email","verification_code":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"notification_medium":"email","verification_code":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/optins');
            $request->setRequestMethod('PATCH');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("PATCH", "/v1/optins", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/optins"

            payload = "{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("PATCH", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/optins")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Patch.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request PATCH \
              --url https://api.directfreight.com/v1/optins \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"notification_medium":"email","verification_code":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"notification_medium":"email","verification_code":"<ADD EXAMPLE VALUE>"}' |  \
              http PATCH https://api.directfreight.com/v1/optins \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method PATCH \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"notification_medium":"email","verification_code":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/optins
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "notification_medium": "email",
              "verification_code": "<ADD EXAMPLE VALUE>"
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/optins")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "PATCH"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      consumes: []
      description: 'Currently only Push notifications are implemneted. With them a post creates and approves the optin. Later on when text/email is ported post will create the optin with the status of ''no response'' meaning they haven''t replied with the propper code, or clicked an authorization link.'
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              notification_channel:
                default: all
                description: 'Currently defaults to all, and is ignored. When we start using it it will be for opting people out or in one list like alerts, or messages, but not others.'
                type: string
              notification_medium:
                description: We currently only accept push
                enum:
                  - email
                  - text
                  - push
                type: string
              tokens:
                description: 'This is how you can add multiple push notifications at once, or for systems that have multiple tokens required.'
                example: '"tokens": { "ios": "12345678", "android": "5432344" } '
                properties:
                  $SERVICE_OR_KEY_NAME:
                    description: 'Fill in the key in the value, and the service in the name. Look at our examples for clarification.'
                    type: string
                required:
                  - $SERVICE_OR_KEY_NAME
                type: object
            required:
              - notification_medium
            type: object
      responses:
        '201':
          description: Status 201
      summary: STAGE=UNK Submit a request to be opted in.
      tags:
        - optins
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/optins");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/optins");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins\"\n\n\tpayload := strings.NewReader(\"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/optins")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/optins")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/optins",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "notification_channel": "<ADD EXAMPLE VALUE>",
              "notification_medium": "email",
              "tokens": {
                "$SERVICE_OR_KEY_NAME": "<ADD EXAMPLE VALUE>"
              }
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/optins");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/optins",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ notification_channel: '<ADD EXAMPLE VALUE>',
              notification_medium: 'email',
              tokens: { '$SERVICE_OR_KEY_NAME': '<ADD EXAMPLE VALUE>' } }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/optins',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { notification_channel: '<ADD EXAMPLE VALUE>',
                 notification_medium: 'email',
                 tokens: { '$SERVICE_OR_KEY_NAME': '<ADD EXAMPLE VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/optins");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "notification_channel": "<ADD EXAMPLE VALUE>",
              "notification_medium": "email",
              "tokens": {
                "$SERVICE_OR_KEY_NAME": "<ADD EXAMPLE VALUE>"
              }
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"notification_channel": @"<ADD EXAMPLE VALUE>",
                                          @"notification_medium": @"email",
                                          @"tokens": @{ @"$SERVICE_OR_KEY_NAME": @"<ADD EXAMPLE VALUE>" } };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/optins"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/optins" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/optins");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"notification_channel":"<ADD EXAMPLE VALUE>","notification_medium":"email","tokens":{"$SERVICE_OR_KEY_NAME":"<ADD EXAMPLE VALUE>"}}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/optins",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/optins');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"notification_channel":"<ADD EXAMPLE VALUE>","notification_medium":"email","tokens":{"$SERVICE_OR_KEY_NAME":"<ADD EXAMPLE VALUE>"}}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"notification_channel":"<ADD EXAMPLE VALUE>","notification_medium":"email","tokens":{"$SERVICE_OR_KEY_NAME":"<ADD EXAMPLE VALUE>"}}');

            $request->setRequestUrl('https://api.directfreight.com/v1/optins');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/optins", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/optins"

            payload = "{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/optins")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/optins \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"notification_channel":"<ADD EXAMPLE VALUE>","notification_medium":"email","tokens":{"$SERVICE_OR_KEY_NAME":"<ADD EXAMPLE VALUE>"}}'
        - lang: Shell_httpie
          source: |-
            echo '{"notification_channel":"<ADD EXAMPLE VALUE>","notification_medium":"email","tokens":{"$SERVICE_OR_KEY_NAME":"<ADD EXAMPLE VALUE>"}}' |  \
              http POST https://api.directfreight.com/v1/optins \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"notification_channel":"<ADD EXAMPLE VALUE>","notification_medium":"email","tokens":{"$SERVICE_OR_KEY_NAME":"<ADD EXAMPLE VALUE>"}}' \
              --output-document \
              - https://api.directfreight.com/v1/optins
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "notification_channel": "<ADD EXAMPLE VALUE>",
              "notification_medium": "email",
              "tokens": ["$SERVICE_OR_KEY_NAME": "<ADD EXAMPLE VALUE>"]
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/optins")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: Optins
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/optins");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/optins")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/optins")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/optins",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/optins");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/optins",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/optins',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/optins");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/optins"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/optins" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/optins");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/optins",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/optins');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/optins');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/optins", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/optins"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/optins")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/optins \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/optins \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/optins
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/optins")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  '/postings/{posting_type}':
    delete:
      description: 'Will delete one or more entries. Unless the delete_all parameter is set, only 100 entries can be removed per request.'
      parameters:
        - description: 'This parameter will be ignored if delete_all is specified, otherwise posting_id or custom_id must be specified. The 100 maximum is split between posting_id & custom_id.'
          in: query
          name: posting_id
          required: false
          type: integer
          x-example: '?posting_id=22&posting_id=23&posting_id=24'
        - description: 'You must specify which entry to remove. Will be ignored if delete_all is specified, otherwise it or posting_id must be specified. The 100 maximum is split between posting_id & custom_id.'
          in: query
          name: custom_id
          required: false
          type: string
          x-example: '?custom_id=cats&custom_id=dogs&custom_id=parrots'
        - description: 'If included and true, will delete all loads for the logged in user.'
          in: query
          name: delete_all
          required: false
          type: boolean
          x-example: '?delete_all=true'
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '204':
          description: success operation
      summary: Remove multiple postings
      tags:
        - postings
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE")
              .delete(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.delete("https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE",
              "method": "DELETE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("DELETE", "https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url: 'https://api.directfreight.com/v1/postings/test_loads',
              qs: 
               { posting_id: 'SOME_INTEGER_VALUE',
                 custom_id: 'SOME_STRING_VALUE',
                 delete_all: 'SOME_BOOLEAN_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("DELETE", "https://api.directfreight.com/v1/postings/test_loads");

            req.query({
              "posting_id": "SOME_INTEGER_VALUE",
              "custom_id": "SOME_STRING_VALUE",
              "delete_all": "SOME_BOOLEAN_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `DELETE uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("DELETE",
            "'https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/test_loads');
            $request->setMethod(HTTP_METH_DELETE);

            $request->setQueryData(array(
              'posting_id' => 'SOME_INTEGER_VALUE',
              'custom_id' => 'SOME_STRING_VALUE',
              'delete_all' => 'SOME_BOOLEAN_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/test_loads');
            $request->setRequestMethod('DELETE');
            $request->setQuery(new http\QueryString(array(
              'posting_id' => 'SOME_INTEGER_VALUE',
              'custom_id' => 'SOME_STRING_VALUE',
              'delete_all' => 'SOME_BOOLEAN_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("DELETE", "/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/test_loads"

            querystring = {"posting_id":"SOME_INTEGER_VALUE","custom_id":"SOME_STRING_VALUE","delete_all":"SOME_BOOLEAN_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("DELETE", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url 'https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http DELETE 'https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method DELETE \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    get:
      description: 'Retrieves a list of the users posted loads or trucks. By default it retrieves all of their entries. If you specifiy multiple ids, only 100 entries can be retrieved per request.'
      parameters:
        - description: To retrieve only a subset of entries.
          in: query
          name: posting_id
          required: false
          type: integer
          x-example: '?posting_id=32&posting_id=33&posting_id=34'
        - description: To retrieve only a subset of entries.
          in: query
          name: custom_id
          required: false
          type: string
          x-example: '?custom_id=cats&custom_id=dogs&custom_id=parrots'
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/posting_post_response'
      summary: Retrieve multiple postings
      tags:
        - postings
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/postings/test_loads',
              qs: 
               { posting_id: 'SOME_INTEGER_VALUE',
                 custom_id: 'SOME_STRING_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/postings/test_loads");

            req.query({
              "posting_id": "SOME_INTEGER_VALUE",
              "custom_id": "SOME_STRING_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/test_loads');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'posting_id' => 'SOME_INTEGER_VALUE',
              'custom_id' => 'SOME_STRING_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/test_loads');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'posting_id' => 'SOME_INTEGER_VALUE',
              'custom_id' => 'SOME_STRING_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/test_loads"

            querystring = {"posting_id":"SOME_INTEGER_VALUE","custom_id":"SOME_STRING_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    parameters:
      - description: 'Valid types are "loads", "trucks", "private_loads", "private_trucks", "test_loads", and "test_trucks"'
        enum:
          - test_loads
          - test_trucks
          - private_loads
          - private_trucks
          - loads
          - trucks
        in: path
        name: posting_type
        required: true
        type: string
        x-example: test_loads
    patch:
      consumes: []
      description: Update one or more entries. Only 100 entries can be updated per request.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/postings_patch_object'
      responses:
        '202':
          description: Status 202
          schema:
            properties:
              list:
                $ref: '#/definitions/postings-post_or_patch_response'
            required:
              - list
            type: object
      summary: Update multiple postings
      tags:
        - postings
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/test_loads");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"comment\":\"<ADD EXAMPLE VALUE>\",\"custom_id\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"height\":0,\"length\":0,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\",\"other_trailer_types\":\"<ADD EXAMPLE VALUE>\",\"pay_rate\":0,\"phone_extension\":0,\"phone_number\":0,\"posting_id\":0,\"receive_date\":\"<ADD EXAMPLE VALUE>\",\"ship_date\":\"<ADD EXAMPLE VALUE>\",\"weight\":0,\"width\":0}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/postings/test_loads");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"comment\":\"<ADD EXAMPLE VALUE>\",\"custom_id\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"height\":0,\"length\":0,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\",\"other_trailer_types\":\"<ADD EXAMPLE VALUE>\",\"pay_rate\":0,\"phone_extension\":0,\"phone_number\":0,\"posting_id\":0,\"receive_date\":\"<ADD EXAMPLE VALUE>\",\"ship_date\":\"<ADD EXAMPLE VALUE>\",\"weight\":0,\"width\":0}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/test_loads\"\n\n\tpayload := strings.NewReader(\"{\\\"comment\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"custom_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"full_load\\\":false,\\\"height\\\":0,\\\"length\\\":0,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"other_trailer_types\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"pay_rate\\\":0,\\\"phone_extension\\\":0,\\\"phone_number\\\":0,\\\"posting_id\\\":0,\\\"receive_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"ship_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"weight\\\":0,\\\"width\\\":0}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"comment\":\"<ADD EXAMPLE VALUE>\",\"custom_id\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"height\":0,\"length\":0,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\",\"other_trailer_types\":\"<ADD EXAMPLE VALUE>\",\"pay_rate\":0,\"phone_extension\":0,\"phone_number\":0,\"posting_id\":0,\"receive_date\":\"<ADD EXAMPLE VALUE>\",\"ship_date\":\"<ADD EXAMPLE VALUE>\",\"weight\":0,\"width\":0}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/test_loads")
              .patch(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.patch("https://api.directfreight.com/v1/postings/test_loads")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"comment\":\"<ADD EXAMPLE VALUE>\",\"custom_id\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"height\":0,\"length\":0,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\",\"other_trailer_types\":\"<ADD EXAMPLE VALUE>\",\"pay_rate\":0,\"phone_extension\":0,\"phone_number\":0,\"posting_id\":0,\"receive_date\":\"<ADD EXAMPLE VALUE>\",\"ship_date\":\"<ADD EXAMPLE VALUE>\",\"weight\":0,\"width\":0}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/test_loads",
              "method": "PATCH",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"comment\":\"<ADD EXAMPLE VALUE>\",\"custom_id\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"height\":0,\"length\":0,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\",\"other_trailer_types\":\"<ADD EXAMPLE VALUE>\",\"pay_rate\":0,\"phone_extension\":0,\"phone_number\":0,\"posting_id\":0,\"receive_date\":\"<ADD EXAMPLE VALUE>\",\"ship_date\":\"<ADD EXAMPLE VALUE>\",\"weight\":0,\"width\":0}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "comment": "<ADD EXAMPLE VALUE>",
              "custom_id": "<ADD EXAMPLE VALUE>",
              "destination_city": "<ADD EXAMPLE VALUE>",
              "destination_state": "<ADD EXAMPLE VALUE>",
              "full_load": false,
              "height": 0,
              "length": 0,
              "origin_city": "<ADD EXAMPLE VALUE>",
              "origin_state": "<ADD EXAMPLE VALUE>",
              "other_trailer_types": "<ADD EXAMPLE VALUE>",
              "pay_rate": 0,
              "phone_extension": 0,
              "phone_number": 0,
              "posting_id": 0,
              "receive_date": "<ADD EXAMPLE VALUE>",
              "ship_date": "<ADD EXAMPLE VALUE>",
              "weight": 0,
              "width": 0
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("PATCH", "https://api.directfreight.com/v1/postings/test_loads");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PATCH",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/test_loads",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ comment: '<ADD EXAMPLE VALUE>',
              custom_id: '<ADD EXAMPLE VALUE>',
              destination_city: '<ADD EXAMPLE VALUE>',
              destination_state: '<ADD EXAMPLE VALUE>',
              full_load: false,
              height: 0,
              length: 0,
              origin_city: '<ADD EXAMPLE VALUE>',
              origin_state: '<ADD EXAMPLE VALUE>',
              other_trailer_types: '<ADD EXAMPLE VALUE>',
              pay_rate: 0,
              phone_extension: 0,
              phone_number: 0,
              posting_id: 0,
              receive_date: '<ADD EXAMPLE VALUE>',
              ship_date: '<ADD EXAMPLE VALUE>',
              weight: 0,
              width: 0 }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'PATCH',
              url: 'https://api.directfreight.com/v1/postings/test_loads',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { comment: '<ADD EXAMPLE VALUE>',
                 custom_id: '<ADD EXAMPLE VALUE>',
                 destination_city: '<ADD EXAMPLE VALUE>',
                 destination_state: '<ADD EXAMPLE VALUE>',
                 full_load: false,
                 height: 0,
                 length: 0,
                 origin_city: '<ADD EXAMPLE VALUE>',
                 origin_state: '<ADD EXAMPLE VALUE>',
                 other_trailer_types: '<ADD EXAMPLE VALUE>',
                 pay_rate: 0,
                 phone_extension: 0,
                 phone_number: 0,
                 posting_id: 0,
                 receive_date: '<ADD EXAMPLE VALUE>',
                 ship_date: '<ADD EXAMPLE VALUE>',
                 weight: 0,
                 width: 0 },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("PATCH", "https://api.directfreight.com/v1/postings/test_loads");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "comment": "<ADD EXAMPLE VALUE>",
              "custom_id": "<ADD EXAMPLE VALUE>",
              "destination_city": "<ADD EXAMPLE VALUE>",
              "destination_state": "<ADD EXAMPLE VALUE>",
              "full_load": false,
              "height": 0,
              "length": 0,
              "origin_city": "<ADD EXAMPLE VALUE>",
              "origin_state": "<ADD EXAMPLE VALUE>",
              "other_trailer_types": "<ADD EXAMPLE VALUE>",
              "pay_rate": 0,
              "phone_extension": 0,
              "phone_number": 0,
              "posting_id": 0,
              "receive_date": "<ADD EXAMPLE VALUE>",
              "ship_date": "<ADD EXAMPLE VALUE>",
              "weight": 0,
              "width": 0
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"comment": @"<ADD EXAMPLE VALUE>",
                                          @"custom_id": @"<ADD EXAMPLE VALUE>",
                                          @"destination_city": @"<ADD EXAMPLE VALUE>",
                                          @"destination_state": @"<ADD EXAMPLE VALUE>",
                                          @"full_load": @NO,
                                          @"height": @0,
                                          @"length": @0,
                                          @"origin_city": @"<ADD EXAMPLE VALUE>",
                                          @"origin_state": @"<ADD EXAMPLE VALUE>",
                                          @"other_trailer_types": @"<ADD EXAMPLE VALUE>",
                                          @"pay_rate": @0,
                                          @"phone_extension": @0,
                                          @"phone_number": @0,
                                          @"posting_id": @0,
                                          @"receive_date": @"<ADD EXAMPLE VALUE>",
                                          @"ship_date": @"<ADD EXAMPLE VALUE>",
                                          @"weight": @0,
                                          @"width": @0 };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/test_loads"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PATCH"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/test_loads" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"comment\":\"<ADD EXAMPLE VALUE>\",\"custom_id\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"height\":0,\"length\":0,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\",\"other_trailer_types\":\"<ADD EXAMPLE VALUE>\",\"pay_rate\":0,\"phone_extension\":0,\"phone_number\":0,\"posting_id\":0,\"receive_date\":\"<ADD EXAMPLE VALUE>\",\"ship_date\":\"<ADD EXAMPLE VALUE>\",\"weight\":0,\"width\":0}" in

            Client.call ~headers ~body `PATCH uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("PATCH",
            "https://api.directfreight.com/v1/postings/test_loads");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"comment":"<ADD EXAMPLE VALUE>","custom_id":"<ADD EXAMPLE VALUE>","destination_city":"<ADD EXAMPLE VALUE>","destination_state":"<ADD EXAMPLE VALUE>","full_load":false,"height":0,"length":0,"origin_city":"<ADD EXAMPLE VALUE>","origin_state":"<ADD EXAMPLE VALUE>","other_trailer_types":"<ADD EXAMPLE VALUE>","pay_rate":0,"phone_extension":0,"phone_number":0,"posting_id":0,"receive_date":"<ADD EXAMPLE VALUE>","ship_date":"<ADD EXAMPLE VALUE>","weight":0,"width":0}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/test_loads",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PATCH",
              CURLOPT_POSTFIELDS => "{\"comment\":\"<ADD EXAMPLE VALUE>\",\"custom_id\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"height\":0,\"length\":0,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\",\"other_trailer_types\":\"<ADD EXAMPLE VALUE>\",\"pay_rate\":0,\"phone_extension\":0,\"phone_number\":0,\"posting_id\":0,\"receive_date\":\"<ADD EXAMPLE VALUE>\",\"ship_date\":\"<ADD EXAMPLE VALUE>\",\"weight\":0,\"width\":0}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('PATCH');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/test_loads');
            $request->setMethod(HttpRequest::HTTP_METH_PATCH);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"comment":"<ADD EXAMPLE VALUE>","custom_id":"<ADD EXAMPLE VALUE>","destination_city":"<ADD EXAMPLE VALUE>","destination_state":"<ADD EXAMPLE VALUE>","full_load":false,"height":0,"length":0,"origin_city":"<ADD EXAMPLE VALUE>","origin_state":"<ADD EXAMPLE VALUE>","other_trailer_types":"<ADD EXAMPLE VALUE>","pay_rate":0,"phone_extension":0,"phone_number":0,"posting_id":0,"receive_date":"<ADD EXAMPLE VALUE>","ship_date":"<ADD EXAMPLE VALUE>","weight":0,"width":0}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"comment":"<ADD EXAMPLE VALUE>","custom_id":"<ADD EXAMPLE VALUE>","destination_city":"<ADD EXAMPLE VALUE>","destination_state":"<ADD EXAMPLE VALUE>","full_load":false,"height":0,"length":0,"origin_city":"<ADD EXAMPLE VALUE>","origin_state":"<ADD EXAMPLE VALUE>","other_trailer_types":"<ADD EXAMPLE VALUE>","pay_rate":0,"phone_extension":0,"phone_number":0,"posting_id":0,"receive_date":"<ADD EXAMPLE VALUE>","ship_date":"<ADD EXAMPLE VALUE>","weight":0,"width":0}');

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/test_loads');
            $request->setRequestMethod('PATCH');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"comment\":\"<ADD EXAMPLE VALUE>\",\"custom_id\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"height\":0,\"length\":0,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\",\"other_trailer_types\":\"<ADD EXAMPLE VALUE>\",\"pay_rate\":0,\"phone_extension\":0,\"phone_number\":0,\"posting_id\":0,\"receive_date\":\"<ADD EXAMPLE VALUE>\",\"ship_date\":\"<ADD EXAMPLE VALUE>\",\"weight\":0,\"width\":0}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("PATCH", "/v1/postings/test_loads", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/test_loads"

            payload = "{\"comment\":\"<ADD EXAMPLE VALUE>\",\"custom_id\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"height\":0,\"length\":0,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\",\"other_trailer_types\":\"<ADD EXAMPLE VALUE>\",\"pay_rate\":0,\"phone_extension\":0,\"phone_number\":0,\"posting_id\":0,\"receive_date\":\"<ADD EXAMPLE VALUE>\",\"ship_date\":\"<ADD EXAMPLE VALUE>\",\"weight\":0,\"width\":0}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("PATCH", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/postings/test_loads")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Patch.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"comment\":\"<ADD EXAMPLE VALUE>\",\"custom_id\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"height\":0,\"length\":0,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\",\"other_trailer_types\":\"<ADD EXAMPLE VALUE>\",\"pay_rate\":0,\"phone_extension\":0,\"phone_number\":0,\"posting_id\":0,\"receive_date\":\"<ADD EXAMPLE VALUE>\",\"ship_date\":\"<ADD EXAMPLE VALUE>\",\"weight\":0,\"width\":0}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request PATCH \
              --url https://api.directfreight.com/v1/postings/test_loads \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"comment":"<ADD EXAMPLE VALUE>","custom_id":"<ADD EXAMPLE VALUE>","destination_city":"<ADD EXAMPLE VALUE>","destination_state":"<ADD EXAMPLE VALUE>","full_load":false,"height":0,"length":0,"origin_city":"<ADD EXAMPLE VALUE>","origin_state":"<ADD EXAMPLE VALUE>","other_trailer_types":"<ADD EXAMPLE VALUE>","pay_rate":0,"phone_extension":0,"phone_number":0,"posting_id":0,"receive_date":"<ADD EXAMPLE VALUE>","ship_date":"<ADD EXAMPLE VALUE>","weight":0,"width":0}'
        - lang: Shell_httpie
          source: |-
            echo '{"comment":"<ADD EXAMPLE VALUE>","custom_id":"<ADD EXAMPLE VALUE>","destination_city":"<ADD EXAMPLE VALUE>","destination_state":"<ADD EXAMPLE VALUE>","full_load":false,"height":0,"length":0,"origin_city":"<ADD EXAMPLE VALUE>","origin_state":"<ADD EXAMPLE VALUE>","other_trailer_types":"<ADD EXAMPLE VALUE>","pay_rate":0,"phone_extension":0,"phone_number":0,"posting_id":0,"receive_date":"<ADD EXAMPLE VALUE>","ship_date":"<ADD EXAMPLE VALUE>","weight":0,"width":0}' |  \
              http PATCH https://api.directfreight.com/v1/postings/test_loads \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method PATCH \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"comment":"<ADD EXAMPLE VALUE>","custom_id":"<ADD EXAMPLE VALUE>","destination_city":"<ADD EXAMPLE VALUE>","destination_state":"<ADD EXAMPLE VALUE>","full_load":false,"height":0,"length":0,"origin_city":"<ADD EXAMPLE VALUE>","origin_state":"<ADD EXAMPLE VALUE>","other_trailer_types":"<ADD EXAMPLE VALUE>","pay_rate":0,"phone_extension":0,"phone_number":0,"posting_id":0,"receive_date":"<ADD EXAMPLE VALUE>","ship_date":"<ADD EXAMPLE VALUE>","weight":0,"width":0}' \
              --output-document \
              - https://api.directfreight.com/v1/postings/test_loads
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "comment": "<ADD EXAMPLE VALUE>",
              "custom_id": "<ADD EXAMPLE VALUE>",
              "destination_city": "<ADD EXAMPLE VALUE>",
              "destination_state": "<ADD EXAMPLE VALUE>",
              "full_load": false,
              "height": 0,
              "length": 0,
              "origin_city": "<ADD EXAMPLE VALUE>",
              "origin_state": "<ADD EXAMPLE VALUE>",
              "other_trailer_types": "<ADD EXAMPLE VALUE>",
              "pay_rate": 0,
              "phone_extension": 0,
              "phone_number": 0,
              "posting_id": 0,
              "receive_date": "<ADD EXAMPLE VALUE>",
              "ship_date": "<ADD EXAMPLE VALUE>",
              "weight": 0,
              "width": 0
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/test_loads")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "PATCH"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      consumes: []
      description: |-
        This endpoint method will post one or more entries. Valid posting_type are: loads, trucks, test_loads, test_trucks, private_loads, and private_trucks.

        Only 100 entries can be created per request.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              list:
                items:
                  $ref: '#/definitions/postings_entry_object'
                maxItems: 100
                type: array
            required:
              - list
            type: object
      responses:
        '202':
          description: Loads accepted. Check the response for an ordered list of response.
          schema:
            $ref: '#/definitions/postings-post_or_patch_response'
      summary: Create multiple postings
      tags:
        - postings
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/test_loads");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/postings/test_loads");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/test_loads\"\n\n\tpayload := strings.NewReader(\"{}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/test_loads")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/postings/test_loads")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/test_loads",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({});

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/postings/test_loads");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/test_loads",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({}));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/postings/test_loads',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: {},
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/postings/test_loads");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({});

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{  };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/test_loads"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/test_loads" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/postings/test_loads");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/test_loads",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/test_loads');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{}');

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/test_loads');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/postings/test_loads", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/test_loads"

            payload = "{}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/postings/test_loads")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/postings/test_loads \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{}'
        - lang: Shell_httpie
          source: |-
            echo '{}' |  \
              http POST https://api.directfreight.com/v1/postings/test_loads \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{}' \
              --output-document \
              - https://api.directfreight.com/v1/postings/test_loads
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = []

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/test_loads")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: POSTINGS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/test_loads");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/test_loads\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/test_loads")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/postings/test_loads")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/test_loads",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/postings/test_loads");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/test_loads",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/postings/test_loads',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/postings/test_loads");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/test_loads"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/test_loads" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/postings/test_loads");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/test_loads",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/test_loads');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/test_loads');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/postings/test_loads", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/test_loads"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/postings/test_loads")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/postings/test_loads \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/postings/test_loads \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/postings/test_loads
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/test_loads")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  '/postings/{posting_type}/{action}':
    parameters:
      - description: 'Valid types are "loads", "trucks", "private_loads", "private_trucks", "test_loads", and "test_trucks"'
        enum:
          - loads
          - trucks
          - private_loads
          - private_trucks
          - test_loads
          - test_trucks
        in: path
        name: posting_type
        required: true
        type: string
      - description: 'Specified in the url. Valid types are "copy", and "move"'
        enum:
          - copy
          - move
        in: path
        name: action
        required: true
        type: string
    post:
      consumes: []
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/post_posting_type_action_body'
      responses:
        '201':
          $ref: '#/responses/object_created'
      summary: STAGE=UNK Copy or Move an posting.
      tags:
        - postings
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/loads/copy");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"source_id\":{},\"source_posting\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/postings/loads/copy");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"source_id\":{},\"source_posting\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/loads/copy\"\n\n\tpayload := strings.NewReader(\"{\\\"source_id\\\":{},\\\"source_posting\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"source_id\":{},\"source_posting\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/loads/copy")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/postings/loads/copy")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"source_id\":{},\"source_posting\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/loads/copy",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"source_id\":{},\"source_posting\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "source_id": {},
              "source_posting": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/postings/loads/copy");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/loads/copy",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ source_id: {}, source_posting: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/postings/loads/copy',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: { source_id: {}, source_posting: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/postings/loads/copy");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "source_id": {},
              "source_posting": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"source_id": @{  },
                                          @"source_posting": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/loads/copy"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/loads/copy" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"source_id\":{},\"source_posting\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/postings/loads/copy");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"source_id":{},"source_posting":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/loads/copy",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"source_id\":{},\"source_posting\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/loads/copy');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"source_id":{},"source_posting":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"source_id":{},"source_posting":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/loads/copy');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"source_id\":{},\"source_posting\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/postings/loads/copy", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/loads/copy"

            payload = "{\"source_id\":{},\"source_posting\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/postings/loads/copy")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"source_id\":{},\"source_posting\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/postings/loads/copy \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"source_id":{},"source_posting":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"source_id":{},"source_posting":"<ADD EXAMPLE VALUE>"}' |  \
              http POST https://api.directfreight.com/v1/postings/loads/copy \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"source_id":{},"source_posting":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/postings/loads/copy
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "source_id": [],
              "source_posting": "<ADD EXAMPLE VALUE>"
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/loads/copy")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: POSTINGS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/loads/copy");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/loads/copy\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/loads/copy")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/postings/loads/copy")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/loads/copy",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/postings/loads/copy");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/loads/copy",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/postings/loads/copy',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/postings/loads/copy");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/loads/copy"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/loads/copy" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/postings/loads/copy");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/loads/copy",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/loads/copy');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/loads/copy');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/postings/loads/copy", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/loads/copy"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/postings/loads/copy")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/postings/loads/copy \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/postings/loads/copy \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/postings/loads/copy
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/loads/copy")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  '/postings/custom_categories/{category_type}':
    delete:
      parameters:
        - description: To just delete information about some postings.
          in: query
          items:
            type: string
          name: category_id
          required: false
          type: array
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '204':
          description: 200 OK
      summary: 'STAGE=UNK Delete some or all custom columns, or custom_column data.'
      tags:
        - postings
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE")
              .delete(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.delete("https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE",
              "method": "DELETE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("DELETE", "https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url: 'https://api.directfreight.com/v1/postings/custom_categories/names',
              qs: { category_id: 'SOME_ARRAY_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("DELETE", "https://api.directfreight.com/v1/postings/custom_categories/names");

            req.query({
              "category_id": "SOME_ARRAY_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `DELETE uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("DELETE",
            "'https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/custom_categories/names');
            $request->setMethod(HTTP_METH_DELETE);

            $request->setQueryData(array(
              'category_id' => 'SOME_ARRAY_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/custom_categories/names');
            $request->setRequestMethod('DELETE');
            $request->setQuery(new http\QueryString(array(
              'category_id' => 'SOME_ARRAY_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("DELETE", "/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/custom_categories/names"

            querystring = {"category_id":"SOME_ARRAY_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("DELETE", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url 'https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http DELETE 'https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method DELETE \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    get:
      parameters:
        - description: To just return information about some postings.
          in: query
          items:
            type: string
          name: category_id
          required: false
          type: array
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/get_custom_categories_response'
      summary: 'STAGE=UNK Get a list of custom columns, or custom_column data.'
      tags:
        - postings
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/postings/custom_categories/names',
              qs: { category_id: 'SOME_ARRAY_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/postings/custom_categories/names");

            req.query({
              "category_id": "SOME_ARRAY_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/custom_categories/names');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'category_id' => 'SOME_ARRAY_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/custom_categories/names');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'category_id' => 'SOME_ARRAY_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/custom_categories/names"

            querystring = {"category_id":"SOME_ARRAY_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    parameters:
      - description: 'Valid types are "names", and "data".'
        enum:
          - names
          - data
        in: path
        name: category_type
        required: true
        type: string
        x-example: names
    patch:
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '204':
          description: successful operation
      summary: 'STAGE=UNK Update a category name, or value.'
      tags:
        - postings
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/custom_categories/names");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/postings/custom_categories/names");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/custom_categories/names\"\n\n\treq, _ := http.NewRequest(\"PATCH\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/custom_categories/names")
              .patch(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.patch("https://api.directfreight.com/v1/postings/custom_categories/names")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/custom_categories/names",
              "method": "PATCH",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("PATCH", "https://api.directfreight.com/v1/postings/custom_categories/names");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PATCH",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/custom_categories/names",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'PATCH',
              url: 'https://api.directfreight.com/v1/postings/custom_categories/names',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("PATCH", "https://api.directfreight.com/v1/postings/custom_categories/names");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/custom_categories/names"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PATCH"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/custom_categories/names" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `PATCH uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("PATCH",
            "https://api.directfreight.com/v1/postings/custom_categories/names");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/custom_categories/names",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PATCH",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('PATCH');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/custom_categories/names');
            $request->setMethod(HttpRequest::HTTP_METH_PATCH);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/custom_categories/names');
            $request->setRequestMethod('PATCH');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("PATCH", "/v1/postings/custom_categories/names", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/custom_categories/names"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("PATCH", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/postings/custom_categories/names")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Patch.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request PATCH \
              --url https://api.directfreight.com/v1/postings/custom_categories/names \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http PATCH https://api.directfreight.com/v1/postings/custom_categories/names \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method PATCH \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/postings/custom_categories/names
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/custom_categories/names")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "PATCH"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '201':
          $ref: '#/responses/object_created'
      summary: 'STAGE=UNK Create new category names, or add new data.'
      tags:
        - postings
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/custom_categories/names");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/postings/custom_categories/names");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/custom_categories/names\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/custom_categories/names")
              .post(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/postings/custom_categories/names")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/custom_categories/names",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/postings/custom_categories/names");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/custom_categories/names",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/postings/custom_categories/names',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/postings/custom_categories/names");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/custom_categories/names"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/custom_categories/names" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/postings/custom_categories/names");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/custom_categories/names",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/custom_categories/names');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/custom_categories/names');
            $request->setRequestMethod('POST');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/postings/custom_categories/names", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/custom_categories/names"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/postings/custom_categories/names")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/postings/custom_categories/names \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http POST https://api.directfreight.com/v1/postings/custom_categories/names \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/postings/custom_categories/names
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/custom_categories/names")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: POSTINGS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/custom_categories/names");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/custom_categories/names\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/custom_categories/names")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/postings/custom_categories/names")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/custom_categories/names",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/postings/custom_categories/names");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/custom_categories/names",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/postings/custom_categories/names',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/postings/custom_categories/names");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/custom_categories/names"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/custom_categories/names" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/postings/custom_categories/names");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/custom_categories/names",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/custom_categories/names');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/custom_categories/names');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/postings/custom_categories/names", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/custom_categories/names"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/postings/custom_categories/names")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/postings/custom_categories/names \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/postings/custom_categories/names \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/postings/custom_categories/names
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/custom_categories/names")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /profiles:
    get:
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/profile_object'
      summary: STAGE=UNK Request the logged in user's profile.
      tags:
        - profiles
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/profiles");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/profiles");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/profiles")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/profiles")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/profiles",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/profiles");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/profiles",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/profiles',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/profiles");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/profiles"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/profiles" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "https://api.directfreight.com/v1/profiles");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/profiles",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/profiles');
            $request->setMethod(HTTP_METH_GET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/profiles');
            $request->setRequestMethod('GET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/profiles", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/profiles"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/profiles")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.directfreight.com/v1/profiles \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET https://api.directfreight.com/v1/profiles \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/profiles
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/profiles")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    patch:
      consumes: []
      description: Please send in at least one field to be updated.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/profile_object'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/profile_object'
      summary: STAGE=UNK Update profile information.
      tags:
        - profiles
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/profiles");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/profiles");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles\"\n\n\tpayload := strings.NewReader(\"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/profiles")
              .patch(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.patch("https://api.directfreight.com/v1/profiles")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/profiles",
              "method": "PATCH",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "address": "<ADD EXAMPLE VALUE>",
              "city": "<ADD EXAMPLE VALUE>",
              "company": "<ADD EXAMPLE VALUE>",
              "contact_extension": 0,
              "contact_name": "<ADD EXAMPLE VALUE>",
              "contact_number": 0,
              "dispatch_extension": 0,
              "dispatch_number": 0,
              "dot_number": "<ADD EXAMPLE VALUE>",
              "fax_number": 0,
              "mc_number": "<ADD EXAMPLE VALUE>",
              "mobile_carrier": "Other/Unknown",
              "mobile_number": 0,
              "state": "<ADD EXAMPLE VALUE>",
              "web_page": "<ADD EXAMPLE VALUE>",
              "zip": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("PATCH", "https://api.directfreight.com/v1/profiles");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PATCH",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/profiles",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ address: '<ADD EXAMPLE VALUE>',
              city: '<ADD EXAMPLE VALUE>',
              company: '<ADD EXAMPLE VALUE>',
              contact_extension: 0,
              contact_name: '<ADD EXAMPLE VALUE>',
              contact_number: 0,
              dispatch_extension: 0,
              dispatch_number: 0,
              dot_number: '<ADD EXAMPLE VALUE>',
              fax_number: 0,
              mc_number: '<ADD EXAMPLE VALUE>',
              mobile_carrier: 'Other/Unknown',
              mobile_number: 0,
              state: '<ADD EXAMPLE VALUE>',
              web_page: '<ADD EXAMPLE VALUE>',
              zip: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'PATCH',
              url: 'https://api.directfreight.com/v1/profiles',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { address: '<ADD EXAMPLE VALUE>',
                 city: '<ADD EXAMPLE VALUE>',
                 company: '<ADD EXAMPLE VALUE>',
                 contact_extension: 0,
                 contact_name: '<ADD EXAMPLE VALUE>',
                 contact_number: 0,
                 dispatch_extension: 0,
                 dispatch_number: 0,
                 dot_number: '<ADD EXAMPLE VALUE>',
                 fax_number: 0,
                 mc_number: '<ADD EXAMPLE VALUE>',
                 mobile_carrier: 'Other/Unknown',
                 mobile_number: 0,
                 state: '<ADD EXAMPLE VALUE>',
                 web_page: '<ADD EXAMPLE VALUE>',
                 zip: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("PATCH", "https://api.directfreight.com/v1/profiles");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "address": "<ADD EXAMPLE VALUE>",
              "city": "<ADD EXAMPLE VALUE>",
              "company": "<ADD EXAMPLE VALUE>",
              "contact_extension": 0,
              "contact_name": "<ADD EXAMPLE VALUE>",
              "contact_number": 0,
              "dispatch_extension": 0,
              "dispatch_number": 0,
              "dot_number": "<ADD EXAMPLE VALUE>",
              "fax_number": 0,
              "mc_number": "<ADD EXAMPLE VALUE>",
              "mobile_carrier": "Other/Unknown",
              "mobile_number": 0,
              "state": "<ADD EXAMPLE VALUE>",
              "web_page": "<ADD EXAMPLE VALUE>",
              "zip": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"address": @"<ADD EXAMPLE VALUE>",
                                          @"city": @"<ADD EXAMPLE VALUE>",
                                          @"company": @"<ADD EXAMPLE VALUE>",
                                          @"contact_extension": @0,
                                          @"contact_name": @"<ADD EXAMPLE VALUE>",
                                          @"contact_number": @0,
                                          @"dispatch_extension": @0,
                                          @"dispatch_number": @0,
                                          @"dot_number": @"<ADD EXAMPLE VALUE>",
                                          @"fax_number": @0,
                                          @"mc_number": @"<ADD EXAMPLE VALUE>",
                                          @"mobile_carrier": @"Other/Unknown",
                                          @"mobile_number": @0,
                                          @"state": @"<ADD EXAMPLE VALUE>",
                                          @"web_page": @"<ADD EXAMPLE VALUE>",
                                          @"zip": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/profiles"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PATCH"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/profiles" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `PATCH uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("PATCH",
            "https://api.directfreight.com/v1/profiles");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"address":"<ADD EXAMPLE VALUE>","city":"<ADD EXAMPLE VALUE>","company":"<ADD EXAMPLE VALUE>","contact_extension":0,"contact_name":"<ADD EXAMPLE VALUE>","contact_number":0,"dispatch_extension":0,"dispatch_number":0,"dot_number":"<ADD EXAMPLE VALUE>","fax_number":0,"mc_number":"<ADD EXAMPLE VALUE>","mobile_carrier":"Other/Unknown","mobile_number":0,"state":"<ADD EXAMPLE VALUE>","web_page":"<ADD EXAMPLE VALUE>","zip":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/profiles",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PATCH",
              CURLOPT_POSTFIELDS => "{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('PATCH');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/profiles');
            $request->setMethod(HttpRequest::HTTP_METH_PATCH);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"address":"<ADD EXAMPLE VALUE>","city":"<ADD EXAMPLE VALUE>","company":"<ADD EXAMPLE VALUE>","contact_extension":0,"contact_name":"<ADD EXAMPLE VALUE>","contact_number":0,"dispatch_extension":0,"dispatch_number":0,"dot_number":"<ADD EXAMPLE VALUE>","fax_number":0,"mc_number":"<ADD EXAMPLE VALUE>","mobile_carrier":"Other/Unknown","mobile_number":0,"state":"<ADD EXAMPLE VALUE>","web_page":"<ADD EXAMPLE VALUE>","zip":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"address":"<ADD EXAMPLE VALUE>","city":"<ADD EXAMPLE VALUE>","company":"<ADD EXAMPLE VALUE>","contact_extension":0,"contact_name":"<ADD EXAMPLE VALUE>","contact_number":0,"dispatch_extension":0,"dispatch_number":0,"dot_number":"<ADD EXAMPLE VALUE>","fax_number":0,"mc_number":"<ADD EXAMPLE VALUE>","mobile_carrier":"Other/Unknown","mobile_number":0,"state":"<ADD EXAMPLE VALUE>","web_page":"<ADD EXAMPLE VALUE>","zip":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/profiles');
            $request->setRequestMethod('PATCH');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("PATCH", "/v1/profiles", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/profiles"

            payload = "{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("PATCH", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/profiles")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Patch.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request PATCH \
              --url https://api.directfreight.com/v1/profiles \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"address":"<ADD EXAMPLE VALUE>","city":"<ADD EXAMPLE VALUE>","company":"<ADD EXAMPLE VALUE>","contact_extension":0,"contact_name":"<ADD EXAMPLE VALUE>","contact_number":0,"dispatch_extension":0,"dispatch_number":0,"dot_number":"<ADD EXAMPLE VALUE>","fax_number":0,"mc_number":"<ADD EXAMPLE VALUE>","mobile_carrier":"Other/Unknown","mobile_number":0,"state":"<ADD EXAMPLE VALUE>","web_page":"<ADD EXAMPLE VALUE>","zip":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"address":"<ADD EXAMPLE VALUE>","city":"<ADD EXAMPLE VALUE>","company":"<ADD EXAMPLE VALUE>","contact_extension":0,"contact_name":"<ADD EXAMPLE VALUE>","contact_number":0,"dispatch_extension":0,"dispatch_number":0,"dot_number":"<ADD EXAMPLE VALUE>","fax_number":0,"mc_number":"<ADD EXAMPLE VALUE>","mobile_carrier":"Other/Unknown","mobile_number":0,"state":"<ADD EXAMPLE VALUE>","web_page":"<ADD EXAMPLE VALUE>","zip":"<ADD EXAMPLE VALUE>"}' |  \
              http PATCH https://api.directfreight.com/v1/profiles \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method PATCH \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"address":"<ADD EXAMPLE VALUE>","city":"<ADD EXAMPLE VALUE>","company":"<ADD EXAMPLE VALUE>","contact_extension":0,"contact_name":"<ADD EXAMPLE VALUE>","contact_number":0,"dispatch_extension":0,"dispatch_number":0,"dot_number":"<ADD EXAMPLE VALUE>","fax_number":0,"mc_number":"<ADD EXAMPLE VALUE>","mobile_carrier":"Other/Unknown","mobile_number":0,"state":"<ADD EXAMPLE VALUE>","web_page":"<ADD EXAMPLE VALUE>","zip":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/profiles
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "address": "<ADD EXAMPLE VALUE>",
              "city": "<ADD EXAMPLE VALUE>",
              "company": "<ADD EXAMPLE VALUE>",
              "contact_extension": 0,
              "contact_name": "<ADD EXAMPLE VALUE>",
              "contact_number": 0,
              "dispatch_extension": 0,
              "dispatch_number": 0,
              "dot_number": "<ADD EXAMPLE VALUE>",
              "fax_number": 0,
              "mc_number": "<ADD EXAMPLE VALUE>",
              "mobile_carrier": "Other/Unknown",
              "mobile_number": 0,
              "state": "<ADD EXAMPLE VALUE>",
              "web_page": "<ADD EXAMPLE VALUE>",
              "zip": "<ADD EXAMPLE VALUE>"
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/profiles")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "PATCH"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      consumes: []
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/profile_object'
      responses:
        '201':
          description: Object created
          headers:
            Location:
              description: This will have a fully qualified API url you can call to get details of your profile.
              type: string
              x-example: 'https://api.directfreight.com/v1/profiles/'
      summary: STAGE=UNK Create a new profile.
      tags:
        - profiles
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/profiles");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/profiles");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles\"\n\n\tpayload := strings.NewReader(\"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/profiles")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/profiles")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/profiles",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "address": "<ADD EXAMPLE VALUE>",
              "city": "<ADD EXAMPLE VALUE>",
              "company": "<ADD EXAMPLE VALUE>",
              "contact_extension": 0,
              "contact_name": "<ADD EXAMPLE VALUE>",
              "contact_number": 0,
              "dispatch_extension": 0,
              "dispatch_number": 0,
              "dot_number": "<ADD EXAMPLE VALUE>",
              "fax_number": 0,
              "mc_number": "<ADD EXAMPLE VALUE>",
              "mobile_carrier": "Other/Unknown",
              "mobile_number": 0,
              "state": "<ADD EXAMPLE VALUE>",
              "web_page": "<ADD EXAMPLE VALUE>",
              "zip": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/profiles");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/profiles",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ address: '<ADD EXAMPLE VALUE>',
              city: '<ADD EXAMPLE VALUE>',
              company: '<ADD EXAMPLE VALUE>',
              contact_extension: 0,
              contact_name: '<ADD EXAMPLE VALUE>',
              contact_number: 0,
              dispatch_extension: 0,
              dispatch_number: 0,
              dot_number: '<ADD EXAMPLE VALUE>',
              fax_number: 0,
              mc_number: '<ADD EXAMPLE VALUE>',
              mobile_carrier: 'Other/Unknown',
              mobile_number: 0,
              state: '<ADD EXAMPLE VALUE>',
              web_page: '<ADD EXAMPLE VALUE>',
              zip: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/profiles',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { address: '<ADD EXAMPLE VALUE>',
                 city: '<ADD EXAMPLE VALUE>',
                 company: '<ADD EXAMPLE VALUE>',
                 contact_extension: 0,
                 contact_name: '<ADD EXAMPLE VALUE>',
                 contact_number: 0,
                 dispatch_extension: 0,
                 dispatch_number: 0,
                 dot_number: '<ADD EXAMPLE VALUE>',
                 fax_number: 0,
                 mc_number: '<ADD EXAMPLE VALUE>',
                 mobile_carrier: 'Other/Unknown',
                 mobile_number: 0,
                 state: '<ADD EXAMPLE VALUE>',
                 web_page: '<ADD EXAMPLE VALUE>',
                 zip: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/profiles");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "address": "<ADD EXAMPLE VALUE>",
              "city": "<ADD EXAMPLE VALUE>",
              "company": "<ADD EXAMPLE VALUE>",
              "contact_extension": 0,
              "contact_name": "<ADD EXAMPLE VALUE>",
              "contact_number": 0,
              "dispatch_extension": 0,
              "dispatch_number": 0,
              "dot_number": "<ADD EXAMPLE VALUE>",
              "fax_number": 0,
              "mc_number": "<ADD EXAMPLE VALUE>",
              "mobile_carrier": "Other/Unknown",
              "mobile_number": 0,
              "state": "<ADD EXAMPLE VALUE>",
              "web_page": "<ADD EXAMPLE VALUE>",
              "zip": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"address": @"<ADD EXAMPLE VALUE>",
                                          @"city": @"<ADD EXAMPLE VALUE>",
                                          @"company": @"<ADD EXAMPLE VALUE>",
                                          @"contact_extension": @0,
                                          @"contact_name": @"<ADD EXAMPLE VALUE>",
                                          @"contact_number": @0,
                                          @"dispatch_extension": @0,
                                          @"dispatch_number": @0,
                                          @"dot_number": @"<ADD EXAMPLE VALUE>",
                                          @"fax_number": @0,
                                          @"mc_number": @"<ADD EXAMPLE VALUE>",
                                          @"mobile_carrier": @"Other/Unknown",
                                          @"mobile_number": @0,
                                          @"state": @"<ADD EXAMPLE VALUE>",
                                          @"web_page": @"<ADD EXAMPLE VALUE>",
                                          @"zip": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/profiles"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/profiles" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/profiles");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"address":"<ADD EXAMPLE VALUE>","city":"<ADD EXAMPLE VALUE>","company":"<ADD EXAMPLE VALUE>","contact_extension":0,"contact_name":"<ADD EXAMPLE VALUE>","contact_number":0,"dispatch_extension":0,"dispatch_number":0,"dot_number":"<ADD EXAMPLE VALUE>","fax_number":0,"mc_number":"<ADD EXAMPLE VALUE>","mobile_carrier":"Other/Unknown","mobile_number":0,"state":"<ADD EXAMPLE VALUE>","web_page":"<ADD EXAMPLE VALUE>","zip":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/profiles",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/profiles');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"address":"<ADD EXAMPLE VALUE>","city":"<ADD EXAMPLE VALUE>","company":"<ADD EXAMPLE VALUE>","contact_extension":0,"contact_name":"<ADD EXAMPLE VALUE>","contact_number":0,"dispatch_extension":0,"dispatch_number":0,"dot_number":"<ADD EXAMPLE VALUE>","fax_number":0,"mc_number":"<ADD EXAMPLE VALUE>","mobile_carrier":"Other/Unknown","mobile_number":0,"state":"<ADD EXAMPLE VALUE>","web_page":"<ADD EXAMPLE VALUE>","zip":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"address":"<ADD EXAMPLE VALUE>","city":"<ADD EXAMPLE VALUE>","company":"<ADD EXAMPLE VALUE>","contact_extension":0,"contact_name":"<ADD EXAMPLE VALUE>","contact_number":0,"dispatch_extension":0,"dispatch_number":0,"dot_number":"<ADD EXAMPLE VALUE>","fax_number":0,"mc_number":"<ADD EXAMPLE VALUE>","mobile_carrier":"Other/Unknown","mobile_number":0,"state":"<ADD EXAMPLE VALUE>","web_page":"<ADD EXAMPLE VALUE>","zip":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/profiles');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/profiles", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/profiles"

            payload = "{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/profiles")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/profiles \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"address":"<ADD EXAMPLE VALUE>","city":"<ADD EXAMPLE VALUE>","company":"<ADD EXAMPLE VALUE>","contact_extension":0,"contact_name":"<ADD EXAMPLE VALUE>","contact_number":0,"dispatch_extension":0,"dispatch_number":0,"dot_number":"<ADD EXAMPLE VALUE>","fax_number":0,"mc_number":"<ADD EXAMPLE VALUE>","mobile_carrier":"Other/Unknown","mobile_number":0,"state":"<ADD EXAMPLE VALUE>","web_page":"<ADD EXAMPLE VALUE>","zip":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"address":"<ADD EXAMPLE VALUE>","city":"<ADD EXAMPLE VALUE>","company":"<ADD EXAMPLE VALUE>","contact_extension":0,"contact_name":"<ADD EXAMPLE VALUE>","contact_number":0,"dispatch_extension":0,"dispatch_number":0,"dot_number":"<ADD EXAMPLE VALUE>","fax_number":0,"mc_number":"<ADD EXAMPLE VALUE>","mobile_carrier":"Other/Unknown","mobile_number":0,"state":"<ADD EXAMPLE VALUE>","web_page":"<ADD EXAMPLE VALUE>","zip":"<ADD EXAMPLE VALUE>"}' |  \
              http POST https://api.directfreight.com/v1/profiles \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"address":"<ADD EXAMPLE VALUE>","city":"<ADD EXAMPLE VALUE>","company":"<ADD EXAMPLE VALUE>","contact_extension":0,"contact_name":"<ADD EXAMPLE VALUE>","contact_number":0,"dispatch_extension":0,"dispatch_number":0,"dot_number":"<ADD EXAMPLE VALUE>","fax_number":0,"mc_number":"<ADD EXAMPLE VALUE>","mobile_carrier":"Other/Unknown","mobile_number":0,"state":"<ADD EXAMPLE VALUE>","web_page":"<ADD EXAMPLE VALUE>","zip":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/profiles
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "address": "<ADD EXAMPLE VALUE>",
              "city": "<ADD EXAMPLE VALUE>",
              "company": "<ADD EXAMPLE VALUE>",
              "contact_extension": 0,
              "contact_name": "<ADD EXAMPLE VALUE>",
              "contact_number": 0,
              "dispatch_extension": 0,
              "dispatch_number": 0,
              "dot_number": "<ADD EXAMPLE VALUE>",
              "fax_number": 0,
              "mc_number": "<ADD EXAMPLE VALUE>",
              "mobile_carrier": "Other/Unknown",
              "mobile_number": 0,
              "state": "<ADD EXAMPLE VALUE>",
              "web_page": "<ADD EXAMPLE VALUE>",
              "zip": "<ADD EXAMPLE VALUE>"
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/profiles")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: PROFILES
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/profiles");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/profiles")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/profiles")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/profiles",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/profiles");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/profiles",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/profiles',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/profiles");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/profiles"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/profiles" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/profiles");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/profiles",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/profiles');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/profiles');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/profiles", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/profiles"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/profiles")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/profiles \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/profiles \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/profiles
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/profiles")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /profiles/documents:
    delete:
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '204':
          description: success operation
      summary: STAGE=UNK Delete the document.
      tags:
        - profiles
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/profiles/documents");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/profiles/documents");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/documents\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/profiles/documents")
              .delete(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.delete("https://api.directfreight.com/v1/profiles/documents")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/profiles/documents",
              "method": "DELETE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("DELETE", "https://api.directfreight.com/v1/profiles/documents");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/profiles/documents",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url: 'https://api.directfreight.com/v1/profiles/documents',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("DELETE", "https://api.directfreight.com/v1/profiles/documents");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/profiles/documents"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/profiles/documents" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `DELETE uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("DELETE",
            "https://api.directfreight.com/v1/profiles/documents");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/profiles/documents",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/profiles/documents');
            $request->setMethod(HTTP_METH_DELETE);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/profiles/documents');
            $request->setRequestMethod('DELETE');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("DELETE", "/v1/profiles/documents", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/profiles/documents"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/profiles/documents")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url https://api.directfreight.com/v1/profiles/documents \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http DELETE https://api.directfreight.com/v1/profiles/documents \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method DELETE \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/profiles/documents
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/profiles/documents")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    get:
      description: Retrieve documents
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: success
      summary: STAGE=UNK Retrieve documents
      tags:
        - profiles
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/profiles/documents");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/profiles/documents");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/documents\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/profiles/documents")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/profiles/documents")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/profiles/documents",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/profiles/documents");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/profiles/documents",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/profiles/documents',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/profiles/documents");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/profiles/documents"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/profiles/documents" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "https://api.directfreight.com/v1/profiles/documents");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/profiles/documents",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/profiles/documents');
            $request->setMethod(HTTP_METH_GET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/profiles/documents');
            $request->setRequestMethod('GET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/profiles/documents", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/profiles/documents"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/profiles/documents")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.directfreight.com/v1/profiles/documents \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET https://api.directfreight.com/v1/profiles/documents \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/profiles/documents
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/profiles/documents")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    patch:
      consumes: []
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/rename_document'
      responses:
        '204':
          description: success
      summary: STAGE=UNK Rename a document.
      tags:
        - profiles
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/profiles/documents");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/profiles/documents");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/documents\"\n\n\tpayload := strings.NewReader(\"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/profiles/documents")
              .patch(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.patch("https://api.directfreight.com/v1/profiles/documents")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/profiles/documents",
              "method": "PATCH",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "current_name": "<ADD EXAMPLE VALUE>",
              "new_name": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("PATCH", "https://api.directfreight.com/v1/profiles/documents");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PATCH",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/profiles/documents",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ current_name: '<ADD EXAMPLE VALUE>',
              new_name: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'PATCH',
              url: 'https://api.directfreight.com/v1/profiles/documents',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { current_name: '<ADD EXAMPLE VALUE>',
                 new_name: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("PATCH", "https://api.directfreight.com/v1/profiles/documents");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "current_name": "<ADD EXAMPLE VALUE>",
              "new_name": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"current_name": @"<ADD EXAMPLE VALUE>",
                                          @"new_name": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/profiles/documents"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PATCH"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/profiles/documents" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `PATCH uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("PATCH",
            "https://api.directfreight.com/v1/profiles/documents");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"current_name":"<ADD EXAMPLE VALUE>","new_name":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/profiles/documents",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PATCH",
              CURLOPT_POSTFIELDS => "{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('PATCH');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/profiles/documents');
            $request->setMethod(HttpRequest::HTTP_METH_PATCH);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"current_name":"<ADD EXAMPLE VALUE>","new_name":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"current_name":"<ADD EXAMPLE VALUE>","new_name":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/profiles/documents');
            $request->setRequestMethod('PATCH');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("PATCH", "/v1/profiles/documents", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/profiles/documents"

            payload = "{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("PATCH", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/profiles/documents")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Patch.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request PATCH \
              --url https://api.directfreight.com/v1/profiles/documents \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"current_name":"<ADD EXAMPLE VALUE>","new_name":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"current_name":"<ADD EXAMPLE VALUE>","new_name":"<ADD EXAMPLE VALUE>"}' |  \
              http PATCH https://api.directfreight.com/v1/profiles/documents \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method PATCH \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"current_name":"<ADD EXAMPLE VALUE>","new_name":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/profiles/documents
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "current_name": "<ADD EXAMPLE VALUE>",
              "new_name": "<ADD EXAMPLE VALUE>"
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/profiles/documents")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "PATCH"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      consumes: []
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/upload_document'
      responses:
        '201':
          $ref: '#/responses/object_created'
      summary: STAGE=UNK Upload a new document.
      tags:
        - profiles
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/profiles/documents");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"The\":{}}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/profiles/documents");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"The\":{}}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/documents\"\n\n\tpayload := strings.NewReader(\"{\\\"The\\\":{}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"The\":{}}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/profiles/documents")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/profiles/documents")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"The\":{}}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/profiles/documents",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"The\":{}}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "The": {}
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/profiles/documents");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/profiles/documents",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ The: {} }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/profiles/documents',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: { The: {} },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/profiles/documents");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "The": {}
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"The": @{  } };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/profiles/documents"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/profiles/documents" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"The\":{}}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/profiles/documents");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"The":{}}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/profiles/documents",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"The\":{}}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/profiles/documents');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"The":{}}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"The":{}}');

            $request->setRequestUrl('https://api.directfreight.com/v1/profiles/documents');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"The\":{}}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/profiles/documents", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/profiles/documents"

            payload = "{\"The\":{}}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/profiles/documents")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"The\":{}}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/profiles/documents \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"The":{}}'
        - lang: Shell_httpie
          source: |-
            echo '{"The":{}}' |  \
              http POST https://api.directfreight.com/v1/profiles/documents \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"The":{}}' \
              --output-document \
              - https://api.directfreight.com/v1/profiles/documents
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = ["The": []]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/profiles/documents")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: PROFILES
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/profiles/documents");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/documents\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/profiles/documents")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/profiles/documents")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/profiles/documents",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/profiles/documents");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/profiles/documents",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/profiles/documents',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/profiles/documents");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/profiles/documents"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/profiles/documents" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/profiles/documents");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/profiles/documents",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/profiles/documents');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/profiles/documents');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/profiles/documents", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/profiles/documents"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/profiles/documents")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/profiles/documents \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/profiles/documents \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/profiles/documents
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/profiles/documents")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /validations/email_exists:
    get:
      description: Enter an e-mail to see if it is available. Can be used as ?email=xxx or as a JSON request.
      parameters:
        - in: query
          name: email
          required: true
          type: string
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/get_email_exists_response'
      summary: STAGE=UNK Check if an e-mail exists.
      tags:
        - validations
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/validations/email_exists?email=SOME_STRING_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/validations/email_exists',
              qs: { email: 'SOME_STRING_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/validations/email_exists");

            req.query({
              "email": "SOME_STRING_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/validations/email_exists');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'email' => 'SOME_STRING_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/validations/email_exists');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'email' => 'SOME_STRING_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/validations/email_exists?email=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/validations/email_exists"

            querystring = {"email":"SOME_STRING_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: VALIDATIONS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/validations/email_exists");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/validations/email_exists\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/validations/email_exists")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/validations/email_exists")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/validations/email_exists",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/validations/email_exists");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/validations/email_exists",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/validations/email_exists',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/validations/email_exists");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/validations/email_exists"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/validations/email_exists" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/validations/email_exists");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/validations/email_exists",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/validations/email_exists');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/validations/email_exists');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/validations/email_exists", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/validations/email_exists"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/validations/email_exists")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/validations/email_exists \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/validations/email_exists \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/validations/email_exists
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/validations/email_exists")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /validations/trailers:
    delete:
      description: This will remove a customer_type from the list. This is only useable via a special api-token
      parameters:
        - description: This will remove this type from the list.
          in: query
          name: customer_type
          required: true
          type: string
        - description: If you wish to remove a customer_type associated with a username you would add this parameter.
          in: query
          name: username
          required: false
          type: string
      responses:
        '204':
          description: Status 204
      summary: STAGE=UNK Remove a lookup.
      tags:
        - validations
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE")
              .delete(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.delete("https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE",
              "method": "DELETE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("DELETE", "https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url: 'https://api.directfreight.com/v1/validations/trailers',
              qs: 
               { customer_type: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("DELETE", "https://api.directfreight.com/v1/validations/trailers");

            req.query({
              "customer_type": "SOME_STRING_VALUE",
              "username": "SOME_STRING_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `DELETE uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("DELETE",
            "'https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/validations/trailers');
            $request->setMethod(HTTP_METH_DELETE);

            $request->setQueryData(array(
              'customer_type' => 'SOME_STRING_VALUE',
              'username' => 'SOME_STRING_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/validations/trailers');
            $request->setRequestMethod('DELETE');
            $request->setQuery(new http\QueryString(array(
              'customer_type' => 'SOME_STRING_VALUE',
              'username' => 'SOME_STRING_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("DELETE", "/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/validations/trailers"

            querystring = {"customer_type":"SOME_STRING_VALUE","username":"SOME_STRING_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("DELETE", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url 'https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http DELETE 'https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method DELETE \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    get:
      parameters:
        - description: The custom type that the poster is trying to submit.
          in: query
          name: customer_type
          required: true
          type: string
          x-example: DX
        - description: 'We assume only posters will be using this endpoint. We will use their end-user-token to match for a customer specific match first, and fall back to a general one if it doesn''t exist.'
          in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: Status 200
          schema:
            properties:
              trailer_type:
                $ref: '#/definitions/trailer_type'
            required:
              - trailer_type
            type: object
      summary: STAGE=UNK Find an official type to match to the customer submitted one.
      tags:
        - validations
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/validations/trailers?customer_type=SOME_STRING_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/validations/trailers',
              qs: { customer_type: 'SOME_STRING_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/validations/trailers");

            req.query({
              "customer_type": "SOME_STRING_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/validations/trailers');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'customer_type' => 'SOME_STRING_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/validations/trailers');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'customer_type' => 'SOME_STRING_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/validations/trailers?customer_type=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/validations/trailers"

            querystring = {"customer_type":"SOME_STRING_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    patch:
      consumes: []
      description: Will update the match of the trailer_type to the customer type. This is only useable via a special api-token
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              customer_type:
                description: This is the key. It is not modified.
                type: string
              notes:
                description: You can clear or replace the notes.
                type: string
              trailer_type:
                $ref: '#/definitions/trailer_type'
              username:
                description: 'This is an optional key, and is also not modifiable. If customer_type is associated with a username you must also include the username.'
                type: string
            required:
              - customer_type
              - trailer_type
            type: object
      responses:
        '202':
          description: Status 202
      summary: STAGE=UNK Update which DF trailer_types match the customer_type
      tags:
        - validations
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/validations/trailers");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/validations/trailers");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/validations/trailers\"\n\n\tpayload := strings.NewReader(\"{\\\"customer_type\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notes\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"username\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/validations/trailers")
              .patch(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.patch("https://api.directfreight.com/v1/validations/trailers")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/validations/trailers",
              "method": "PATCH",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "customer_type": "<ADD EXAMPLE VALUE>",
              "notes": "<ADD EXAMPLE VALUE>",
              "username": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("PATCH", "https://api.directfreight.com/v1/validations/trailers");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PATCH",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/validations/trailers",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ customer_type: '<ADD EXAMPLE VALUE>',
              notes: '<ADD EXAMPLE VALUE>',
              username: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'PATCH',
              url: 'https://api.directfreight.com/v1/validations/trailers',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { customer_type: '<ADD EXAMPLE VALUE>',
                 notes: '<ADD EXAMPLE VALUE>',
                 username: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("PATCH", "https://api.directfreight.com/v1/validations/trailers");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "customer_type": "<ADD EXAMPLE VALUE>",
              "notes": "<ADD EXAMPLE VALUE>",
              "username": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"customer_type": @"<ADD EXAMPLE VALUE>",
                                          @"notes": @"<ADD EXAMPLE VALUE>",
                                          @"username": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/validations/trailers"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PATCH"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/validations/trailers" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `PATCH uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("PATCH",
            "https://api.directfreight.com/v1/validations/trailers");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"customer_type":"<ADD EXAMPLE VALUE>","notes":"<ADD EXAMPLE VALUE>","username":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/validations/trailers",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PATCH",
              CURLOPT_POSTFIELDS => "{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('PATCH');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/validations/trailers');
            $request->setMethod(HttpRequest::HTTP_METH_PATCH);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"customer_type":"<ADD EXAMPLE VALUE>","notes":"<ADD EXAMPLE VALUE>","username":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"customer_type":"<ADD EXAMPLE VALUE>","notes":"<ADD EXAMPLE VALUE>","username":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/validations/trailers');
            $request->setRequestMethod('PATCH');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("PATCH", "/v1/validations/trailers", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/validations/trailers"

            payload = "{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("PATCH", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/validations/trailers")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Patch.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request PATCH \
              --url https://api.directfreight.com/v1/validations/trailers \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --data '{"customer_type":"<ADD EXAMPLE VALUE>","notes":"<ADD EXAMPLE VALUE>","username":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"customer_type":"<ADD EXAMPLE VALUE>","notes":"<ADD EXAMPLE VALUE>","username":"<ADD EXAMPLE VALUE>"}' |  \
              http PATCH https://api.directfreight.com/v1/validations/trailers \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method PATCH \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"customer_type":"<ADD EXAMPLE VALUE>","notes":"<ADD EXAMPLE VALUE>","username":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/validations/trailers
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "customer_type": "<ADD EXAMPLE VALUE>",
              "notes": "<ADD EXAMPLE VALUE>",
              "username": "<ADD EXAMPLE VALUE>"
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/validations/trailers")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "PATCH"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      consumes: []
      description: This is only useable via a special api-token
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              customer_type:
                description: This is the new type we are adding to our lookup table.
                type: string
              notes:
                description: Provides context. For internal use.
                type: string
              trailer_type:
                $ref: '#/definitions/trailer_type'
              username:
                description: |-
                  This is to specify to create this definition for only this specific user. You might do this if this customer_type already exists and uses a different list of trailer types than this customer requires.

                  This style uses the old system. It is open in that anyone with the special api-token can update any user. Optionally, if we chose to lock it down to end-user-token we loose that ability, could drop this field and let them just send in an EUA token.
                type: string
            required:
              - customer_type
              - trailer_type
            type: object
      responses:
        '201':
          description: Status 201
      summary: STAGE=UNK Add a custom trailer type match.
      tags:
        - validations
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/validations/trailers");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/validations/trailers");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/validations/trailers\"\n\n\tpayload := strings.NewReader(\"{\\\"customer_type\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notes\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"username\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/validations/trailers")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/validations/trailers")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/validations/trailers",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "customer_type": "<ADD EXAMPLE VALUE>",
              "notes": "<ADD EXAMPLE VALUE>",
              "username": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/validations/trailers");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/validations/trailers",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ customer_type: '<ADD EXAMPLE VALUE>',
              notes: '<ADD EXAMPLE VALUE>',
              username: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/validations/trailers',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { customer_type: '<ADD EXAMPLE VALUE>',
                 notes: '<ADD EXAMPLE VALUE>',
                 username: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/validations/trailers");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "customer_type": "<ADD EXAMPLE VALUE>",
              "notes": "<ADD EXAMPLE VALUE>",
              "username": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"customer_type": @"<ADD EXAMPLE VALUE>",
                                          @"notes": @"<ADD EXAMPLE VALUE>",
                                          @"username": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/validations/trailers"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/validations/trailers" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/validations/trailers");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"customer_type":"<ADD EXAMPLE VALUE>","notes":"<ADD EXAMPLE VALUE>","username":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/validations/trailers",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/validations/trailers');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"customer_type":"<ADD EXAMPLE VALUE>","notes":"<ADD EXAMPLE VALUE>","username":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"customer_type":"<ADD EXAMPLE VALUE>","notes":"<ADD EXAMPLE VALUE>","username":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/validations/trailers');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/validations/trailers", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/validations/trailers"

            payload = "{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/validations/trailers")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/validations/trailers \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --data '{"customer_type":"<ADD EXAMPLE VALUE>","notes":"<ADD EXAMPLE VALUE>","username":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"customer_type":"<ADD EXAMPLE VALUE>","notes":"<ADD EXAMPLE VALUE>","username":"<ADD EXAMPLE VALUE>"}' |  \
              http POST https://api.directfreight.com/v1/validations/trailers \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"customer_type":"<ADD EXAMPLE VALUE>","notes":"<ADD EXAMPLE VALUE>","username":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/validations/trailers
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "customer_type": "<ADD EXAMPLE VALUE>",
              "notes": "<ADD EXAMPLE VALUE>",
              "username": "<ADD EXAMPLE VALUE>"
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/validations/trailers")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: VALIDATIONS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/validations/trailers");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/validations/trailers\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/validations/trailers")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/validations/trailers")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/validations/trailers",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/validations/trailers");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/validations/trailers",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/validations/trailers',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/validations/trailers");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/validations/trailers"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/validations/trailers" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/validations/trailers");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/validations/trailers",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/validations/trailers');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/validations/trailers');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/validations/trailers", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/validations/trailers"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/validations/trailers")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/validations/trailers \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/validations/trailers \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/validations/trailers
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/validations/trailers")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
definitions:
  alert_list:
    description: 'A hash containing a list of objects. Each entry should have 1 alert object, and 1 search object, and 2 integer counts. One for the number of new loads, and one for the number of total loads that match the search critera.'
    example: |-
      {
        "data": [
          "{}",
          "{}"
        ]
      }
    properties:
      data:
        items:
          $ref: '#/definitions/alert'
        type: array
    type: object
    x-restlet:
      section: ALERTS
  alert:
    properties:
      days_of_week:
        description: Limit the days that alerts are sent to the days listed.
        items:
          enum:
            - Sun
            - Mon
            - Tue
            - Wed
            - Thu
            - Fri
            - Sat
          type: string
        type: array
      email_address:
        description: The address for the alert.
        type: string
      end_hour:
        description: A  corresponding to the hour of the day.
        maximum: 21
        minimum: 3
        type: integer
      expires_after:
        description: The last day the alert will be valid. Valid time frames are from today until one year into the future.
        example: '2019-12-30'
        format: date
        type: string
      list_order:
        description: Any value that is valid in the boards sort_order is also valid here.
        type: string
      list_type:
        description: 'This specify the type of list that is returned, including disabling the list from being sent at all. Valid values are ''complete-list'',''only-new'', and ''not-active''.'
        enum:
          - complete-list
          - only-new
          - not-active
        type: string
      minute_frequency:
        description: 'How many minutes to wait before sending another alert. Valid values are ''15'',''30'',''60'',''120'',''240'',''480'', and ''1440''.'
        type: integer
      search:
        description: Refer to the boards documentation for the full list of restrictions for each field.
        properties:
          delivery_date:
            format: date
            type: string
          destination_city:
            type: string
          destination_radius:
            type: integer
          destination_state:
            type: string
          full_load:
            type: boolean
          origin_city:
            type: string
          origin_radius:
            type: integer
          origin_state:
            type: string
          ship_date:
            items:
              format: date
              type: string
            type: array
          trailer_type:
            items:
              type: string
            type: array
        type: object
      send_type:
        description: What method to send the alert list.
        enum:
          - email
          - text
        type: string
      start_hour:
        description: A  corresponding to the hour of the day.
        maximum: 21
        minimum: 3
        type: integer
      time_zone:
        description: 'A number between -1 and 2. -1 = EST, 0 = CST, 1 = MST, 2 = PST'
        maximum: 2
        minimum: -1
        type: integer
    required:
      - days_of_week
      - email_address
      - end_hour
      - expires_after
      - list_order
      - list_type
      - minute_frequency
      - search
      - send_type
      - start_hour
      - time_zone
    type: object
    x-restlet:
      section: ALERTS
  autocomplete_response:
    example: |-
      {
        "city": "city",
        "state_abbreviation": "{}",
        "state_name": "{}"
      }
    properties:
      city:
        description: The name of the city.  Only returned if record_type is city or postal
        type: string
      postal_code:
        description: The postal code of the city.  Only returned if match type is postal.
        type: string
      record_type:
        enum:
          - country
          - state
          - province
          - city
          - postal
        type: string
      region_code:
        type: string
      region_name:
        type: string
    required:
      - record_type
      - region_code
      - region_name
    type: object
    x-restlet:
      section: LOCATIONS
  board_request:
    properties:
      alert_id:
        description: 'By specifying an alert_id we will record the loads or trucks seen by this user, and associate it with their alert.   See /alerts documentation for more information on setting up alerts.'
        example: 5555
        type: integer
      company_name:
        description: Search only for loads posted by this company.
        type: string
      destination_city:
        description: 'If used, this field must be accompanied by a destination_state.'
        example: chicago
        minLength: 2
        type: string
      destination_radius:
        description: 'If both the destination city and state are specified, this field will limit the search to results to within # miles of the specified destination city.   If this field is omitted during a search that includes a destination city a default value of 30 miles will be used.'
        example: 100
        maximum: 300
        minimum: 1
        type: integer
      destination_state:
        description: 'If the destination_city field is is used, this field should contain the state for that city.  For searches without a specified destination_city this field may contain an array list of state abbreviations.'
        example:
          - IL
          - HI
          - NY
          - KS
          - TX
          - MO
          - AL
        items:
          maxLength: 2
          minLength: 2
          type: string
        type: array
      full_load:
        description: This is only valid when requesting a loads board. Omitting this field will return both full and partial loads. A true value will limit results to full loads loads only.  False will return partial loads only.
        example: true
        type: boolean
      item_count:
        description: This argument adjusts how many items per page will be returned.  Omitting this field will return the default of 50 items per page
        example: 25
        maximum: 100
        minimum: 1
        type: integer
      origin_city:
        description: 'If used, this field must be accompanied by an origin_state.'
        example: Kansas City
        minLength: 2
        type: string
      origin_radius:
        description: 'If both the origin city and state are specified, this field will limit the search to results to within # miles of the specified origin city. If this field is omitted during a search that includes an origin city a default value of 25 miles will be used.'
        example: 150
        maximum: 300
        minimum: 1
        type: integer
      origin_state:
        description: 'If the origin_city field is is used, this field should contain the state for that city. For searches without a specified origin_city this field may contain an array list of state abbreviations.'
        example:
          - MO
          - IL
          - TX
          - CA
        items:
          maxLength: 2
          minLength: 2
          type: string
        type: array
      page_number:
        description: The page you want to return. Will return an empty board on an invalid page.
        minimum: 1
        type: integer
      return_count:
        description: 'If included this will return a total count instead of a list. '
        type: boolean
      return_only_new:
        description: A true value will only return results that have not been viewed by the user. This field requires a valid alert_id to be specified in order to return unviewed items.  See /alerts for more information on setting up and using alerts.
        type: boolean
      ship_date:
        description: Limits results to specified ship date(s).
        items:
          description: Please use the YYYY-MM-DD format.
          format: date
          type: string
        type: array
      sort_parameter:
        default: age
        description: The system automatically chooses the most common order based on the parameter chosen.  Sort order can be specified by adding -asc or -desc to the end.
        enum:
          - origin_city
          - origin_state
          - destination_city
          - destination_state
          - trailer_type
          - load_size
          - pay_rate
          - credit_score
          - age
          - trip_miles
          - dead_head
          - length
          - weight
          - company_name
          - ship_date
          - receive_date
          - tia_user
          - green_light
        example: age
        type: string
      trailer_type:
        description: 'A string array of valid trailer types to limit the search. '
        example:
          - F
          - F+T
          - F+S
          - V
        items:
          enum:
            - V
            - VINT
            - SD
            - MX
            - HS
            - AC
            - LB
            - F+T
            - F
            - FINT
            - DD
            - V+V
            - V+A
            - CRG
            - HB
            - LA
            - PO
            - R
            - RINT
            - RGN
            - CV
            - DT
            - TNK
            - F+S
            - PNEU
            - CONT
            - OTHER
          type: string
        type: array
    type: object
    x-restlet:
      section: BOARDS
  board_response_item:
    example: test
    properties:
      age:
        description: Time in minutes since load/truck was first posted. NULL is returned for values less than 1 minute.
        example: 15
        type: integer
      comment:
        description: This field is only returned for an end_user_token that has the subscribed access level.
        example: Test Load
        type: string
      company_name:
        description: This field is only returned for an end_user_token that has the subscribed access level.
        example: ABC Company
        type: string
      credit_report_key:
        description: |-
          This field is only returned for an end_user_token that has the subscribed access level.

          To access the credit report associated with the company for this item, use the key returned with the following url. https://www.directfreight.com/home/credit_report?refid=$credit_report_key
        type: string
      credit_score:
        description: The credit score for the company associated with this item.
        example: 99
        type: integer
      dead_head:
        description: 'Distance between request body origin_city, and response item origin_city. This field will be null if no origin_city is specified in the request body or if distance cannot be calculated.'
        example: 87
        type: integer
      destination_city:
        description: This field may be returned as null.
        minLength: 2
        type: string
      destination_state:
        description: This field may be returned as null.
        example: MO
        type: string
      entry_id:
        description: unique identifier for this item.
        example: '55555555'
        type: string
      full_load:
        description: Specifies whether load is full or partial.  Will always return true for trucks.
        example: true
        type: boolean
      green_light:
        description: Indicates whether broker/shipper for item is pre-approved for Rivera Finance factoring program.
        example: true
        type: boolean
      height:
        description: Height in inches.  Will be null if empty.
        type: integer
      length:
        description: Length in feet.  Will be null if empty.
        type: number
      origin_city:
        description: Origin city of item.
        example: Chicago
        minLength: 2
        type: string
      origin_state:
        description: Origin state of item
        example: IL
        type: string
      pay_rate:
        description: Will be null if empty.
        type: number
      phone_extension:
        description: This field is only returned for an end_user_token that has the subscribed access level.   Will return null if empty.
        example: 123
        type: integer
      phone_number:
        description: This field is only returned for an end_user_token that has the subscribed access level.
        example: 555-555-5555
        type: integer
      receive_date:
        example: '2018-09-24'
        format: date
        type: string
      ship_date:
        description: Date item is scheduled to be loaded.
        example: '2018-09-20'
        format: date
        type: string
      trade_orgs:
        description: Approved Trade Organizations
        properties:
          tia_approved:
            description: TIA Approved (yes/no)
            type: string
        type: object
      trailer_type:
        description: A string array of valid trailer types.
        example: V
        type: string
      trip_miles:
        description: Distance between origin and destination.  This field will be null if distance cannot be calculated.
        example: 523
        type: integer
      user_hid:
        description: This field is only returned for an end_user_token that has the subscribed or posting access level. The value when true represents that the user wishes the entry hidden. Refer to boards/hidden_entries/ documentation for more information on how to set and update this value.
        example: false
        type: boolean
      weight:
        description: Weight in pounds.  Will be null if empty.
        type: integer
      width:
        description: Width in inches.  Will be null if empty.
        type: integer
    required:
      - age
      - credit_score
      - dead_head
      - destination_city
      - destination_state
      - entry_id
      - full_load
      - green_light
      - height
      - length
      - origin_city
      - origin_state
      - pay_rate
      - receive_date
      - ship_date
      - trailer_type
      - trip_miles
      - weight
      - width
    type: object
    x-restlet:
      section: BOARDS
  board_response:
    example: |-
      {
        "list": "{}",
        "page_number": "{}",
        "total_items": "{}",
        "total_pages": 0
      }
    properties:
      list:
        description: A list of entries for this board.
        items:
          $ref: '#/definitions/board_response_item'
        type: array
      page_number:
        description: The page you are on.
        type: integer
      total_items:
        description: A count of all the entry objects for the specified search.
        type: integer
      total_pages:
        description: 'A count of the # of pages based on the search parameters.'
        type: integer
    required:
      - list
    type: object
    x-restlet:
      section: BOARDS
  create_multiple_postings:
    properties:
      contact_name:
        description: 'The dispatchers name. By default we use the profile information. '
        type: string
      contact_phone:
        description: 'By default we use the number listed in their profile. '
        type: string
      delete_current_before_posting:
        description: 'An optional argument that will first delete all of the users loads before entering the fresh list. Caution, this will still delete everything even if some of the entries fail to be created. '
        type: boolean
      list:
        description: 'Valid types are &quot;loads&quot;, &quot;trucks&quot;, &quot;private_loads&quot;, &quot;private_trucks&quot;, &quot;test_loads&quot;, and &quot;test_trucks&quot; '
        items:
          type: string
        type: array
    required:
      - list
    type: object
    x-restlet:
      section: POSTINGS
  create_notes:
    properties:
      body:
        type: string
      entry_id:
        description: 'The entry to associate the note with. '
        type: string
      title:
        description: 'Subject of the note. '
        type: string
    required:
      - body
      - entry_id
      - title
    type: object
    x-restlet:
      section: BOARDS
  create_status:
    properties:
      success:
        type: integer
    type: object
    x-restlet:
      section: common_definitions
  end-user-token:
    properties:
      end-user-token:
        description: On success and end-user-token is returned.
        example: XX423ASOEUHT4AESUTH
        type: string
    type: object
    x-restlet:
      section: END_USER_AUTHENTICATIONS
  error_object:
    example: |-
      {
        "code": 1,
        "error": "Generic Validation",
        "description": "The e-mail address must be valid."
      }
    properties:
      code:
        type: integer
      description:
        type: string
      error:
        type: string
    required:
      - code
      - description
      - error
    type: object
    x-restlet:
      section: common_definitions
  get_boards_notes_response:
    properties:
      list:
        description: A list of requested notes
        items:
          $ref: '#/definitions/notes_response_item'
        type: array
    required:
      - list
    type: object
    x-restlet:
      section: BOARDS
  get_custom_categories_response:
    example: |-
      {
        "categories": [
          "categories",
          "categories"
        ]
      }
    properties:
      categories:
        description: 'A list of each category, type and it''s corresponding position.'
        items:
          type: string
        type: array
    type: object
    x-restlet:
      section: not categorized yet
  get_email_exists_response:
    example: |-
      {
        "exists": true
      }
    properties:
      exists:
        description: Returns a true value if it is associated with an account.
        type: boolean
    type: object
    x-restlet:
      section: not categorized yet
  get_hidden_companies_response:
    example: |-
      {
        "company_name": [
          "company_name",
          "company_name"
        ]
      }
    properties:
      company_name:
        description: A subset of companies that need to be marked as hidden.
        items:
          type: string
        type: array
    type: object
    x-restlet:
      section: not categorized yet
  get_hidden_entries:
    example:
      entry_id:
        - entry_id
        - entry_id
    properties:
      entry_id:
        description: A subset of entries that need to be marked as hidden.
        items:
          type: string
        type: array
    type: object
    x-restlet:
      section: not categorized yet
  get_state_list_response:
    example: |-
      {
        "list": "{     \"MS\": 1449,     \"NS\": 24,     \"VT\": 145,     \"MD\": 520,     \"ID\": 2091,     \"SK\": 126,     \"WA\": 2207,     \"SC\": 1619,     \"VA\": 1781,     \"PQ\": 10,     \"ON\": 270,     \"KS\": 969,     \"NE\": 1386,     \"OR\": 2984,     \"WI\": 2714,     \"GA\": 3184,     \"IN\": 3363,     \"KY\": 1731,     \"NV\": 534,     \"NC\": 1824,     \"BC\": 124,     \"DC\": 7,     .... }"
      }
    properties:
      list:
        description: A hash of state totals.
        example: '{     "MS": 1449,     "NS": 24,     "VT": 145,     "MD": 520,     "ID": 2091,     "SK": 126,     "WA": 2207,     "SC": 1619,     "VA": 1781,     "PQ": 10,     "ON": 270,     "KS": 969,     "NE": 1386,     "OR": 2984,     "WI": 2714,     "GA": 3184,     "IN": 3363,     "KY": 1731,     "NV": 534,     "NC": 1824,     "BC": 124,     "DC": 7,     .... }'
        type: object
    type: object
    x-restlet:
      section: BOARDS
  hidden_entry_object:
    properties:
      entry_id:
        description: The entry(s) that need to be marked as hidden.
        items:
          type: string
        type: array
    required:
      - entry_id
    type: object
    x-restlet:
      section: BOARDS
  login_credentials:
    properties:
      login:
        description: 'The e-mail, or username information needed to log in. '
        type: string
      realm:
        description: 'This specifies who to log in with. If left blank we will assume email/password. Valid realms are username, email, facebook(not implemneted), google(not implemented), and linkedin(not implemented). '
        enum:
          - username
          - email
        type: string
      secret:
        description: 'The password, or token required for this login. '
        type: string
    required:
      - login
      - realm
      - secret
    type: object
    x-restlet:
      section: END_USER_AUTHENTICATIONS
  mark_hidden_companies:
    properties:
      company_name:
        description: The company that need to be marked as hidden.
        type: string
    required:
      - company_name
    type: object
    x-restlet:
      section: not categorized yet
  mobile_carrier_response:
    example:
      carrier_id: 0
      carrier_name: '{}'
    properties:
      carrier_id:
        description: The carrier ID.
        format: int32
        type: integer
      carrier_name:
        description: Their mobile carrier.
        type: object
    type: object
    x-restlet:
      section: not categorized yet
  note_create_status:
    properties:
      note_id:
        description: Id of the note.
        type: integer
      success:
        type: integer
    required:
      - note_id
    type: object
    x-restlet:
      section: common_definitions
  notes_response_item:
    example: test
    properties:
      body:
        description: Body of the note
        example: This is a test note.
        type: string
      date_added:
        description: The date the note was created.
        example: '2019-08-23'
        format: date
        type: string
      date_modified:
        description: Date of the last update to this note
        example: '2019-08-24'
        format: date
        type: string
      deleted:
        description: Not sure what this field is?  Is this the date the note was deleted or the status of the load?
        type: string
      entry_id:
        description: Entry id of the load associated with this note.
        example: 93b30df654ccd860eb34775214877921
        type: string
      id:
        description: The id of the note.
        example: 55551
        type: integer
      important:
        description: Identifies notes marked as important.
        example: true
        type: boolean
      title:
        description: Title of note.
        example: MO
        type: string
    required:
      - body
      - date_added
      - date_modified
      - deleted
      - entry_id
      - id
      - important
      - title
    type: object
    x-restlet:
      section: BOARDS
  patch_alert_properties:
    properties:
      alert_id:
        description: Specify which alert you are updating.
        type: integer
      days_of_week:
        description: Limit the days that alerts are sent to the days listed.
        items:
          enum:
            - Sun
            - Mon
            - Tue
            - Wed
            - Thu
            - Fri
            - Sat
          type: string
        type: array
      end_hour:
        description: A value corresponding to the hour of the day.
        maximum: 21
        minimum: 3
        type: integer
      expires_after:
        description: The last day the alert will be valid. Valid time frames are from today until one year into the future.
        format: date
        type: string
      list_order:
        description: Any value that is valid in the boards sort_order is also valid here.
        type: string
      list_type:
        description: 'This specify the type of list that is returned, including disabling the list from being sent at all.'
        enum:
          - complete-list
          - only-new
          - not-active
        type: string
      minute_frequency:
        description: How many minutes to wait before sending another alert.
        type: integer
      send_type:
        description: What method to send the alert list.
        enum:
          - email
          - text
        type: string
      start_hour:
        description: A value corresponding to the hour of the day.
        maximum: 21
        minimum: 3
        type: integer
      time_zone:
        description: 'A number between -1 and 2. -1 = EST, 0 = CST, 1 = MST, 2 = PST'
        maximum: 2
        minimum: -1
        type: integer
    required:
      - alert_id
    type: object
    x-restlet:
      section: ALERTS
  post_optin_code_response:
    example:
      optin_code: optin_code
    properties:
      optin_code:
        description: A text string with the code sent.
        type: string
    type: object
    x-restlet:
      section: not categorized yet
  post_posting_multiple_response:
    example: |-
      {
        "success": true
      }
    properties:
      success:
        description: 'This will return true, and have a unique location in the location header.'
        type: boolean
    type: object
    x-restlet:
      section: POSTINGS
  post_posting_type_action_body:
    properties:
      source_id:
        description: The posting id of the posting you are moving or copying. Optional for create.
        type: object
      source_posting:
        description: The posting_type where you are moving or copying the posting from. Optional for create. Items can only be moved to like types. loads -> private_private loads.
        type: string
    required:
      - source_id
      - source_posting
    type: object
    x-restlet:
      section: not categorized yet
  posting_post_response:
    example: |-
      {
        "list": [
          .....
        ]
      }
    properties:
      list:
        description: A list of posting objects you can iterate over.
        items:
          $ref: '#/definitions/postings_post_response_item'
        type: array
    type: object
    x-restlet:
      section: POSTINGS
  postings_entry_object:
    properties:
      comment:
        type: string
      custom_id:
        description: An identifier that can be provided for your own records.  (i.e.-Company load number) This field can be used to retrieve loads via GET.  This value must be unique. Custom Id's can have a maximum of 25 characters.
        type: string
      destination_city:
        description: Delivery location city of load/truck. For truck type entries this field is optional or can be used to specify a region.
        type: string
      destination_state:
        description: Delivery location state of load/truck. For truck type entries this field is optional.
        type: string
      full_load:
        description: The load will be defaulted to full if this argument isn't included and marked to false.
        type: boolean
      height:
        description: This number represents inches.
        type: integer
      length:
        description: This number represents feet.
        type: number
      origin_city:
        description: Origin city location of load or truck.  Required for all entry types.
        type: string
      origin_state:
        description: Origin state location of load or truck.  Use the 2 digit state abbreviation.
        maxLength: 2
        minLength: 2
        type: string
      other_trailer_types:
        description: Can be used to specify custom trailer types.
        type: string
      pay_rate:
        description: 'This field will accept either the per mile rate, or gross rate.'
        type: number
      phone_extension:
        description: If not provided we will use the contact info associated with the users profile.
        type: integer
      phone_number:
        description: If not provided we will use the contact info associated with the users profile.
        type: integer
      receive_date:
        description: The date the load/truck should deliver.
        format: date
        type: string
      ship_date:
        description: When posting loads this is the date the load should be picked up.  When posting trucks this is the date the truck is available to be loaded.
        format: date
        type: string
      trailer_type:
        description: This can have 1 or more standard trailer types.
        items:
          enum:
            - V
            - VINT
            - SD
            - MX
            - HS
            - AC
            - LB
            - F+T
            - F
            - FINT
            - DD
            - V+V
            - V+A
            - CRG
            - HB
            - LA
            - PO
            - R
            - RINT
            - RGN
            - CV
            - DT
            - TNK
            - F+S
            - PNEU
            - CONT
            - OTHER
          type: string
        type: array
      weight:
        description: This number represents pounds.
        type: integer
      width:
        description: This number represents inches.
        type: integer
    required:
      - custom_id
      - origin_city
      - origin_state
      - ship_date
      - trailer_type
    type: object
    x-restlet:
      section: POSTINGS
  postings_patch_object:
    properties:
      comment:
        type: string
      custom_id:
        description: |-
          An identifier that can be provided for your own records. (i.e.-Company load number) This field can be used to retrieve loads via GET. This value must be unique.
          You cannot update a custom_id once it is set. Please delete and reenter the load to change the custom_id.  Either posting_id or custom_id is required.
        type: string
      destination_city:
        description: Delivery location city of load/truck.
        type: string
      destination_state:
        description: Delivery location city of load/truck.
        type: string
      full_load:
        description: This should only be used with loads.
        type: boolean
      height:
        description: This number represents inches.
        type: integer
      length:
        description: This number represents feet.
        type: number
      origin_city:
        description: Origin city location of load or truck
        type: string
      origin_state:
        description: Origin state location of load or truck
        type: string
      other_trailer_types:
        description: Can be used to specify custom trailer types.
        type: string
      pay_rate:
        description: 'This field will accept either the per mile rate, or gross rate.'
        type: number
      phone_extension:
        description: If not provided we will use the contact info associated with the users profile.
        type: integer
      phone_number:
        description: If not provided we will use the contact info associated with the users profile.
        type: integer
      posting_id:
        description: |-
          A unique id for each entry.  This value is returned via GET. 
          Either posting_id or custom_id is required.
        type: integer
      receive_date:
        description: The date the load/truck should deliver.
        format: date
        type: string
      ship_date:
        description: When posting loads this is the date the load should be picked up.  When posting trucks this is the date the truck is available to be loaded.
        format: date
        type: string
      trailer_type:
        description: This can have 1 or more standard trailer types.
        items:
          enum:
            - V
            - VINT
            - SD
            - MX
            - HS
            - AC
            - LB
            - F+T
            - F
            - FINT
            - DD
            - V+V
            - V+A
            - CRG
            - HB
            - LA
            - PO
            - R
            - RINT
            - RGN
            - CV
            - DT
            - TNK
            - F+S
            - PNEU
            - CONT
            - OTHER
          type: string
        type: array
      weight:
        description: This number represents pounds.
        type: integer
      width:
        description: This number represents inches.
        type: integer
    type: object
    x-restlet:
      section: POSTINGS
  postings_post_response_item:
    properties:
      comment:
        type: string
      contact_name:
        description: This is generated from the logged in users profile information.
        type: string
      custom_id:
        description: A unique identifier a user can provide for their own records.
        type: integer
      destination_city:
        description: Delivery location city of load/truck.
        type: string
      destination_state:
        description: Delivery location state of load/truck.
        items:
          type: string
        type: array
      full_load:
        description: For trucks this will always be false.
        type: boolean
      height:
        description: This number represents inches.
        type: integer
      length:
        description: This number represents feet.
        type: number
      origin_city:
        description: Origin city location of load or truck
        type: string
      origin_state:
        description: Origin state location of load or truck.
        type: string
      other_trailer_types:
        description: To include custom trailer types.
        type: string
      pay_rate:
        description: 'We expect one of 2 formats. either the per mile, or total sum.'
        type: number
      phone_extension:
        description: If not supplied and not in the user's profile this will be null.
        type: integer
      phone_number:
        description: 'If not supplied, this is generated from the logged in users profile information.'
        type: integer
      posting_id:
        description: This is the unique ID of this post.
        type: integer
      receive_date:
        description: The date the load/truck should deliver.
        format: date
        type: string
      ship_date:
        description: The date you wish the load to be shipped.
        format: date
        type: string
      trailer_type:
        description: This can have 1 or more standard trailer types.
        items:
          enum:
            - V
            - VINT
            - SD
            - MX
            - HS
            - AC
            - LB
            - F+T
            - F
            - FINT
            - DD
            - V+V
            - V+A
            - CRG
            - HB
            - LA
            - PO
            - R
            - RINT
            - RGN
            - CV
            - DT
            - TNK
            - F+S
            - PNEU
            - CONT
            - OTHER
          type: string
        type: array
      weight:
        description: This number represents pounds.
        type: integer
      width:
        description: This number represents inches.
        type: integer
    required:
      - comment
      - contact_name
      - custom_id
      - destination_city
      - destination_state
      - full_load
      - height
      - length
      - origin_city
      - origin_state
      - other_trailer_types
      - pay_rate
      - phone_extension
      - phone_number
      - posting_id
      - receive_date
      - ship_date
      - trailer_type
      - weight
      - width
    type: object
    x-restlet:
      section: POSTINGS
  postings-post_or_patch_response:
    example: Success
    properties:
      list:
        items:
          properties:
            code:
              type: integer
            description:
              description: An explanation of what each code means.
              type: string
            status:
              enum:
                - Success
                - Error
              type: string
          required:
            - status
          type: object
        type: array
    required:
      - list
    type: object
    x-restlet:
      section: POSTINGS
  profile_object:
    example: |-
      {
        "address": "P.O. Box 131",
        "city": "Chillicothe",
        "company": "Direct Freight",
        "contact_extension": 333,
        "contact_name": "Joe Doe",
        "contact_number": 555-555-5555,
        "dot_number": 123456,
        "fax_number": "555-555-5555",
        "mc_number": 123456,
        "mobile_carrier": "Company_X",
        "mobile_number": "555-555-1234",
        "state": "MO",
        "web_page": "http://www.directfreight.com",
        "zip": 55555
      }
    properties:
      address:
        type: string
      city:
        type: string
      company:
        description: 'Company name. '
        type: string
      contact_extension:
        type: integer
      contact_name:
        description: 'Contact name. '
        type: string
      contact_number:
        type: integer
      dispatch_extension:
        description: Limited to 3 integers
        type: integer
      dispatch_number:
        type: integer
      dot_number:
        type: string
      fax_number:
        type: integer
      mc_number:
        type: string
      mobile_carrier:
        enum:
          - Other/Unknown
          - AT&T
          - Verizon
          - Sprint
          - T-Mobile
          - US Cellular
          - Nextel
          - Virgin Mobile
          - Boost Mobile
          - Straight Talk
          - Tracfone
          - NET10
          - Metro PCS
          - Cricket
          - Rogers
          - Fido
          - Bell Mobility
          - Telus
          - Clearnet
          - Solo Mobile
          - Koodo Mobile
        type: string
      mobile_number:
        type: integer
      state:
        type: string
      web_page:
        type: string
      zip:
        type: string
    type: object
    x-restlet:
      section: PROFILES
  rename_document:
    properties:
      current_name:
        description: 'The document to be renamed. '
        type: string
      new_name:
        description: 'Replacement name. '
        type: string
    required:
      - current_name
      - new_name
    type: object
    x-restlet:
      section: PROFILES
  reverse_geocode_response:
    properties:
      city:
        type: string
      region_code:
        type: string
      region_name:
        type: string
    required:
      - city
      - region_code
      - region_name
    type: object
    x-restlet:
      section: LOCATIONS
  success_status_response:
    example:
      status: status
    properties:
      status:
        description: 'A text status like OPTIN, NORESPONSE, OPTOUT.'
        type: string
    type: object
    x-restlet:
      section: not categorized yet
  toggle_hidden_companies:
    properties:
      company_name:
        description: 'The company name that need to be toggled. '
        type: string
    required:
      - company_name
    type: object
    x-restlet:
      section: not categorized yet
  toggle_hidden_entries:
    properties:
      entry_id:
        description: 'The entry that need to be toggled. '
        items:
          type: string
        type: array
    required:
      - entry_id
    type: object
    x-restlet:
      section: BOARDS
  trailer_type:
    description: These are the officially supported trailer types.
    items:
      enum:
        - V
        - VINT
        - SD
        - MX
        - HS
        - AC
        - LB
        - F+T
        - F
        - FINT
        - DD
        - V+V
        - V+A
        - CRG
        - HB
        - LA
        - PO
        - R
        - RINT
        - RGN
        - CV
        - DT
        - TNK
        - F+S
        - PNEU
        - CONT
        - OTHER
      type: string
    type: array
    x-restlet:
      section: common_definitions
  update_notes_status:
    properties:
      success:
        type: integer
    type: object
    x-restlet:
      section: common_definitions
  update_notes:
    properties:
      body:
        type: string
      note_id:
        description: Id of the note
        type: integer
      title:
        description: 'Subject of the note. '
        type: string
    required:
      - body
      - note_id
      - title
    type: object
    x-restlet:
      section: BOARDS
  upload_document:
    properties:
      The:
        description: 'file to be uploaded. '
        type: object
    required:
      - The
    type: object
    x-restlet:
      section: PROFILES
  user:
    properties:
      email:
        description: 'This must be a valid e-mail. '
        type: string
      password:
        description: 'Currently this is a 6-10 digit alphanumeric password. '
        type: string
    required:
      - email
      - password
    type: object
    x-restlet:
      section: END_USER_AUTHENTICATIONS
