{
  "basePath": "/v1",
  "consumes": [
    "application/json"
  ],
  "host": "api.directfreight.com",
  "info": {
    "contact": {},
    "description": "In order to use the Direct Freight API please first contact us to get an API Token. This token needs to be sent as a HTTP header argument in every request to our API.\n\napi-token=\"SECRET KEY\"\n\nPlease keep your api-token a secret. If the token is compromised please contact us to get a new one.\n\nThis api token authenticates your application and gives it access to the API.\n\nThe API token should not be confused with the end-user-token. That token is given to you via the end_user_authentications endpoint when the user logs in. This token is needed in order to use certain features, and get certain sensitive information.\n\nBoth Tokens are stateless, and delivered via the HTTP headers.",
    "title": "Direct Freight API",
    "version": "1.0",
    "x-logo": {
      "url": "https://www.directfreight.com/home/images/logo-direct-freight.png"
    }
  },
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "security": [
    {
      "api-token": []
    }
  ],
  "securityDefinitions": {
    "api-token": {
      "in": "header",
      "name": "api-token",
      "type": "apiKey"
    }
  },
  "swagger": "2.0",
  "x-restlet": {
    "sections": {
      "ALERTS": {},
      "BOARDS": {},
      "END_USER_AUTHENTICATIONS": {},
      "LOCATIONS": {},
      "Mobile Update": {},
      "Optins": {},
      "POSTINGS": {},
      "PROFILES": {},
      "VALIDATIONS": {},
      "common_definitions": {},
      "not categorized yet": {}
    }
  },
  "parameters": {
    "end-user-token": {
      "in": "header",
      "name": "end-user-token",
      "required": true,
      "type": "string"
    },
    "end-user-token-optional": {
      "in": "header",
      "name": "end-user-token",
      "required": false,
      "type": "string"
    },
    "board_type": {
      "description": "Valid types are \"loads\", and \"trucks\".",
      "enum": [
        "loads",
        "trucks"
      ],
      "in": "path",
      "name": "board_type",
      "required": true,
      "type": "string"
    },
    "posting_type": {
      "description": "Valid types are \"loads\", \"trucks\", \"private_loads\", \"private_trucks\", \"test_loads\", and \"test_trucks\"",
      "enum": [
        "loads",
        "trucks",
        "private_loads",
        "private_trucks",
        "test_loads",
        "test_trucks"
      ],
      "in": "path",
      "name": "posting_type",
      "required": true,
      "type": "string"
    }
  },
  "responses": {
    "error_422": {
      "description": "Unprocessable Entity. More information provided in the return object.",
      "schema": {
        "$ref": "#/definitions/error_object"
      }
    },
    "object_created": {
      "description": "Object created check the headers for a reference URL.",
      "schema": {
        "$ref": "#/definitions/create_status"
      }
    }
  },
  "paths": {
    "/alerts/{board_type}": {
      "delete": {
        "parameters": [
          {
            "description": "Specify to just delete some alerts.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "alert_id",
            "required": true,
            "type": "array"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          }
        },
        "summary": "STAGE=UNK Delete an alert.",
        "tags": [
          "alerts"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://api.directfreight.com/v1/alerts/loads',\n  qs: { alert_id: 'SOME_ARRAY_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://api.directfreight.com/v1/alerts/loads\");\n\nreq.query({\n  \"alert_id\": \"SOME_ARRAY_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"'https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/alerts/loads');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setQueryData(array(\n  'alert_id' => 'SOME_ARRAY_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/alerts/loads');\n$request->setRequestMethod('DELETE');\n$request->setQuery(new http\\QueryString(array(\n  'alert_id' => 'SOME_ARRAY_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/alerts/loads\"\n\nquerystring = {\"alert_id\":\"SOME_ARRAY_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url 'https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE 'https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "description": "Get a list of alerts. You can optionally limit the list by specifcying alerts by their alert_id.",
        "parameters": [
          {
            "description": "only get a subset of alerts. As this is a get request this is specified as a query string parameter.",
            "in": "query",
            "items": {
              "type": "integer"
            },
            "name": "alert_id",
            "required": false,
            "type": "array"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "On success will return a list of alerts.",
            "schema": {
              "$ref": "#/definitions/alert_list"
            }
          }
        },
        "summary": "STAGE=UNK Retrieve alerts.",
        "tags": [
          "alerts"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/alerts/loads',\n  qs: { alert_id: 'SOME_ARRAY_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/alerts/loads\");\n\nreq.query({\n  \"alert_id\": \"SOME_ARRAY_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/alerts/loads');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'alert_id' => 'SOME_ARRAY_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/alerts/loads');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'alert_id' => 'SOME_ARRAY_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/alerts/loads\"\n\nquerystring = {\"alert_id\":\"SOME_ARRAY_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/alerts/loads?alert_id=SOME_ARRAY_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "parameters": [
        {
          "description": "Valid types are \"loads\", and \"trucks\".",
          "enum": [
            "loads",
            "trucks"
          ],
          "in": "path",
          "name": "board_type",
          "required": true,
          "type": "string"
        }
      ],
      "patch": {
        "consumes": [],
        "description": "Search objects are set at creation. You cannot modify them after the alert has been created.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/patch_alert_properties"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returned on response."
          }
        },
        "summary": "STAGE=UNK Update an alert.",
        "tags": [
          "alerts"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/alerts/loads\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/alerts/loads\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/alerts/loads\"\n\n\tpayload := strings.NewReader(\"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/alerts/loads\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://api.directfreight.com/v1/alerts/loads\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/alerts/loads\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"alert_id\": 0,\n  \"end_hour\": 0,\n  \"expires_after\": \"<ADD EXAMPLE VALUE>\",\n  \"list_order\": \"<ADD EXAMPLE VALUE>\",\n  \"list_type\": \"complete-list\",\n  \"minute_frequency\": 0,\n  \"send_type\": \"email\",\n  \"start_hour\": 0,\n  \"time_zone\": 0\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://api.directfreight.com/v1/alerts/loads\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/alerts/loads\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ alert_id: 0,\n  end_hour: 0,\n  expires_after: '<ADD EXAMPLE VALUE>',\n  list_order: '<ADD EXAMPLE VALUE>',\n  list_type: 'complete-list',\n  minute_frequency: 0,\n  send_type: 'email',\n  start_hour: 0,\n  time_zone: 0 }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://api.directfreight.com/v1/alerts/loads',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { alert_id: 0,\n     end_hour: 0,\n     expires_after: '<ADD EXAMPLE VALUE>',\n     list_order: '<ADD EXAMPLE VALUE>',\n     list_type: 'complete-list',\n     minute_frequency: 0,\n     send_type: 'email',\n     start_hour: 0,\n     time_zone: 0 },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://api.directfreight.com/v1/alerts/loads\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"alert_id\": 0,\n  \"end_hour\": 0,\n  \"expires_after\": \"<ADD EXAMPLE VALUE>\",\n  \"list_order\": \"<ADD EXAMPLE VALUE>\",\n  \"list_type\": \"complete-list\",\n  \"minute_frequency\": 0,\n  \"send_type\": \"email\",\n  \"start_hour\": 0,\n  \"time_zone\": 0\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"alert_id\": @0,\n                              @\"end_hour\": @0,\n                              @\"expires_after\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"list_order\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"list_type\": @\"complete-list\",\n                              @\"minute_frequency\": @0,\n                              @\"send_type\": @\"email\",\n                              @\"start_hour\": @0,\n                              @\"time_zone\": @0 };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/alerts/loads\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/alerts/loads\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://api.directfreight.com/v1/alerts/loads\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/alerts/loads\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/alerts/loads');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/alerts/loads');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/alerts/loads\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/alerts/loads\"\n\npayload = \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/alerts/loads\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://api.directfreight.com/v1/alerts/loads \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}' |  \\\n  http PATCH https://api.directfreight.com/v1/alerts/loads \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/alerts/loads"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"alert_id\": 0,\n  \"end_hour\": 0,\n  \"expires_after\": \"<ADD EXAMPLE VALUE>\",\n  \"list_order\": \"<ADD EXAMPLE VALUE>\",\n  \"list_type\": \"complete-list\",\n  \"minute_frequency\": 0,\n  \"send_type\": \"email\",\n  \"start_hour\": 0,\n  \"time_zone\": 0\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/alerts/loads\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "consumes": [],
        "description": "Any parameter that is defined here and is also defined on the boards GET, follows the same rules.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/alert"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/object_created"
          }
        },
        "summary": "STAGE=UNK Create an alert.",
        "tags": [
          "alerts"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/alerts/loads\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"email_address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2019-12-30\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"search\\\":{\\\"delivery_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/alerts/loads\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"email_address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2019-12-30\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"search\\\":{\\\"delivery_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/alerts/loads\"\n\n\tpayload := strings.NewReader(\"{\\\"email_address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2019-12-30\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"search\\\":{\\\"delivery_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"email_address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2019-12-30\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"search\\\":{\\\"delivery_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/alerts/loads\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/alerts/loads\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"email_address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2019-12-30\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"search\\\":{\\\"delivery_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/alerts/loads\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"email_address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2019-12-30\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"search\\\":{\\\"delivery_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"email_address\": \"<ADD EXAMPLE VALUE>\",\n  \"end_hour\": 0,\n  \"expires_after\": \"2019-12-30\",\n  \"list_order\": \"<ADD EXAMPLE VALUE>\",\n  \"list_type\": \"complete-list\",\n  \"minute_frequency\": 0,\n  \"search\": {\n    \"delivery_date\": \"<ADD EXAMPLE VALUE>\",\n    \"destination_city\": \"<ADD EXAMPLE VALUE>\",\n    \"destination_radius\": 0,\n    \"destination_state\": \"<ADD EXAMPLE VALUE>\",\n    \"full_load\": false,\n    \"origin_city\": \"<ADD EXAMPLE VALUE>\",\n    \"origin_radius\": 0,\n    \"origin_state\": \"<ADD EXAMPLE VALUE>\"\n  },\n  \"send_type\": \"email\",\n  \"start_hour\": 0,\n  \"time_zone\": 0\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/alerts/loads\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/alerts/loads\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ email_address: '<ADD EXAMPLE VALUE>',\n  end_hour: 0,\n  expires_after: '2019-12-30',\n  list_order: '<ADD EXAMPLE VALUE>',\n  list_type: 'complete-list',\n  minute_frequency: 0,\n  search: \n   { delivery_date: '<ADD EXAMPLE VALUE>',\n     destination_city: '<ADD EXAMPLE VALUE>',\n     destination_radius: 0,\n     destination_state: '<ADD EXAMPLE VALUE>',\n     full_load: false,\n     origin_city: '<ADD EXAMPLE VALUE>',\n     origin_radius: 0,\n     origin_state: '<ADD EXAMPLE VALUE>' },\n  send_type: 'email',\n  start_hour: 0,\n  time_zone: 0 }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/alerts/loads',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { email_address: '<ADD EXAMPLE VALUE>',\n     end_hour: 0,\n     expires_after: '2019-12-30',\n     list_order: '<ADD EXAMPLE VALUE>',\n     list_type: 'complete-list',\n     minute_frequency: 0,\n     search: \n      { delivery_date: '<ADD EXAMPLE VALUE>',\n        destination_city: '<ADD EXAMPLE VALUE>',\n        destination_radius: 0,\n        destination_state: '<ADD EXAMPLE VALUE>',\n        full_load: false,\n        origin_city: '<ADD EXAMPLE VALUE>',\n        origin_radius: 0,\n        origin_state: '<ADD EXAMPLE VALUE>' },\n     send_type: 'email',\n     start_hour: 0,\n     time_zone: 0 },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/alerts/loads\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"email_address\": \"<ADD EXAMPLE VALUE>\",\n  \"end_hour\": 0,\n  \"expires_after\": \"2019-12-30\",\n  \"list_order\": \"<ADD EXAMPLE VALUE>\",\n  \"list_type\": \"complete-list\",\n  \"minute_frequency\": 0,\n  \"search\": {\n    \"delivery_date\": \"<ADD EXAMPLE VALUE>\",\n    \"destination_city\": \"<ADD EXAMPLE VALUE>\",\n    \"destination_radius\": 0,\n    \"destination_state\": \"<ADD EXAMPLE VALUE>\",\n    \"full_load\": false,\n    \"origin_city\": \"<ADD EXAMPLE VALUE>\",\n    \"origin_radius\": 0,\n    \"origin_state\": \"<ADD EXAMPLE VALUE>\"\n  },\n  \"send_type\": \"email\",\n  \"start_hour\": 0,\n  \"time_zone\": 0\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"email_address\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"end_hour\": @0,\n                              @\"expires_after\": @\"2019-12-30\",\n                              @\"list_order\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"list_type\": @\"complete-list\",\n                              @\"minute_frequency\": @0,\n                              @\"search\": @{ @\"delivery_date\": @\"<ADD EXAMPLE VALUE>\", @\"destination_city\": @\"<ADD EXAMPLE VALUE>\", @\"destination_radius\": @0, @\"destination_state\": @\"<ADD EXAMPLE VALUE>\", @\"full_load\": @NO, @\"origin_city\": @\"<ADD EXAMPLE VALUE>\", @\"origin_radius\": @0, @\"origin_state\": @\"<ADD EXAMPLE VALUE>\" },\n                              @\"send_type\": @\"email\",\n                              @\"start_hour\": @0,\n                              @\"time_zone\": @0 };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/alerts/loads\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/alerts/loads\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"email_address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2019-12-30\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"search\\\":{\\\"delivery_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/alerts/loads\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"email_address\":\"<ADD EXAMPLE VALUE>\",\"end_hour\":0,\"expires_after\":\"2019-12-30\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"search\":{\"delivery_date\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"origin_state\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/alerts/loads\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"email_address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2019-12-30\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"search\\\":{\\\"delivery_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/alerts/loads');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"email_address\":\"<ADD EXAMPLE VALUE>\",\"end_hour\":0,\"expires_after\":\"2019-12-30\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"search\":{\"delivery_date\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"origin_state\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"email_address\":\"<ADD EXAMPLE VALUE>\",\"end_hour\":0,\"expires_after\":\"2019-12-30\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"search\":{\"delivery_date\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"origin_state\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/alerts/loads');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"email_address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2019-12-30\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"search\\\":{\\\"delivery_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/alerts/loads\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/alerts/loads\"\n\npayload = \"{\\\"email_address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2019-12-30\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"search\\\":{\\\"delivery_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/alerts/loads\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"email_address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2019-12-30\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"search\\\":{\\\"delivery_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/alerts/loads \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"email_address\":\"<ADD EXAMPLE VALUE>\",\"end_hour\":0,\"expires_after\":\"2019-12-30\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"search\":{\"delivery_date\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"origin_state\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"email_address\":\"<ADD EXAMPLE VALUE>\",\"end_hour\":0,\"expires_after\":\"2019-12-30\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"search\":{\"delivery_date\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"origin_state\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}' |  \\\n  http POST https://api.directfreight.com/v1/alerts/loads \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"email_address\":\"<ADD EXAMPLE VALUE>\",\"end_hour\":0,\"expires_after\":\"2019-12-30\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"search\":{\"delivery_date\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"origin_state\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/alerts/loads"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"email_address\": \"<ADD EXAMPLE VALUE>\",\n  \"end_hour\": 0,\n  \"expires_after\": \"2019-12-30\",\n  \"list_order\": \"<ADD EXAMPLE VALUE>\",\n  \"list_type\": \"complete-list\",\n  \"minute_frequency\": 0,\n  \"search\": [\n    \"delivery_date\": \"<ADD EXAMPLE VALUE>\",\n    \"destination_city\": \"<ADD EXAMPLE VALUE>\",\n    \"destination_radius\": 0,\n    \"destination_state\": \"<ADD EXAMPLE VALUE>\",\n    \"full_load\": false,\n    \"origin_city\": \"<ADD EXAMPLE VALUE>\",\n    \"origin_radius\": 0,\n    \"origin_state\": \"<ADD EXAMPLE VALUE>\"\n  ],\n  \"send_type\": \"email\",\n  \"start_hour\": 0,\n  \"time_zone\": 0\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/alerts/loads\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "ALERTS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/alerts/loads\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/alerts/loads\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/alerts/loads\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/alerts/loads\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/alerts/loads\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/alerts/loads\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/alerts/loads\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/alerts/loads',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/alerts/loads\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/alerts/loads\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/alerts/loads\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/alerts/loads\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/alerts/loads\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/alerts/loads');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/alerts/loads');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/alerts/loads\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/alerts/loads\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/alerts/loads\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/alerts/loads \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/alerts/loads \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/alerts/loads"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/alerts/loads\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/boards/{board_type}": {
      "parameters": [
        {
          "description": "Defines the type of board requested.",
          "enum": [
            "loads",
            "trucks"
          ],
          "in": "path",
          "name": "board_type",
          "required": true,
          "type": "string",
          "x-example": "loads"
        }
      ],
      "post": {
        "consumes": [],
        "description": "This is the primary search method for loads and trucks. Please specifify at least an origin or destination.  The origin or destination may be state only.",
        "parameters": [
          {
            "default": "01234567890abc",
            "in": "header",
            "name": "end-user-token",
            "required": false,
            "type": "string",
            "x-example": "01234567890abc"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/board_request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list matching your search.",
            "schema": {
              "$ref": "#/definitions/board_response"
            }
          },
          "422": {
            "$ref": "#/responses/error_422"
          }
        },
        "summary": "Retrieve a board",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/loads\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: 01234567890abc\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"alert_id\\\":5555,\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"chicago\\\",\\\"destination_radius\\\":100,\\\"destination_state\\\":[\\\"IL\\\",\\\"HI\\\",\\\"NY\\\",\\\"KS\\\",\\\"TX\\\",\\\"MO\\\",\\\"AL\\\"],\\\"full_load\\\":true,\\\"item_count\\\":25,\\\"origin_city\\\":\\\"Kansas City\\\",\\\"origin_radius\\\":150,\\\"origin_state\\\":[\\\"MO\\\",\\\"IL\\\",\\\"TX\\\",\\\"CA\\\"],\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"return_only_new\\\":false,\\\"sort_parameter\\\":\\\"age\\\",\\\"trailer_type\\\":[\\\"F\\\",\\\"F+T\\\",\\\"F+S\\\",\\\"V\\\"]}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/loads\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"01234567890abc\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"alert_id\\\":5555,\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"chicago\\\",\\\"destination_radius\\\":100,\\\"destination_state\\\":[\\\"IL\\\",\\\"HI\\\",\\\"NY\\\",\\\"KS\\\",\\\"TX\\\",\\\"MO\\\",\\\"AL\\\"],\\\"full_load\\\":true,\\\"item_count\\\":25,\\\"origin_city\\\":\\\"Kansas City\\\",\\\"origin_radius\\\":150,\\\"origin_state\\\":[\\\"MO\\\",\\\"IL\\\",\\\"TX\\\",\\\"CA\\\"],\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"return_only_new\\\":false,\\\"sort_parameter\\\":\\\"age\\\",\\\"trailer_type\\\":[\\\"F\\\",\\\"F+T\\\",\\\"F+S\\\",\\\"V\\\"]}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/loads\"\n\n\tpayload := strings.NewReader(\"{\\\"alert_id\\\":5555,\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"chicago\\\",\\\"destination_radius\\\":100,\\\"destination_state\\\":[\\\"IL\\\",\\\"HI\\\",\\\"NY\\\",\\\"KS\\\",\\\"TX\\\",\\\"MO\\\",\\\"AL\\\"],\\\"full_load\\\":true,\\\"item_count\\\":25,\\\"origin_city\\\":\\\"Kansas City\\\",\\\"origin_radius\\\":150,\\\"origin_state\\\":[\\\"MO\\\",\\\"IL\\\",\\\"TX\\\",\\\"CA\\\"],\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"return_only_new\\\":false,\\\"sort_parameter\\\":\\\"age\\\",\\\"trailer_type\\\":[\\\"F\\\",\\\"F+T\\\",\\\"F+S\\\",\\\"V\\\"]}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"01234567890abc\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"alert_id\\\":5555,\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"chicago\\\",\\\"destination_radius\\\":100,\\\"destination_state\\\":[\\\"IL\\\",\\\"HI\\\",\\\"NY\\\",\\\"KS\\\",\\\"TX\\\",\\\"MO\\\",\\\"AL\\\"],\\\"full_load\\\":true,\\\"item_count\\\":25,\\\"origin_city\\\":\\\"Kansas City\\\",\\\"origin_radius\\\":150,\\\"origin_state\\\":[\\\"MO\\\",\\\"IL\\\",\\\"TX\\\",\\\"CA\\\"],\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"return_only_new\\\":false,\\\"sort_parameter\\\":\\\"age\\\",\\\"trailer_type\\\":[\\\"F\\\",\\\"F+T\\\",\\\"F+S\\\",\\\"V\\\"]}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/loads\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"01234567890abc\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/boards/loads\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"01234567890abc\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"alert_id\\\":5555,\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"chicago\\\",\\\"destination_radius\\\":100,\\\"destination_state\\\":[\\\"IL\\\",\\\"HI\\\",\\\"NY\\\",\\\"KS\\\",\\\"TX\\\",\\\"MO\\\",\\\"AL\\\"],\\\"full_load\\\":true,\\\"item_count\\\":25,\\\"origin_city\\\":\\\"Kansas City\\\",\\\"origin_radius\\\":150,\\\"origin_state\\\":[\\\"MO\\\",\\\"IL\\\",\\\"TX\\\",\\\"CA\\\"],\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"return_only_new\\\":false,\\\"sort_parameter\\\":\\\"age\\\",\\\"trailer_type\\\":[\\\"F\\\",\\\"F+T\\\",\\\"F+S\\\",\\\"V\\\"]}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/loads\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"01234567890abc\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"alert_id\\\":5555,\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"chicago\\\",\\\"destination_radius\\\":100,\\\"destination_state\\\":[\\\"IL\\\",\\\"HI\\\",\\\"NY\\\",\\\"KS\\\",\\\"TX\\\",\\\"MO\\\",\\\"AL\\\"],\\\"full_load\\\":true,\\\"item_count\\\":25,\\\"origin_city\\\":\\\"Kansas City\\\",\\\"origin_radius\\\":150,\\\"origin_state\\\":[\\\"MO\\\",\\\"IL\\\",\\\"TX\\\",\\\"CA\\\"],\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"return_only_new\\\":false,\\\"sort_parameter\\\":\\\"age\\\",\\\"trailer_type\\\":[\\\"F\\\",\\\"F+T\\\",\\\"F+S\\\",\\\"V\\\"]}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"alert_id\": 5555,\n  \"company_name\": \"<ADD EXAMPLE VALUE>\",\n  \"destination_city\": \"chicago\",\n  \"destination_radius\": 100,\n  \"destination_state\": [\n    \"IL\",\n    \"HI\",\n    \"NY\",\n    \"KS\",\n    \"TX\",\n    \"MO\",\n    \"AL\"\n  ],\n  \"full_load\": true,\n  \"item_count\": 25,\n  \"origin_city\": \"Kansas City\",\n  \"origin_radius\": 150,\n  \"origin_state\": [\n    \"MO\",\n    \"IL\",\n    \"TX\",\n    \"CA\"\n  ],\n  \"page_number\": 0,\n  \"return_count\": false,\n  \"return_only_new\": false,\n  \"sort_parameter\": \"age\",\n  \"trailer_type\": [\n    \"F\",\n    \"F+T\",\n    \"F+S\",\n    \"V\"\n  ]\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/boards/loads\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"01234567890abc\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/loads\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"01234567890abc\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ alert_id: 5555,\n  company_name: '<ADD EXAMPLE VALUE>',\n  destination_city: 'chicago',\n  destination_radius: 100,\n  destination_state: [ 'IL', 'HI', 'NY', 'KS', 'TX', 'MO', 'AL' ],\n  full_load: true,\n  item_count: 25,\n  origin_city: 'Kansas City',\n  origin_radius: 150,\n  origin_state: [ 'MO', 'IL', 'TX', 'CA' ],\n  page_number: 0,\n  return_count: false,\n  return_only_new: false,\n  sort_parameter: 'age',\n  trailer_type: [ 'F', 'F+T', 'F+S', 'V' ] }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/boards/loads',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': '01234567890abc',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { alert_id: 5555,\n     company_name: '<ADD EXAMPLE VALUE>',\n     destination_city: 'chicago',\n     destination_radius: 100,\n     destination_state: [ 'IL', 'HI', 'NY', 'KS', 'TX', 'MO', 'AL' ],\n     full_load: true,\n     item_count: 25,\n     origin_city: 'Kansas City',\n     origin_radius: 150,\n     origin_state: [ 'MO', 'IL', 'TX', 'CA' ],\n     page_number: 0,\n     return_count: false,\n     return_only_new: false,\n     sort_parameter: 'age',\n     trailer_type: [ 'F', 'F+T', 'F+S', 'V' ] },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/boards/loads\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"01234567890abc\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"alert_id\": 5555,\n  \"company_name\": \"<ADD EXAMPLE VALUE>\",\n  \"destination_city\": \"chicago\",\n  \"destination_radius\": 100,\n  \"destination_state\": [\n    \"IL\",\n    \"HI\",\n    \"NY\",\n    \"KS\",\n    \"TX\",\n    \"MO\",\n    \"AL\"\n  ],\n  \"full_load\": true,\n  \"item_count\": 25,\n  \"origin_city\": \"Kansas City\",\n  \"origin_radius\": 150,\n  \"origin_state\": [\n    \"MO\",\n    \"IL\",\n    \"TX\",\n    \"CA\"\n  ],\n  \"page_number\": 0,\n  \"return_count\": false,\n  \"return_only_new\": false,\n  \"sort_parameter\": \"age\",\n  \"trailer_type\": [\n    \"F\",\n    \"F+T\",\n    \"F+S\",\n    \"V\"\n  ]\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"01234567890abc\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"alert_id\": @5555,\n                              @\"company_name\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"destination_city\": @\"chicago\",\n                              @\"destination_radius\": @100,\n                              @\"destination_state\": @[ @\"IL\", @\"HI\", @\"NY\", @\"KS\", @\"TX\", @\"MO\", @\"AL\" ],\n                              @\"full_load\": @YES,\n                              @\"item_count\": @25,\n                              @\"origin_city\": @\"Kansas City\",\n                              @\"origin_radius\": @150,\n                              @\"origin_state\": @[ @\"MO\", @\"IL\", @\"TX\", @\"CA\" ],\n                              @\"page_number\": @0,\n                              @\"return_count\": @NO,\n                              @\"return_only_new\": @NO,\n                              @\"sort_parameter\": @\"age\",\n                              @\"trailer_type\": @[ @\"F\", @\"F+T\", @\"F+S\", @\"V\" ] };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/loads\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/loads\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"01234567890abc\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"alert_id\\\":5555,\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"chicago\\\",\\\"destination_radius\\\":100,\\\"destination_state\\\":[\\\"IL\\\",\\\"HI\\\",\\\"NY\\\",\\\"KS\\\",\\\"TX\\\",\\\"MO\\\",\\\"AL\\\"],\\\"full_load\\\":true,\\\"item_count\\\":25,\\\"origin_city\\\":\\\"Kansas City\\\",\\\"origin_radius\\\":150,\\\"origin_state\\\":[\\\"MO\\\",\\\"IL\\\",\\\"TX\\\",\\\"CA\\\"],\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"return_only_new\\\":false,\\\"sort_parameter\\\":\\\"age\\\",\\\"trailer_type\\\":[\\\"F\\\",\\\"F+T\\\",\\\"F+S\\\",\\\"V\\\"]}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/boards/loads\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"01234567890abc\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"alert_id\":5555,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"item_count\":25,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"return_count\":false,\"return_only_new\":false,\"sort_parameter\":\"age\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/loads\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"alert_id\\\":5555,\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"chicago\\\",\\\"destination_radius\\\":100,\\\"destination_state\\\":[\\\"IL\\\",\\\"HI\\\",\\\"NY\\\",\\\"KS\\\",\\\"TX\\\",\\\"MO\\\",\\\"AL\\\"],\\\"full_load\\\":true,\\\"item_count\\\":25,\\\"origin_city\\\":\\\"Kansas City\\\",\\\"origin_radius\\\":150,\\\"origin_state\\\":[\\\"MO\\\",\\\"IL\\\",\\\"TX\\\",\\\"CA\\\"],\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"return_only_new\\\":false,\\\"sort_parameter\\\":\\\"age\\\",\\\"trailer_type\\\":[\\\"F\\\",\\\"F+T\\\",\\\"F+S\\\",\\\"V\\\"]}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: 01234567890abc\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/loads');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => '01234567890abc',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"alert_id\":5555,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"item_count\":25,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"return_count\":false,\"return_only_new\":false,\"sort_parameter\":\"age\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"alert_id\":5555,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"item_count\":25,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"return_count\":false,\"return_only_new\":false,\"sort_parameter\":\"age\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/loads');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => '01234567890abc',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"alert_id\\\":5555,\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"chicago\\\",\\\"destination_radius\\\":100,\\\"destination_state\\\":[\\\"IL\\\",\\\"HI\\\",\\\"NY\\\",\\\"KS\\\",\\\"TX\\\",\\\"MO\\\",\\\"AL\\\"],\\\"full_load\\\":true,\\\"item_count\\\":25,\\\"origin_city\\\":\\\"Kansas City\\\",\\\"origin_radius\\\":150,\\\"origin_state\\\":[\\\"MO\\\",\\\"IL\\\",\\\"TX\\\",\\\"CA\\\"],\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"return_only_new\\\":false,\\\"sort_parameter\\\":\\\"age\\\",\\\"trailer_type\\\":[\\\"F\\\",\\\"F+T\\\",\\\"F+S\\\",\\\"V\\\"]}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"01234567890abc\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/boards/loads\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/loads\"\n\npayload = \"{\\\"alert_id\\\":5555,\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"chicago\\\",\\\"destination_radius\\\":100,\\\"destination_state\\\":[\\\"IL\\\",\\\"HI\\\",\\\"NY\\\",\\\"KS\\\",\\\"TX\\\",\\\"MO\\\",\\\"AL\\\"],\\\"full_load\\\":true,\\\"item_count\\\":25,\\\"origin_city\\\":\\\"Kansas City\\\",\\\"origin_radius\\\":150,\\\"origin_state\\\":[\\\"MO\\\",\\\"IL\\\",\\\"TX\\\",\\\"CA\\\"],\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"return_only_new\\\":false,\\\"sort_parameter\\\":\\\"age\\\",\\\"trailer_type\\\":[\\\"F\\\",\\\"F+T\\\",\\\"F+S\\\",\\\"V\\\"]}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"01234567890abc\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/loads\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = '01234567890abc'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"alert_id\\\":5555,\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"chicago\\\",\\\"destination_radius\\\":100,\\\"destination_state\\\":[\\\"IL\\\",\\\"HI\\\",\\\"NY\\\",\\\"KS\\\",\\\"TX\\\",\\\"MO\\\",\\\"AL\\\"],\\\"full_load\\\":true,\\\"item_count\\\":25,\\\"origin_city\\\":\\\"Kansas City\\\",\\\"origin_radius\\\":150,\\\"origin_state\\\":[\\\"MO\\\",\\\"IL\\\",\\\"TX\\\",\\\"CA\\\"],\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"return_only_new\\\":false,\\\"sort_parameter\\\":\\\"age\\\",\\\"trailer_type\\\":[\\\"F\\\",\\\"F+T\\\",\\\"F+S\\\",\\\"V\\\"]}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/boards/loads \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: 01234567890abc' \\\n  --data '{\"alert_id\":5555,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"item_count\":25,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"return_count\":false,\"return_only_new\":false,\"sort_parameter\":\"age\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"alert_id\":5555,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"item_count\":25,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"return_count\":false,\"return_only_new\":false,\"sort_parameter\":\"age\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}' |  \\\n  http POST https://api.directfreight.com/v1/boards/loads \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:01234567890abc"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: 01234567890abc' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"alert_id\":5555,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"item_count\":25,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"return_count\":false,\"return_only_new\":false,\"sort_parameter\":\"age\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/loads"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"01234567890abc\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"alert_id\": 5555,\n  \"company_name\": \"<ADD EXAMPLE VALUE>\",\n  \"destination_city\": \"chicago\",\n  \"destination_radius\": 100,\n  \"destination_state\": [\"IL\", \"HI\", \"NY\", \"KS\", \"TX\", \"MO\", \"AL\"],\n  \"full_load\": true,\n  \"item_count\": 25,\n  \"origin_city\": \"Kansas City\",\n  \"origin_radius\": 150,\n  \"origin_state\": [\"MO\", \"IL\", \"TX\", \"CA\"],\n  \"page_number\": 0,\n  \"return_count\": false,\n  \"return_only_new\": false,\n  \"sort_parameter\": \"age\",\n  \"trailer_type\": [\"F\", \"F+T\", \"F+S\", \"V\"]\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/loads\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "BOARDS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/loads\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/loads\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/loads\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/boards/loads\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/loads\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/loads\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/loads\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/boards/loads',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/loads\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/loads\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/loads\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/boards/loads\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/loads\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/loads');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/loads');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/boards/loads\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/loads\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/boards/loads\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/boards/loads \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/boards/loads \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/loads"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/loads\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/boards/{board_type}/state_totals": {
      "get": {
        "description": "A convenience method to get totals by state.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/get_state_list_response"
            }
          }
        },
        "summary": "Totals by state",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/loads/state_totals\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/loads/state_totals\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/loads/state_totals\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/loads/state_totals\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/boards/loads/state_totals\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/loads/state_totals\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/boards/loads/state_totals\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/loads/state_totals\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/boards/loads/state_totals',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/boards/loads/state_totals\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/loads/state_totals\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/loads/state_totals\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"https://api.directfreight.com/v1/boards/loads/state_totals\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/loads/state_totals\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/loads/state_totals');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/loads/state_totals');\n$request->setRequestMethod('GET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/boards/loads/state_totals\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/loads/state_totals\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/loads/state_totals\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url https://api.directfreight.com/v1/boards/loads/state_totals \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET https://api.directfreight.com/v1/boards/loads/state_totals \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/loads/state_totals"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/loads/state_totals\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "parameters": [
        {
          "description": "Valid types are \"loads\", and \"trucks\".",
          "enum": [
            "loads",
            "trucks"
          ],
          "in": "path",
          "name": "board_type",
          "required": true,
          "type": "string"
        }
      ],
      "x-restlet": {
        "section": "BOARDS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/loads/state_totals\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/loads/state_totals\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/loads/state_totals\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/boards/loads/state_totals\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/loads/state_totals\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/loads/state_totals\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/loads/state_totals\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/boards/loads/state_totals',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/loads/state_totals\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/loads/state_totals\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/loads/state_totals\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/boards/loads/state_totals\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/loads/state_totals\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/loads/state_totals');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/loads/state_totals');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/boards/loads/state_totals\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/loads/state_totals\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/boards/loads/state_totals\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/boards/loads/state_totals \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/boards/loads/state_totals \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/loads/state_totals"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/loads/state_totals\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/boards/hidden_companies": {
      "delete": {
        "description": "Mark a company as not hidden.",
        "parameters": [
          {
            "description": "The company that need to be marked as not hidden.",
            "in": "query",
            "name": "company_name",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          }
        },
        "summary": "STAGE=UNK Unhide companies",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://api.directfreight.com/v1/boards/hidden_companies',\n  qs: { company_name: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://api.directfreight.com/v1/boards/hidden_companies\");\n\nreq.query({\n  \"company_name\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/hidden_companies');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setQueryData(array(\n  'company_name' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_companies');\n$request->setRequestMethod('DELETE');\n$request->setQuery(new http\\QueryString(array(\n  'company_name' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/hidden_companies\"\n\nquerystring = {\"company_name\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url 'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE 'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "description": "Get a list of companies that should be hidden.",
        "parameters": [
          {
            "description": "A list of company names to check if any should be visually hidden.  If this field is blank all hidden companies will be returned.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "company_name",
            "required": false,
            "type": "array"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/get_hidden_companies_response"
            }
          }
        },
        "summary": "STAGE=UNK List hidden companies.",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/boards/hidden_companies',\n  qs: { company_name: 'SOME_ARRAY_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/boards/hidden_companies\");\n\nreq.query({\n  \"company_name\": \"SOME_ARRAY_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/hidden_companies');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'company_name' => 'SOME_ARRAY_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_companies');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'company_name' => 'SOME_ARRAY_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/hidden_companies\"\n\nquerystring = {\"company_name\":\"SOME_ARRAY_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "patch": {
        "consumes": [],
        "description": "Toggle one  company between hidden and unhidden.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/toggle_hidden_companies"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          }
        },
        "summary": "STAGE=UNK Change hidden status",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/hidden_companies\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/hidden_companies\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_companies\"\n\n\tpayload := strings.NewReader(\"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/hidden_companies\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://api.directfreight.com/v1/boards/hidden_companies\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/hidden_companies\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"company_name\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://api.directfreight.com/v1/boards/hidden_companies\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/hidden_companies\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ company_name: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://api.directfreight.com/v1/boards/hidden_companies',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: { company_name: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://api.directfreight.com/v1/boards/hidden_companies\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"company_name\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"company_name\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/hidden_companies\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/hidden_companies\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://api.directfreight.com/v1/boards/hidden_companies\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"company_name\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/hidden_companies\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/hidden_companies');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"company_name\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"company_name\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_companies');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/boards/hidden_companies\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/hidden_companies\"\n\npayload = \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/hidden_companies\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://api.directfreight.com/v1/boards/hidden_companies \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"company_name\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"company_name\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http PATCH https://api.directfreight.com/v1/boards/hidden_companies \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"company_name\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/hidden_companies"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\"company_name\": \"<ADD EXAMPLE VALUE>\"]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/hidden_companies\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "consumes": [],
        "description": "Mark a set of companies as hidden.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/mark_hidden_companies"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/object_created"
          }
        },
        "summary": "STAGE=UNK Hide companies.",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/hidden_companies\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/hidden_companies\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_companies\"\n\n\tpayload := strings.NewReader(\"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/hidden_companies\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/boards/hidden_companies\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/hidden_companies\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"company_name\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/boards/hidden_companies\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/hidden_companies\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ company_name: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/boards/hidden_companies',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: { company_name: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/boards/hidden_companies\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"company_name\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"company_name\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/hidden_companies\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/hidden_companies\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/boards/hidden_companies\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"company_name\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/hidden_companies\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/hidden_companies');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"company_name\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"company_name\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_companies');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/boards/hidden_companies\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/hidden_companies\"\n\npayload = \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/hidden_companies\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/boards/hidden_companies \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"company_name\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"company_name\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http POST https://api.directfreight.com/v1/boards/hidden_companies \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"company_name\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/hidden_companies"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\"company_name\": \"<ADD EXAMPLE VALUE>\"]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/hidden_companies\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "BOARDS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/hidden_companies\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_companies\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/hidden_companies\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/boards/hidden_companies\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/hidden_companies\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/hidden_companies\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/hidden_companies\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/boards/hidden_companies',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/hidden_companies\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/hidden_companies\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/hidden_companies\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/boards/hidden_companies\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/hidden_companies\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/hidden_companies');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_companies');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/boards/hidden_companies\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/hidden_companies\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/boards/hidden_companies\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/boards/hidden_companies \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/boards/hidden_companies \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/hidden_companies"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/hidden_companies\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/boards/hidden_entries": {
      "delete": {
        "description": " Mark an entry as unhidden.",
        "parameters": [
          {
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "entry_id",
            "required": true,
            "type": "array"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "STAGE=private Unhide 1 or more postings",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://api.directfreight.com/v1/boards/hidden_entries',\n  qs: { entry_id: 'SOME_ARRAY_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://api.directfreight.com/v1/boards/hidden_entries\");\n\nreq.query({\n  \"entry_id\": \"SOME_ARRAY_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/hidden_entries');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setQueryData(array(\n  'entry_id' => 'SOME_ARRAY_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_entries');\n$request->setRequestMethod('DELETE');\n$request->setQuery(new http\\QueryString(array(\n  'entry_id' => 'SOME_ARRAY_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/hidden_entries\"\n\nquerystring = {\"entry_id\":\"SOME_ARRAY_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url 'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE 'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "description": "Get a list of entries that should be hidden.",
        "parameters": [
          {
            "description": "A list of id's to check if any should be visually hidden.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "entry_id",
            "required": true,
            "type": "array"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/get_hidden_entries"
            }
          }
        },
        "summary": "STAGE=UNK List hidden entries.",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/boards/hidden_entries',\n  qs: { entry_id: 'SOME_ARRAY_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/boards/hidden_entries\");\n\nreq.query({\n  \"entry_id\": \"SOME_ARRAY_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/hidden_entries');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'entry_id' => 'SOME_ARRAY_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_entries');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'entry_id' => 'SOME_ARRAY_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/hidden_entries\"\n\nquerystring = {\"entry_id\":\"SOME_ARRAY_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "patch": {
        "consumes": [],
        "description": "Toggle one or more entries between hidden and unhidden.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/toggle_hidden_entries"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          }
        },
        "summary": "STAGE=UNK Change hidden status",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/hidden_entries\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/hidden_entries\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_entries\"\n\n\tpayload := strings.NewReader(\"{}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/hidden_entries\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://api.directfreight.com/v1/boards/hidden_entries\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/hidden_entries\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://api.directfreight.com/v1/boards/hidden_entries\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/hidden_entries\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({}));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://api.directfreight.com/v1/boards/hidden_entries',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: {},\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://api.directfreight.com/v1/boards/hidden_entries\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{  };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/hidden_entries\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/hidden_entries\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://api.directfreight.com/v1/boards/hidden_entries\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/hidden_entries\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/hidden_entries');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_entries');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/boards/hidden_entries\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/hidden_entries\"\n\npayload = \"{}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/hidden_entries\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://api.directfreight.com/v1/boards/hidden_entries \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{}' |  \\\n  http PATCH https://api.directfreight.com/v1/boards/hidden_entries \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/hidden_entries"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = []\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/hidden_entries\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "consumes": [],
        "description": "Mark an entry as hidden.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hidden_entry_object"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/object_created"
          }
        },
        "summary": "STAGE=private Hide 1 or more postings",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/hidden_entries\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/hidden_entries\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_entries\"\n\n\tpayload := strings.NewReader(\"{}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/hidden_entries\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/boards/hidden_entries\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/hidden_entries\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/boards/hidden_entries\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/hidden_entries\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({}));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/boards/hidden_entries',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: {},\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/boards/hidden_entries\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{  };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/hidden_entries\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/hidden_entries\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/boards/hidden_entries\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/hidden_entries\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/hidden_entries');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_entries');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/boards/hidden_entries\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/hidden_entries\"\n\npayload = \"{}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/hidden_entries\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/boards/hidden_entries \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{}' |  \\\n  http POST https://api.directfreight.com/v1/boards/hidden_entries \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/hidden_entries"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = []\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/hidden_entries\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "BOARDS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/hidden_entries\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_entries\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/hidden_entries\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/boards/hidden_entries\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/hidden_entries\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/hidden_entries\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/hidden_entries\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/boards/hidden_entries',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/hidden_entries\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/hidden_entries\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/hidden_entries\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/boards/hidden_entries\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/hidden_entries\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/hidden_entries');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_entries');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/boards/hidden_entries\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/hidden_entries\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/boards/hidden_entries\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/boards/hidden_entries \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/boards/hidden_entries \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/hidden_entries"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/hidden_entries\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/boards/notes": {
      "delete": {
        "parameters": [
          {
            "description": "The entry to associate the note with. ",
            "in": "query",
            "name": "note_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          }
        },
        "summary": "STAGE=UNK Delete a note.",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/notes?note_id=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://api.directfreight.com/v1/boards/notes',\n  qs: { note_id: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://api.directfreight.com/v1/boards/notes\");\n\nreq.query({\n  \"note_id\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"'https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/notes');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setQueryData(array(\n  'note_id' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/notes');\n$request->setRequestMethod('DELETE');\n$request->setQuery(new http\\QueryString(array(\n  'note_id' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/boards/notes?note_id=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/notes\"\n\nquerystring = {\"note_id\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url 'https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE 'https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "description": "Get notes that this user has written.",
        "parameters": [
          {
            "description": "Optionally just check if certain loads have notes associated with them. ",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "entry_id",
            "required": false,
            "type": "array"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/get_boards_notes_response"
            }
          }
        },
        "summary": "STAGE=UNK List user notes.",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/notes?entry_id=SOME_ARRAY_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/boards/notes',\n  qs: { entry_id: 'SOME_ARRAY_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/boards/notes\");\n\nreq.query({\n  \"entry_id\": \"SOME_ARRAY_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/notes');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'entry_id' => 'SOME_ARRAY_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/notes');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'entry_id' => 'SOME_ARRAY_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/boards/notes?entry_id=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/notes\"\n\nquerystring = {\"entry_id\":\"SOME_ARRAY_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "patch": {
        "consumes": [],
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/update_notes"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/update_notes_status"
            }
          }
        },
        "summary": "STAGE=UNK Update a note.",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/notes\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"note_id\\\":0,\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/notes\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"note_id\\\":0,\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/notes\"\n\n\tpayload := strings.NewReader(\"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"note_id\\\":0,\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"note_id\\\":0,\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/notes\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://api.directfreight.com/v1/boards/notes\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"note_id\\\":0,\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/notes\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"note_id\\\":0,\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"body\": \"<ADD EXAMPLE VALUE>\",\n  \"note_id\": 0,\n  \"title\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://api.directfreight.com/v1/boards/notes\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/notes\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ body: '<ADD EXAMPLE VALUE>',\n  note_id: 0,\n  title: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://api.directfreight.com/v1/boards/notes',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { body: '<ADD EXAMPLE VALUE>',\n     note_id: 0,\n     title: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://api.directfreight.com/v1/boards/notes\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"body\": \"<ADD EXAMPLE VALUE>\",\n  \"note_id\": 0,\n  \"title\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"body\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"note_id\": @0,\n                              @\"title\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/notes\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/notes\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"note_id\\\":0,\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://api.directfreight.com/v1/boards/notes\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/notes\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"note_id\\\":0,\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/notes');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/notes');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"note_id\\\":0,\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/boards/notes\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/notes\"\n\npayload = \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"note_id\\\":0,\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/notes\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"note_id\\\":0,\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://api.directfreight.com/v1/boards/notes \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http PATCH https://api.directfreight.com/v1/boards/notes \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/notes"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"body\": \"<ADD EXAMPLE VALUE>\",\n  \"note_id\": 0,\n  \"title\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/notes\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "consumes": [],
        "description": "Create a new note.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create_notes"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Object created check the headers for a reference URL.",
            "schema": {
              "$ref": "#/definitions/note_create_status"
            }
          }
        },
        "summary": "STAGE=UNK Create a note.",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/notes\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/notes\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/notes\"\n\n\tpayload := strings.NewReader(\"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/notes\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/boards/notes\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/notes\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"body\": \"<ADD EXAMPLE VALUE>\",\n  \"entry_id\": \"<ADD EXAMPLE VALUE>\",\n  \"title\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/boards/notes\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/notes\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ body: '<ADD EXAMPLE VALUE>',\n  entry_id: '<ADD EXAMPLE VALUE>',\n  title: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/boards/notes',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { body: '<ADD EXAMPLE VALUE>',\n     entry_id: '<ADD EXAMPLE VALUE>',\n     title: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/boards/notes\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"body\": \"<ADD EXAMPLE VALUE>\",\n  \"entry_id\": \"<ADD EXAMPLE VALUE>\",\n  \"title\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"body\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"entry_id\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"title\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/notes\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/notes\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/boards/notes\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/notes\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/notes');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/notes');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/boards/notes\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/notes\"\n\npayload = \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/notes\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/boards/notes \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http POST https://api.directfreight.com/v1/boards/notes \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/notes"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"body\": \"<ADD EXAMPLE VALUE>\",\n  \"entry_id\": \"<ADD EXAMPLE VALUE>\",\n  \"title\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/notes\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "BOARDS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/notes\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/notes\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/notes\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/boards/notes\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/notes\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/notes\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/notes\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/boards/notes',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/notes\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/notes\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/notes\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/boards/notes\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/notes\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/notes');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/notes');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/boards/notes\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/notes\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/boards/notes\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/boards/notes \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/boards/notes \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/notes"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/notes\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/end_user_authentication/users": {
      "post": {
        "consumes": [],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "properties": {
                "end-user-token": {
                  "description": "Auto logs in the new user and gives them a token.",
                  "type": "string"
                }
              },
              "required": [
                "end-user-token"
              ],
              "type": "object"
            }
          },
          "422": {
            "$ref": "#/responses/error_422"
          }
        },
        "summary": "STAGE=UNK Create a new user.",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentication/users\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentication/users\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentication/users\"\n\n\tpayload := strings.NewReader(\"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentication/users\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/end_user_authentication/users\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentication/users\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"email\": \"<ADD EXAMPLE VALUE>\",\n  \"password\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/end_user_authentication/users\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentication/users\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ email: '<ADD EXAMPLE VALUE>',\n  password: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/end_user_authentication/users',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { email: '<ADD EXAMPLE VALUE>',\n     password: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/end_user_authentication/users\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"email\": \"<ADD EXAMPLE VALUE>\",\n  \"password\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"email\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"password\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentication/users\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentication/users\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/end_user_authentication/users\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"email\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentication/users\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentication/users');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"email\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"email\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentication/users');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/end_user_authentication/users\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentication/users\"\n\npayload = \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentication/users\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/end_user_authentication/users \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --data '{\"email\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"email\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http POST https://api.directfreight.com/v1/end_user_authentication/users \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"email\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentication/users"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"email\": \"<ADD EXAMPLE VALUE>\",\n  \"password\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentication/users\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentication/users\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentication/users\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentication/users\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/end_user_authentication/users\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentication/users\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentication/users\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentication/users\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/end_user_authentication/users',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentication/users\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentication/users\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentication/users\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/end_user_authentication/users\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentication/users\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentication/users');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentication/users');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/end_user_authentication/users\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentication/users\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentication/users\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/end_user_authentication/users \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/end_user_authentication/users \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentication/users"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentication/users\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/end_user_authentications": {
      "delete": {
        "description": "This logs a user out. the end-user-token will no longer be valid.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Will not return content on a successful logout."
          }
        },
        "summary": "Logout",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://api.directfreight.com/v1/end_user_authentications\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.directfreight.com/v1/end_user_authentications\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://api.directfreight.com/v1/end_user_authentications',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://api.directfreight.com/v1/end_user_authentications\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"https://api.directfreight.com/v1/end_user_authentications\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications');\n$request->setRequestMethod('DELETE');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/end_user_authentications\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url https://api.directfreight.com/v1/end_user_authentications \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE https://api.directfreight.com/v1/end_user_authentications \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "description": "Get current authentication level for the user.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "examples": {
              "application/json": "{status: \"Subscribed\"}"
            },
            "schema": {
              "properties": {
                "status": {
                  "description": "Will return the logged in user's status.",
                  "enum": [
                    "subscribed",
                    "posting",
                    "overdue",
                    "not_logged_in"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "summary": "Get authentication level.",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/end_user_authentications\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/end_user_authentications\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/end_user_authentications\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"https://api.directfreight.com/v1/end_user_authentications\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications');\n$request->setRequestMethod('GET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/end_user_authentications\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url https://api.directfreight.com/v1/end_user_authentications \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET https://api.directfreight.com/v1/end_user_authentications \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "consumes": [],
        "description": "This function sends login credentials, and retrieves a stateless token.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/login_credentials"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/end-user-token"
            }
          },
          "422": {
            "$ref": "#/responses/error_422"
          }
        },
        "summary": "Login",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"username\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"username\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications\"\n\n\tpayload := strings.NewReader(\"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"username\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"username\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/end_user_authentications\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"username\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"username\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"login\": \"<ADD EXAMPLE VALUE>\",\n  \"realm\": \"username\",\n  \"secret\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/end_user_authentications\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ login: '<ADD EXAMPLE VALUE>',\n  realm: 'username',\n  secret: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/end_user_authentications',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { login: '<ADD EXAMPLE VALUE>',\n     realm: 'username',\n     secret: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/end_user_authentications\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"login\": \"<ADD EXAMPLE VALUE>\",\n  \"realm\": \"username\",\n  \"secret\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"login\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"realm\": @\"username\",\n                              @\"secret\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"username\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/end_user_authentications\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"username\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"username\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/end_user_authentications\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications\"\n\npayload = \"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"username\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"username\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/end_user_authentications \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --data '{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http POST https://api.directfreight.com/v1/end_user_authentications \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"login\": \"<ADD EXAMPLE VALUE>\",\n  \"realm\": \"username\",\n  \"secret\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/end_user_authentications\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/end_user_authentications\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/end_user_authentications\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/end_user_authentications \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/end_user_authentications \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/end_user_authentications/dates": {
      "get": {
        "description": "Gets an authoritative date_time string.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "examples": {
              "application/json": "{\n  \"now\": \"now\"\n}"
            },
            "schema": {
              "properties": {
                "now": {
                  "description": "The current date and time based on our server.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "summary": "Retrieve date",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/dates\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications/dates\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/dates\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/dates\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/end_user_authentications/dates\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/dates\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/end_user_authentications/dates\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/dates\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/dates',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/end_user_authentications/dates\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/dates\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/dates\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"https://api.directfreight.com/v1/end_user_authentications/dates\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/dates\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/dates');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/dates');\n$request->setRequestMethod('GET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/end_user_authentications/dates\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/dates\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/dates\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url https://api.directfreight.com/v1/end_user_authentications/dates \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET https://api.directfreight.com/v1/end_user_authentications/dates \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/dates"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/dates\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/dates\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/dates\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/dates\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/end_user_authentications/dates\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/dates\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/dates\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/dates\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/dates',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/dates\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/dates\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/dates\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/end_user_authentications/dates\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/dates\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/dates');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/dates');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/end_user_authentications/dates\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/dates\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/dates\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/end_user_authentications/dates \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/dates \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/dates"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/dates\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/end_user_authentications/passwords": {
      "get": {
        "description": "Request a forgotten password.",
        "parameters": [
          {
            "description": "The user e-mail to send a password to if valid.",
            "in": "query",
            "name": "email",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "This will return a success even if the e-mail is not in our records."
          },
          "422": {
            "$ref": "#/responses/error_422"
          }
        },
        "summary": "STAGE=UNK Retrieve password",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/passwords',\n  qs: { email: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/end_user_authentications/passwords\");\n\nreq.query({\n  \"email\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/passwords');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'email' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/passwords');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'email' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/passwords\"\n\nquerystring = {\"email\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/passwords?email=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "patch": {
        "consumes": [],
        "description": "Update a users password.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "new_password": {
                  "description": "The user's new password.",
                  "type": "string"
                },
                "old_password": {
                  "description": "Thee user's old password.",
                  "type": "string"
                }
              },
              "required": [
                "new_password",
                "old_password"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "A successful operation."
          },
          "422": {
            "$ref": "#/responses/error_422"
          }
        },
        "summary": "STAGE=UNK Update password.",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/passwords\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications/passwords\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/passwords\"\n\n\tpayload := strings.NewReader(\"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/passwords\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://api.directfreight.com/v1/end_user_authentications/passwords\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/passwords\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"new_password\": \"<ADD EXAMPLE VALUE>\",\n  \"old_password\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://api.directfreight.com/v1/end_user_authentications/passwords\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/passwords\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ new_password: '<ADD EXAMPLE VALUE>',\n  old_password: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/passwords',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { new_password: '<ADD EXAMPLE VALUE>',\n     old_password: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://api.directfreight.com/v1/end_user_authentications/passwords\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"new_password\": \"<ADD EXAMPLE VALUE>\",\n  \"old_password\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"new_password\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"old_password\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/passwords\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/passwords\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://api.directfreight.com/v1/end_user_authentications/passwords\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/passwords\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/passwords');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/passwords');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/end_user_authentications/passwords\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/passwords\"\n\npayload = \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/passwords\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://api.directfreight.com/v1/end_user_authentications/passwords \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http PATCH https://api.directfreight.com/v1/end_user_authentications/passwords \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/passwords"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"new_password\": \"<ADD EXAMPLE VALUE>\",\n  \"old_password\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/passwords\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/passwords\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/passwords\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/passwords\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/end_user_authentications/passwords\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/passwords\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/passwords\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/passwords\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/passwords',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/passwords\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/passwords\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/passwords\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/end_user_authentications/passwords\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/passwords\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/passwords');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/passwords');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/end_user_authentications/passwords\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/passwords\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/passwords\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/end_user_authentications/passwords \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/passwords \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/passwords"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/passwords\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/locations/autocomplete": {
      "get": {
        "description": "A string of a partial city or state name, and returns a list of possible matches.",
        "parameters": [
          {
            "description": "City or State or Postal code to search for.   It matches city name and state name and state abbreviation.  So for instance \"MO\" would return Missouri, Montana, and Montreal, QC  while  ME would return Maine, Mexico, and Memphis, TN",
            "in": "query",
            "name": "searchtext",
            "required": true,
            "type": "string"
          },
          {
            "description": "restricts the results return.  regions will only return states, provinces, and countries.  cities will only return cities and postals.  The default is to return both cities and regions in the results.",
            "enum": [
              "cities",
              "regions"
            ],
            "in": "query",
            "name": "return_only",
            "required": false,
            "type": "string"
          },
          {
            "default": 100,
            "description": "The number of records to return.   Limit 1 has a special property where it will only return a high confidence match so it may return zero results if no match found.",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "limit",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/autocomplete_response"
            }
          }
        },
        "summary": "autocomplete",
        "tags": [
          "locations"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/locations/autocomplete',\n  qs: \n   { searchtext: 'SOME_STRING_VALUE',\n     return_only: 'SOME_STRING_VALUE',\n     limit: '100' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/locations/autocomplete\");\n\nreq.query({\n  \"searchtext\": \"SOME_STRING_VALUE\",\n  \"return_only\": \"SOME_STRING_VALUE\",\n  \"limit\": \"100\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/locations/autocomplete');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'searchtext' => 'SOME_STRING_VALUE',\n  'return_only' => 'SOME_STRING_VALUE',\n  'limit' => '100'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/locations/autocomplete');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'searchtext' => 'SOME_STRING_VALUE',\n  'return_only' => 'SOME_STRING_VALUE',\n  'limit' => '100'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/locations/autocomplete\"\n\nquerystring = {\"searchtext\":\"SOME_STRING_VALUE\",\"return_only\":\"SOME_STRING_VALUE\",\"limit\":\"100\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&limit=100\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "LOCATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/locations/autocomplete\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/locations/autocomplete\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/locations/autocomplete\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/locations/autocomplete\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/locations/autocomplete\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/locations/autocomplete\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/locations/autocomplete\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/locations/autocomplete',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/locations/autocomplete\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/locations/autocomplete\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/locations/autocomplete\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/locations/autocomplete\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/locations/autocomplete\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/locations/autocomplete');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/locations/autocomplete');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/locations/autocomplete\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/locations/autocomplete\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/locations/autocomplete\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/locations/autocomplete \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/locations/autocomplete \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/locations/autocomplete"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/locations/autocomplete\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/locations/reverse_geocode": {
      "get": {
        "description": "returns the nearest city to a lat/lon point. (reverse geocode)",
        "parameters": [
          {
            "format": "float",
            "in": "query",
            "name": "latitude",
            "required": true,
            "type": "number"
          },
          {
            "format": "float",
            "in": "query",
            "name": "longitude",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/reverse_geocode_response"
            }
          }
        },
        "summary": "reverse_geocode",
        "tags": [
          "locations"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/locations/reverse_geocode',\n  qs: \n   { latitude: 'SOME_NUMBER_VALUE',\n     longitude: 'SOME_NUMBER_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/locations/reverse_geocode\");\n\nreq.query({\n  \"latitude\": \"SOME_NUMBER_VALUE\",\n  \"longitude\": \"SOME_NUMBER_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/locations/reverse_geocode');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'latitude' => 'SOME_NUMBER_VALUE',\n  'longitude' => 'SOME_NUMBER_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/locations/reverse_geocode');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'latitude' => 'SOME_NUMBER_VALUE',\n  'longitude' => 'SOME_NUMBER_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/locations/reverse_geocode\"\n\nquerystring = {\"latitude\":\"SOME_NUMBER_VALUE\",\"longitude\":\"SOME_NUMBER_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "LOCATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/locations/reverse_geocode\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/locations/reverse_geocode\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/locations/reverse_geocode\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/locations/reverse_geocode\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/locations/reverse_geocode\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/locations/reverse_geocode\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/locations/reverse_geocode\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/locations/reverse_geocode',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/locations/reverse_geocode\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/locations/reverse_geocode\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/locations/reverse_geocode\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/locations/reverse_geocode\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/locations/reverse_geocode\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/locations/reverse_geocode');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/locations/reverse_geocode');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/locations/reverse_geocode\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/locations/reverse_geocode\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/locations/reverse_geocode\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/locations/reverse_geocode \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/locations/reverse_geocode \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/locations/reverse_geocode"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/locations/reverse_geocode\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/mobile_updates": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "email_address",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "properties": {
                "bullet_points": {
                  "items": {
                    "default": "[]",
                    "type": "string"
                  },
                  "type": "array"
                },
                "information_url": {
                  "default": "null",
                  "type": "string"
                },
                "message": {
                  "default": "null",
                  "type": "string"
                },
                "title": {
                  "default": "null",
                  "type": "string"
                },
                "update_url": {
                  "default": "null",
                  "type": "string"
                }
              },
              "required": [
                "bullet_points",
                "information_url",
                "message",
                "title",
                "update_url"
              ],
              "type": "object"
            }
          }
        },
        "summary": "Get any available update information.",
        "tags": [
          "mobile update"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/mobile_updates?email_address=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/mobile_updates',\n  qs: { email_address: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/mobile_updates\");\n\nreq.query({\n  \"email_address\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/mobile_updates');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'email_address' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/mobile_updates');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'email_address' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/mobile_updates?email_address=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/mobile_updates\"\n\nquerystring = {\"email_address\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "Mobile Update",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/mobile_updates\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/mobile_updates\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/mobile_updates\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/mobile_updates\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/mobile_updates\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/mobile_updates\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/mobile_updates\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/mobile_updates',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/mobile_updates\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/mobile_updates\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/mobile_updates\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/mobile_updates\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/mobile_updates\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/mobile_updates');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/mobile_updates');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/mobile_updates\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/mobile_updates\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/mobile_updates\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/mobile_updates \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/mobile_updates \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/mobile_updates"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/mobile_updates\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/optins": {
      "delete": {
        "description": "By only sending in their EUA token you would be requesting to opt them out of everything.",
        "parameters": [
          {
            "enum": [
              "email",
              "text",
              "push"
            ],
            "in": "query",
            "name": "notification_medium",
            "required": false,
            "type": "string"
          },
          {
            "default": "all",
            "description": "This would allow granular optouts. Currently ignored.",
            "enum": [
              "all",
              "alerts"
            ],
            "in": "query",
            "name": "notification_channel",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Status 204"
          }
        },
        "summary": "STAGE=UNK Opt someone out of one or more mediums and channels.",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://api.directfreight.com/v1/optins',\n  qs: \n   { notification_medium: 'SOME_STRING_VALUE',\n     notification_channel: 'all' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://api.directfreight.com/v1/optins\");\n\nreq.query({\n  \"notification_medium\": \"SOME_STRING_VALUE\",\n  \"notification_channel\": \"all\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/optins');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setQueryData(array(\n  'notification_medium' => 'SOME_STRING_VALUE',\n  'notification_channel' => 'all'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/optins');\n$request->setRequestMethod('DELETE');\n$request->setQuery(new http\\QueryString(array(\n  'notification_medium' => 'SOME_STRING_VALUE',\n  'notification_channel' => 'all'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/optins\"\n\nquerystring = {\"notification_medium\":\"SOME_STRING_VALUE\",\"notification_channel\":\"all\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url 'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE 'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "To limit your list to just one medium.",
            "enum": [
              "email",
              "text",
              "push"
            ],
            "in": "query",
            "name": "notification_medium",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "properties": {
                      "notification_channel": {
                        "default": "all",
                        "type": "string"
                      },
                      "notification_medium": {
                        "enum": [
                          "email",
                          "text",
                          "push"
                        ],
                        "type": "string"
                      },
                      "status": {
                        "enum": [
                          "optin",
                          "optout",
                          "no response",
                          "no record"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "notification_channel",
                      "notification_medium",
                      "status"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "required": [
                "list"
              ],
              "type": "object"
            }
          }
        },
        "summary": "STAGE=UNK Get the optin status of a user.",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/optins?notification_medium=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/optins',\n  qs: { notification_medium: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/optins\");\n\nreq.query({\n  \"notification_medium\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/optins');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'notification_medium' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/optins');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'notification_medium' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/optins?notification_medium=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/optins\"\n\nquerystring = {\"notification_medium\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "patch": {
        "consumes": [],
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "notification_medium": {
                  "enum": [
                    "email",
                    "text"
                  ],
                  "type": "string"
                },
                "verification_code": {
                  "description": "This code is generated on a POST, and will arrive via the same medium it was designated for.",
                  "type": "string"
                }
              },
              "required": [
                "notification_medium",
                "verification_code"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Status 204"
          }
        },
        "summary": "STAGE=UNK Confirm an optin.",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/optins\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/optins\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins\"\n\n\tpayload := strings.NewReader(\"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/optins\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://api.directfreight.com/v1/optins\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/optins\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"notification_medium\": \"email\",\n  \"verification_code\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://api.directfreight.com/v1/optins\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/optins\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ notification_medium: 'email',\n  verification_code: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://api.directfreight.com/v1/optins',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { notification_medium: 'email',\n     verification_code: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://api.directfreight.com/v1/optins\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"notification_medium\": \"email\",\n  \"verification_code\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"notification_medium\": @\"email\",\n                              @\"verification_code\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/optins\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/optins\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://api.directfreight.com/v1/optins\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/optins\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/optins');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/optins');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/optins\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/optins\"\n\npayload = \"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/optins\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://api.directfreight.com/v1/optins \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http PATCH https://api.directfreight.com/v1/optins \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/optins"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"notification_medium\": \"email\",\n  \"verification_code\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/optins\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "consumes": [],
        "description": "Currently only Push notifications are implemneted. With them a post creates and approves the optin. Later on when text/email is ported post will create the optin with the status of 'no response' meaning they haven't replied with the propper code, or clicked an authorization link.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "notification_channel": {
                  "default": "all",
                  "description": "Currently defaults to all, and is ignored. When we start using it it will be for opting people out or in one list like alerts, or messages, but not others.",
                  "type": "string"
                },
                "notification_medium": {
                  "description": "We currently only accept push",
                  "enum": [
                    "email",
                    "text",
                    "push"
                  ],
                  "type": "string"
                },
                "tokens": {
                  "description": "This is how you can add multiple push notifications at once, or for systems that have multiple tokens required.",
                  "example": "\"tokens\": { \"ios\": \"12345678\", \"android\": \"5432344\" } ",
                  "properties": {
                    "$SERVICE_OR_KEY_NAME": {
                      "description": "Fill in the key in the value, and the service in the name. Look at our examples for clarification.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "$SERVICE_OR_KEY_NAME"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "notification_medium"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Status 201"
          }
        },
        "summary": "STAGE=UNK Submit a request to be opted in.",
        "tags": [
          "optins"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/optins\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/optins\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins\"\n\n\tpayload := strings.NewReader(\"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/optins\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/optins\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/optins\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"notification_channel\": \"<ADD EXAMPLE VALUE>\",\n  \"notification_medium\": \"email\",\n  \"tokens\": {\n    \"$SERVICE_OR_KEY_NAME\": \"<ADD EXAMPLE VALUE>\"\n  }\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/optins\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/optins\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ notification_channel: '<ADD EXAMPLE VALUE>',\n  notification_medium: 'email',\n  tokens: { '$SERVICE_OR_KEY_NAME': '<ADD EXAMPLE VALUE>' } }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/optins',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { notification_channel: '<ADD EXAMPLE VALUE>',\n     notification_medium: 'email',\n     tokens: { '$SERVICE_OR_KEY_NAME': '<ADD EXAMPLE VALUE>' } },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/optins\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"notification_channel\": \"<ADD EXAMPLE VALUE>\",\n  \"notification_medium\": \"email\",\n  \"tokens\": {\n    \"$SERVICE_OR_KEY_NAME\": \"<ADD EXAMPLE VALUE>\"\n  }\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"notification_channel\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"notification_medium\": @\"email\",\n                              @\"tokens\": @{ @\"$SERVICE_OR_KEY_NAME\": @\"<ADD EXAMPLE VALUE>\" } };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/optins\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/optins\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/optins\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/optins\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/optins');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/optins');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/optins\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/optins\"\n\npayload = \"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/optins\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/optins \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}' |  \\\n  http POST https://api.directfreight.com/v1/optins \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/optins"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"notification_channel\": \"<ADD EXAMPLE VALUE>\",\n  \"notification_medium\": \"email\",\n  \"tokens\": [\"$SERVICE_OR_KEY_NAME\": \"<ADD EXAMPLE VALUE>\"]\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/optins\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "Optins",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/optins\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/optins\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/optins\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/optins\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/optins\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/optins\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/optins',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/optins\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/optins\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/optins\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/optins\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/optins\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/optins');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/optins');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/optins\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/optins\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/optins\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/optins \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/optins \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/optins"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/optins\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/postings/{posting_type}": {
      "delete": {
        "description": "Will delete one or more entries. Unless the delete_all parameter is set, only 100 entries can be removed per request.",
        "parameters": [
          {
            "description": "This parameter will be ignored if delete_all is specified, otherwise posting_id or custom_id must be specified. The 100 maximum is split between posting_id & custom_id.",
            "in": "query",
            "name": "posting_id",
            "required": false,
            "type": "integer",
            "x-example": "?posting_id=22&posting_id=23&posting_id=24"
          },
          {
            "description": "You must specify which entry to remove. Will be ignored if delete_all is specified, otherwise it or posting_id must be specified. The 100 maximum is split between posting_id & custom_id.",
            "in": "query",
            "name": "custom_id",
            "required": false,
            "type": "string",
            "x-example": "?custom_id=cats&custom_id=dogs&custom_id=parrots"
          },
          {
            "description": "If included and true, will delete all loads for the logged in user.",
            "in": "query",
            "name": "delete_all",
            "required": false,
            "type": "boolean",
            "x-example": "?delete_all=true"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "success operation"
          }
        },
        "summary": "Remove multiple postings",
        "tags": [
          "postings"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://api.directfreight.com/v1/postings/test_loads',\n  qs: \n   { posting_id: 'SOME_INTEGER_VALUE',\n     custom_id: 'SOME_STRING_VALUE',\n     delete_all: 'SOME_BOOLEAN_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://api.directfreight.com/v1/postings/test_loads\");\n\nreq.query({\n  \"posting_id\": \"SOME_INTEGER_VALUE\",\n  \"custom_id\": \"SOME_STRING_VALUE\",\n  \"delete_all\": \"SOME_BOOLEAN_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"'https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/test_loads');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setQueryData(array(\n  'posting_id' => 'SOME_INTEGER_VALUE',\n  'custom_id' => 'SOME_STRING_VALUE',\n  'delete_all' => 'SOME_BOOLEAN_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/test_loads');\n$request->setRequestMethod('DELETE');\n$request->setQuery(new http\\QueryString(array(\n  'posting_id' => 'SOME_INTEGER_VALUE',\n  'custom_id' => 'SOME_STRING_VALUE',\n  'delete_all' => 'SOME_BOOLEAN_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/test_loads\"\n\nquerystring = {\"posting_id\":\"SOME_INTEGER_VALUE\",\"custom_id\":\"SOME_STRING_VALUE\",\"delete_all\":\"SOME_BOOLEAN_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url 'https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE 'https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "description": "Retrieves a list of the users posted loads or trucks. By default it retrieves all of their entries. If you specifiy multiple ids, only 100 entries can be retrieved per request.",
        "parameters": [
          {
            "description": "To retrieve only a subset of entries.",
            "in": "query",
            "name": "posting_id",
            "required": false,
            "type": "integer",
            "x-example": "?posting_id=32&posting_id=33&posting_id=34"
          },
          {
            "description": "To retrieve only a subset of entries.",
            "in": "query",
            "name": "custom_id",
            "required": false,
            "type": "string",
            "x-example": "?custom_id=cats&custom_id=dogs&custom_id=parrots"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/posting_post_response"
            }
          }
        },
        "summary": "Retrieve multiple postings",
        "tags": [
          "postings"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/postings/test_loads',\n  qs: \n   { posting_id: 'SOME_INTEGER_VALUE',\n     custom_id: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/postings/test_loads\");\n\nreq.query({\n  \"posting_id\": \"SOME_INTEGER_VALUE\",\n  \"custom_id\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/test_loads');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'posting_id' => 'SOME_INTEGER_VALUE',\n  'custom_id' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/test_loads');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'posting_id' => 'SOME_INTEGER_VALUE',\n  'custom_id' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/test_loads\"\n\nquerystring = {\"posting_id\":\"SOME_INTEGER_VALUE\",\"custom_id\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/test_loads?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "parameters": [
        {
          "description": "Valid types are \"loads\", \"trucks\", \"private_loads\", \"private_trucks\", \"test_loads\", and \"test_trucks\"",
          "enum": [
            "test_loads",
            "test_trucks",
            "private_loads",
            "private_trucks",
            "loads",
            "trucks"
          ],
          "in": "path",
          "name": "posting_type",
          "required": true,
          "type": "string",
          "x-example": "test_loads"
        }
      ],
      "patch": {
        "consumes": [],
        "description": "Update one or more entries. Only 100 entries can be updated per request.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postings_patch_object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Status 202",
            "schema": {
              "properties": {
                "list": {
                  "$ref": "#/definitions/postings-post_or_patch_response"
                }
              },
              "required": [
                "list"
              ],
              "type": "object"
            }
          }
        },
        "summary": "Update multiple postings",
        "tags": [
          "postings"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/test_loads\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"comment\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"custom_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"full_load\\\":false,\\\"height\\\":0,\\\"length\\\":0,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"other_trailer_types\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"pay_rate\\\":0,\\\"phone_extension\\\":0,\\\"phone_number\\\":0,\\\"posting_id\\\":0,\\\"receive_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"ship_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"weight\\\":0,\\\"width\\\":0}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/postings/test_loads\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"comment\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"custom_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"full_load\\\":false,\\\"height\\\":0,\\\"length\\\":0,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"other_trailer_types\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"pay_rate\\\":0,\\\"phone_extension\\\":0,\\\"phone_number\\\":0,\\\"posting_id\\\":0,\\\"receive_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"ship_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"weight\\\":0,\\\"width\\\":0}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/test_loads\"\n\n\tpayload := strings.NewReader(\"{\\\"comment\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"custom_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"full_load\\\":false,\\\"height\\\":0,\\\"length\\\":0,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"other_trailer_types\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"pay_rate\\\":0,\\\"phone_extension\\\":0,\\\"phone_number\\\":0,\\\"posting_id\\\":0,\\\"receive_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"ship_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"weight\\\":0,\\\"width\\\":0}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"comment\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"custom_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"full_load\\\":false,\\\"height\\\":0,\\\"length\\\":0,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"other_trailer_types\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"pay_rate\\\":0,\\\"phone_extension\\\":0,\\\"phone_number\\\":0,\\\"posting_id\\\":0,\\\"receive_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"ship_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"weight\\\":0,\\\"width\\\":0}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/test_loads\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://api.directfreight.com/v1/postings/test_loads\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"comment\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"custom_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"full_load\\\":false,\\\"height\\\":0,\\\"length\\\":0,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"other_trailer_types\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"pay_rate\\\":0,\\\"phone_extension\\\":0,\\\"phone_number\\\":0,\\\"posting_id\\\":0,\\\"receive_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"ship_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"weight\\\":0,\\\"width\\\":0}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/test_loads\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"comment\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"custom_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"full_load\\\":false,\\\"height\\\":0,\\\"length\\\":0,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"other_trailer_types\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"pay_rate\\\":0,\\\"phone_extension\\\":0,\\\"phone_number\\\":0,\\\"posting_id\\\":0,\\\"receive_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"ship_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"weight\\\":0,\\\"width\\\":0}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"comment\": \"<ADD EXAMPLE VALUE>\",\n  \"custom_id\": \"<ADD EXAMPLE VALUE>\",\n  \"destination_city\": \"<ADD EXAMPLE VALUE>\",\n  \"destination_state\": \"<ADD EXAMPLE VALUE>\",\n  \"full_load\": false,\n  \"height\": 0,\n  \"length\": 0,\n  \"origin_city\": \"<ADD EXAMPLE VALUE>\",\n  \"origin_state\": \"<ADD EXAMPLE VALUE>\",\n  \"other_trailer_types\": \"<ADD EXAMPLE VALUE>\",\n  \"pay_rate\": 0,\n  \"phone_extension\": 0,\n  \"phone_number\": 0,\n  \"posting_id\": 0,\n  \"receive_date\": \"<ADD EXAMPLE VALUE>\",\n  \"ship_date\": \"<ADD EXAMPLE VALUE>\",\n  \"weight\": 0,\n  \"width\": 0\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://api.directfreight.com/v1/postings/test_loads\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/test_loads\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ comment: '<ADD EXAMPLE VALUE>',\n  custom_id: '<ADD EXAMPLE VALUE>',\n  destination_city: '<ADD EXAMPLE VALUE>',\n  destination_state: '<ADD EXAMPLE VALUE>',\n  full_load: false,\n  height: 0,\n  length: 0,\n  origin_city: '<ADD EXAMPLE VALUE>',\n  origin_state: '<ADD EXAMPLE VALUE>',\n  other_trailer_types: '<ADD EXAMPLE VALUE>',\n  pay_rate: 0,\n  phone_extension: 0,\n  phone_number: 0,\n  posting_id: 0,\n  receive_date: '<ADD EXAMPLE VALUE>',\n  ship_date: '<ADD EXAMPLE VALUE>',\n  weight: 0,\n  width: 0 }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://api.directfreight.com/v1/postings/test_loads',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { comment: '<ADD EXAMPLE VALUE>',\n     custom_id: '<ADD EXAMPLE VALUE>',\n     destination_city: '<ADD EXAMPLE VALUE>',\n     destination_state: '<ADD EXAMPLE VALUE>',\n     full_load: false,\n     height: 0,\n     length: 0,\n     origin_city: '<ADD EXAMPLE VALUE>',\n     origin_state: '<ADD EXAMPLE VALUE>',\n     other_trailer_types: '<ADD EXAMPLE VALUE>',\n     pay_rate: 0,\n     phone_extension: 0,\n     phone_number: 0,\n     posting_id: 0,\n     receive_date: '<ADD EXAMPLE VALUE>',\n     ship_date: '<ADD EXAMPLE VALUE>',\n     weight: 0,\n     width: 0 },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://api.directfreight.com/v1/postings/test_loads\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"comment\": \"<ADD EXAMPLE VALUE>\",\n  \"custom_id\": \"<ADD EXAMPLE VALUE>\",\n  \"destination_city\": \"<ADD EXAMPLE VALUE>\",\n  \"destination_state\": \"<ADD EXAMPLE VALUE>\",\n  \"full_load\": false,\n  \"height\": 0,\n  \"length\": 0,\n  \"origin_city\": \"<ADD EXAMPLE VALUE>\",\n  \"origin_state\": \"<ADD EXAMPLE VALUE>\",\n  \"other_trailer_types\": \"<ADD EXAMPLE VALUE>\",\n  \"pay_rate\": 0,\n  \"phone_extension\": 0,\n  \"phone_number\": 0,\n  \"posting_id\": 0,\n  \"receive_date\": \"<ADD EXAMPLE VALUE>\",\n  \"ship_date\": \"<ADD EXAMPLE VALUE>\",\n  \"weight\": 0,\n  \"width\": 0\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"comment\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"custom_id\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"destination_city\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"destination_state\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"full_load\": @NO,\n                              @\"height\": @0,\n                              @\"length\": @0,\n                              @\"origin_city\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"origin_state\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"other_trailer_types\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"pay_rate\": @0,\n                              @\"phone_extension\": @0,\n                              @\"phone_number\": @0,\n                              @\"posting_id\": @0,\n                              @\"receive_date\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"ship_date\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"weight\": @0,\n                              @\"width\": @0 };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/test_loads\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/test_loads\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"comment\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"custom_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"full_load\\\":false,\\\"height\\\":0,\\\"length\\\":0,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"other_trailer_types\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"pay_rate\\\":0,\\\"phone_extension\\\":0,\\\"phone_number\\\":0,\\\"posting_id\\\":0,\\\"receive_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"ship_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"weight\\\":0,\\\"width\\\":0}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://api.directfreight.com/v1/postings/test_loads\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"comment\":\"<ADD EXAMPLE VALUE>\",\"custom_id\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"height\":0,\"length\":0,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\",\"other_trailer_types\":\"<ADD EXAMPLE VALUE>\",\"pay_rate\":0,\"phone_extension\":0,\"phone_number\":0,\"posting_id\":0,\"receive_date\":\"<ADD EXAMPLE VALUE>\",\"ship_date\":\"<ADD EXAMPLE VALUE>\",\"weight\":0,\"width\":0}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/test_loads\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"comment\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"custom_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"full_load\\\":false,\\\"height\\\":0,\\\"length\\\":0,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"other_trailer_types\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"pay_rate\\\":0,\\\"phone_extension\\\":0,\\\"phone_number\\\":0,\\\"posting_id\\\":0,\\\"receive_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"ship_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"weight\\\":0,\\\"width\\\":0}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/test_loads');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"comment\":\"<ADD EXAMPLE VALUE>\",\"custom_id\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"height\":0,\"length\":0,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\",\"other_trailer_types\":\"<ADD EXAMPLE VALUE>\",\"pay_rate\":0,\"phone_extension\":0,\"phone_number\":0,\"posting_id\":0,\"receive_date\":\"<ADD EXAMPLE VALUE>\",\"ship_date\":\"<ADD EXAMPLE VALUE>\",\"weight\":0,\"width\":0}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"comment\":\"<ADD EXAMPLE VALUE>\",\"custom_id\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"height\":0,\"length\":0,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\",\"other_trailer_types\":\"<ADD EXAMPLE VALUE>\",\"pay_rate\":0,\"phone_extension\":0,\"phone_number\":0,\"posting_id\":0,\"receive_date\":\"<ADD EXAMPLE VALUE>\",\"ship_date\":\"<ADD EXAMPLE VALUE>\",\"weight\":0,\"width\":0}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/test_loads');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"comment\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"custom_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"full_load\\\":false,\\\"height\\\":0,\\\"length\\\":0,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"other_trailer_types\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"pay_rate\\\":0,\\\"phone_extension\\\":0,\\\"phone_number\\\":0,\\\"posting_id\\\":0,\\\"receive_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"ship_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"weight\\\":0,\\\"width\\\":0}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/postings/test_loads\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/test_loads\"\n\npayload = \"{\\\"comment\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"custom_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"full_load\\\":false,\\\"height\\\":0,\\\"length\\\":0,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"other_trailer_types\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"pay_rate\\\":0,\\\"phone_extension\\\":0,\\\"phone_number\\\":0,\\\"posting_id\\\":0,\\\"receive_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"ship_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"weight\\\":0,\\\"width\\\":0}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/postings/test_loads\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"comment\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"custom_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"full_load\\\":false,\\\"height\\\":0,\\\"length\\\":0,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"other_trailer_types\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"pay_rate\\\":0,\\\"phone_extension\\\":0,\\\"phone_number\\\":0,\\\"posting_id\\\":0,\\\"receive_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"ship_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"weight\\\":0,\\\"width\\\":0}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://api.directfreight.com/v1/postings/test_loads \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"comment\":\"<ADD EXAMPLE VALUE>\",\"custom_id\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"height\":0,\"length\":0,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\",\"other_trailer_types\":\"<ADD EXAMPLE VALUE>\",\"pay_rate\":0,\"phone_extension\":0,\"phone_number\":0,\"posting_id\":0,\"receive_date\":\"<ADD EXAMPLE VALUE>\",\"ship_date\":\"<ADD EXAMPLE VALUE>\",\"weight\":0,\"width\":0}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"comment\":\"<ADD EXAMPLE VALUE>\",\"custom_id\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"height\":0,\"length\":0,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\",\"other_trailer_types\":\"<ADD EXAMPLE VALUE>\",\"pay_rate\":0,\"phone_extension\":0,\"phone_number\":0,\"posting_id\":0,\"receive_date\":\"<ADD EXAMPLE VALUE>\",\"ship_date\":\"<ADD EXAMPLE VALUE>\",\"weight\":0,\"width\":0}' |  \\\n  http PATCH https://api.directfreight.com/v1/postings/test_loads \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"comment\":\"<ADD EXAMPLE VALUE>\",\"custom_id\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"full_load\":false,\"height\":0,\"length\":0,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\",\"other_trailer_types\":\"<ADD EXAMPLE VALUE>\",\"pay_rate\":0,\"phone_extension\":0,\"phone_number\":0,\"posting_id\":0,\"receive_date\":\"<ADD EXAMPLE VALUE>\",\"ship_date\":\"<ADD EXAMPLE VALUE>\",\"weight\":0,\"width\":0}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/postings/test_loads"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"comment\": \"<ADD EXAMPLE VALUE>\",\n  \"custom_id\": \"<ADD EXAMPLE VALUE>\",\n  \"destination_city\": \"<ADD EXAMPLE VALUE>\",\n  \"destination_state\": \"<ADD EXAMPLE VALUE>\",\n  \"full_load\": false,\n  \"height\": 0,\n  \"length\": 0,\n  \"origin_city\": \"<ADD EXAMPLE VALUE>\",\n  \"origin_state\": \"<ADD EXAMPLE VALUE>\",\n  \"other_trailer_types\": \"<ADD EXAMPLE VALUE>\",\n  \"pay_rate\": 0,\n  \"phone_extension\": 0,\n  \"phone_number\": 0,\n  \"posting_id\": 0,\n  \"receive_date\": \"<ADD EXAMPLE VALUE>\",\n  \"ship_date\": \"<ADD EXAMPLE VALUE>\",\n  \"weight\": 0,\n  \"width\": 0\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/test_loads\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "consumes": [],
        "description": "This endpoint method will post one or more entries. Valid posting_type are: loads, trucks, test_loads, test_trucks, private_loads, and private_trucks.\n\nOnly 100 entries can be created per request.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "$ref": "#/definitions/postings_entry_object"
                  },
                  "maxItems": 100,
                  "type": "array"
                }
              },
              "required": [
                "list"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Loads accepted. Check the response for an ordered list of response.",
            "schema": {
              "$ref": "#/definitions/postings-post_or_patch_response"
            }
          }
        },
        "summary": "Create multiple postings",
        "tags": [
          "postings"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/test_loads\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/postings/test_loads\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/test_loads\"\n\n\tpayload := strings.NewReader(\"{}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/test_loads\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/postings/test_loads\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/test_loads\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/postings/test_loads\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/test_loads\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({}));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/postings/test_loads',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: {},\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/postings/test_loads\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{  };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/test_loads\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/test_loads\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/postings/test_loads\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/test_loads\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/test_loads');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/test_loads');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/postings/test_loads\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/test_loads\"\n\npayload = \"{}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/postings/test_loads\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/postings/test_loads \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{}' |  \\\n  http POST https://api.directfreight.com/v1/postings/test_loads \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/postings/test_loads"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = []\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/test_loads\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "POSTINGS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/test_loads\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/test_loads\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/test_loads\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/postings/test_loads\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/test_loads\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/postings/test_loads\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/test_loads\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/postings/test_loads',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/postings/test_loads\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/test_loads\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/test_loads\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/postings/test_loads\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/test_loads\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/test_loads');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/test_loads');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/postings/test_loads\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/test_loads\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/postings/test_loads\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/postings/test_loads \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/postings/test_loads \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/postings/test_loads"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/test_loads\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/postings/{posting_type}/{action}": {
      "parameters": [
        {
          "description": "Valid types are \"loads\", \"trucks\", \"private_loads\", \"private_trucks\", \"test_loads\", and \"test_trucks\"",
          "enum": [
            "loads",
            "trucks",
            "private_loads",
            "private_trucks",
            "test_loads",
            "test_trucks"
          ],
          "in": "path",
          "name": "posting_type",
          "required": true,
          "type": "string"
        },
        {
          "description": "Specified in the url. Valid types are \"copy\", and \"move\"",
          "enum": [
            "copy",
            "move"
          ],
          "in": "path",
          "name": "action",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [],
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/post_posting_type_action_body"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/object_created"
          }
        },
        "summary": "STAGE=UNK Copy or Move an posting.",
        "tags": [
          "postings"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/loads/copy\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"source_id\\\":{},\\\"source_posting\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/postings/loads/copy\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"source_id\\\":{},\\\"source_posting\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/loads/copy\"\n\n\tpayload := strings.NewReader(\"{\\\"source_id\\\":{},\\\"source_posting\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"source_id\\\":{},\\\"source_posting\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/loads/copy\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/postings/loads/copy\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"source_id\\\":{},\\\"source_posting\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/loads/copy\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"source_id\\\":{},\\\"source_posting\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"source_id\": {},\n  \"source_posting\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/postings/loads/copy\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/loads/copy\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ source_id: {}, source_posting: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/postings/loads/copy',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: { source_id: {}, source_posting: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/postings/loads/copy\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"source_id\": {},\n  \"source_posting\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"source_id\": @{  },\n                              @\"source_posting\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/loads/copy\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/loads/copy\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"source_id\\\":{},\\\"source_posting\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/postings/loads/copy\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"source_id\":{},\"source_posting\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/loads/copy\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"source_id\\\":{},\\\"source_posting\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/loads/copy');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"source_id\":{},\"source_posting\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"source_id\":{},\"source_posting\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/loads/copy');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"source_id\\\":{},\\\"source_posting\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/postings/loads/copy\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/loads/copy\"\n\npayload = \"{\\\"source_id\\\":{},\\\"source_posting\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/postings/loads/copy\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"source_id\\\":{},\\\"source_posting\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/postings/loads/copy \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"source_id\":{},\"source_posting\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"source_id\":{},\"source_posting\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http POST https://api.directfreight.com/v1/postings/loads/copy \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"source_id\":{},\"source_posting\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/postings/loads/copy"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"source_id\": [],\n  \"source_posting\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/loads/copy\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "POSTINGS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/loads/copy\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/loads/copy\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/loads/copy\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/postings/loads/copy\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/loads/copy\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/postings/loads/copy\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/loads/copy\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/postings/loads/copy',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/postings/loads/copy\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/loads/copy\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/loads/copy\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/postings/loads/copy\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/loads/copy\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/loads/copy');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/loads/copy');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/postings/loads/copy\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/loads/copy\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/postings/loads/copy\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/postings/loads/copy \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/postings/loads/copy \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/postings/loads/copy"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/loads/copy\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/postings/custom_categories/{category_type}": {
      "delete": {
        "parameters": [
          {
            "description": "To just delete information about some postings.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "category_id",
            "required": false,
            "type": "array"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "200 OK"
          }
        },
        "summary": "STAGE=UNK Delete some or all custom columns, or custom_column data.",
        "tags": [
          "postings"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://api.directfreight.com/v1/postings/custom_categories/names',\n  qs: { category_id: 'SOME_ARRAY_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://api.directfreight.com/v1/postings/custom_categories/names\");\n\nreq.query({\n  \"category_id\": \"SOME_ARRAY_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"'https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/custom_categories/names');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setQueryData(array(\n  'category_id' => 'SOME_ARRAY_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/custom_categories/names');\n$request->setRequestMethod('DELETE');\n$request->setQuery(new http\\QueryString(array(\n  'category_id' => 'SOME_ARRAY_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/custom_categories/names\"\n\nquerystring = {\"category_id\":\"SOME_ARRAY_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url 'https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE 'https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "To just return information about some postings.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "category_id",
            "required": false,
            "type": "array"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/get_custom_categories_response"
            }
          }
        },
        "summary": "STAGE=UNK Get a list of custom columns, or custom_column data.",
        "tags": [
          "postings"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/postings/custom_categories/names',\n  qs: { category_id: 'SOME_ARRAY_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/postings/custom_categories/names\");\n\nreq.query({\n  \"category_id\": \"SOME_ARRAY_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/custom_categories/names');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'category_id' => 'SOME_ARRAY_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/custom_categories/names');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'category_id' => 'SOME_ARRAY_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/custom_categories/names\"\n\nquerystring = {\"category_id\":\"SOME_ARRAY_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/custom_categories/names?category_id=SOME_ARRAY_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "parameters": [
        {
          "description": "Valid types are \"names\", and \"data\".",
          "enum": [
            "names",
            "data"
          ],
          "in": "path",
          "name": "category_type",
          "required": true,
          "type": "string",
          "x-example": "names"
        }
      ],
      "patch": {
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          }
        },
        "summary": "STAGE=UNK Update a category name, or value.",
        "tags": [
          "postings"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/custom_categories/names\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/postings/custom_categories/names\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/custom_categories/names\"\n\n\treq, _ := http.NewRequest(\"PATCH\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/custom_categories/names\")\n  .patch(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://api.directfreight.com/v1/postings/custom_categories/names\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/custom_categories/names\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://api.directfreight.com/v1/postings/custom_categories/names\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/custom_categories/names\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://api.directfreight.com/v1/postings/custom_categories/names',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://api.directfreight.com/v1/postings/custom_categories/names\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/custom_categories/names\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/custom_categories/names\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://api.directfreight.com/v1/postings/custom_categories/names\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/custom_categories/names\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/custom_categories/names');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/custom_categories/names');\n$request->setRequestMethod('PATCH');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/postings/custom_categories/names\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/custom_categories/names\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/postings/custom_categories/names\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://api.directfreight.com/v1/postings/custom_categories/names \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http PATCH https://api.directfreight.com/v1/postings/custom_categories/names \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/postings/custom_categories/names"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/custom_categories/names\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/object_created"
          }
        },
        "summary": "STAGE=UNK Create new category names, or add new data.",
        "tags": [
          "postings"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/custom_categories/names\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/postings/custom_categories/names\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/custom_categories/names\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/custom_categories/names\")\n  .post(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/postings/custom_categories/names\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/custom_categories/names\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/postings/custom_categories/names\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/custom_categories/names\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/postings/custom_categories/names',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/postings/custom_categories/names\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/custom_categories/names\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/custom_categories/names\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/postings/custom_categories/names\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/custom_categories/names\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/custom_categories/names');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/custom_categories/names');\n$request->setRequestMethod('POST');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/postings/custom_categories/names\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/custom_categories/names\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/postings/custom_categories/names\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/postings/custom_categories/names \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http POST https://api.directfreight.com/v1/postings/custom_categories/names \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/postings/custom_categories/names"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/custom_categories/names\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "POSTINGS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/custom_categories/names\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/custom_categories/names\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/custom_categories/names\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/postings/custom_categories/names\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/custom_categories/names\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/postings/custom_categories/names\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/custom_categories/names\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/postings/custom_categories/names',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/postings/custom_categories/names\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/custom_categories/names\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/custom_categories/names\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/postings/custom_categories/names\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/custom_categories/names\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/custom_categories/names');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/custom_categories/names');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/postings/custom_categories/names\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/custom_categories/names\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/postings/custom_categories/names\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/postings/custom_categories/names \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/postings/custom_categories/names \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/postings/custom_categories/names"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/custom_categories/names\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/profiles": {
      "get": {
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/profile_object"
            }
          }
        },
        "summary": "STAGE=UNK Request the logged in user's profile.",
        "tags": [
          "profiles"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/profiles\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/profiles\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/profiles\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/profiles\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/profiles\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/profiles\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/profiles',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/profiles\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/profiles\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/profiles\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"https://api.directfreight.com/v1/profiles\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/profiles\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/profiles');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/profiles');\n$request->setRequestMethod('GET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/profiles\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/profiles\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/profiles\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url https://api.directfreight.com/v1/profiles \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET https://api.directfreight.com/v1/profiles \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/profiles"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/profiles\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "patch": {
        "consumes": [],
        "description": "Please send in at least one field to be updated.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/profile_object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/profile_object"
            }
          }
        },
        "summary": "STAGE=UNK Update profile information.",
        "tags": [
          "profiles"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/profiles\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/profiles\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles\"\n\n\tpayload := strings.NewReader(\"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/profiles\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://api.directfreight.com/v1/profiles\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/profiles\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"address\": \"<ADD EXAMPLE VALUE>\",\n  \"city\": \"<ADD EXAMPLE VALUE>\",\n  \"company\": \"<ADD EXAMPLE VALUE>\",\n  \"contact_extension\": 0,\n  \"contact_name\": \"<ADD EXAMPLE VALUE>\",\n  \"contact_number\": 0,\n  \"dispatch_extension\": 0,\n  \"dispatch_number\": 0,\n  \"dot_number\": \"<ADD EXAMPLE VALUE>\",\n  \"fax_number\": 0,\n  \"mc_number\": \"<ADD EXAMPLE VALUE>\",\n  \"mobile_carrier\": \"Other/Unknown\",\n  \"mobile_number\": 0,\n  \"state\": \"<ADD EXAMPLE VALUE>\",\n  \"web_page\": \"<ADD EXAMPLE VALUE>\",\n  \"zip\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://api.directfreight.com/v1/profiles\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ address: '<ADD EXAMPLE VALUE>',\n  city: '<ADD EXAMPLE VALUE>',\n  company: '<ADD EXAMPLE VALUE>',\n  contact_extension: 0,\n  contact_name: '<ADD EXAMPLE VALUE>',\n  contact_number: 0,\n  dispatch_extension: 0,\n  dispatch_number: 0,\n  dot_number: '<ADD EXAMPLE VALUE>',\n  fax_number: 0,\n  mc_number: '<ADD EXAMPLE VALUE>',\n  mobile_carrier: 'Other/Unknown',\n  mobile_number: 0,\n  state: '<ADD EXAMPLE VALUE>',\n  web_page: '<ADD EXAMPLE VALUE>',\n  zip: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://api.directfreight.com/v1/profiles',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { address: '<ADD EXAMPLE VALUE>',\n     city: '<ADD EXAMPLE VALUE>',\n     company: '<ADD EXAMPLE VALUE>',\n     contact_extension: 0,\n     contact_name: '<ADD EXAMPLE VALUE>',\n     contact_number: 0,\n     dispatch_extension: 0,\n     dispatch_number: 0,\n     dot_number: '<ADD EXAMPLE VALUE>',\n     fax_number: 0,\n     mc_number: '<ADD EXAMPLE VALUE>',\n     mobile_carrier: 'Other/Unknown',\n     mobile_number: 0,\n     state: '<ADD EXAMPLE VALUE>',\n     web_page: '<ADD EXAMPLE VALUE>',\n     zip: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://api.directfreight.com/v1/profiles\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"address\": \"<ADD EXAMPLE VALUE>\",\n  \"city\": \"<ADD EXAMPLE VALUE>\",\n  \"company\": \"<ADD EXAMPLE VALUE>\",\n  \"contact_extension\": 0,\n  \"contact_name\": \"<ADD EXAMPLE VALUE>\",\n  \"contact_number\": 0,\n  \"dispatch_extension\": 0,\n  \"dispatch_number\": 0,\n  \"dot_number\": \"<ADD EXAMPLE VALUE>\",\n  \"fax_number\": 0,\n  \"mc_number\": \"<ADD EXAMPLE VALUE>\",\n  \"mobile_carrier\": \"Other/Unknown\",\n  \"mobile_number\": 0,\n  \"state\": \"<ADD EXAMPLE VALUE>\",\n  \"web_page\": \"<ADD EXAMPLE VALUE>\",\n  \"zip\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"address\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"city\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"company\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"contact_extension\": @0,\n                              @\"contact_name\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"contact_number\": @0,\n                              @\"dispatch_extension\": @0,\n                              @\"dispatch_number\": @0,\n                              @\"dot_number\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"fax_number\": @0,\n                              @\"mc_number\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"mobile_carrier\": @\"Other/Unknown\",\n                              @\"mobile_number\": @0,\n                              @\"state\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"web_page\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"zip\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/profiles\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/profiles\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://api.directfreight.com/v1/profiles\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/profiles\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/profiles');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/profiles');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/profiles\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/profiles\"\n\npayload = \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/profiles\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://api.directfreight.com/v1/profiles \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http PATCH https://api.directfreight.com/v1/profiles \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/profiles"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"address\": \"<ADD EXAMPLE VALUE>\",\n  \"city\": \"<ADD EXAMPLE VALUE>\",\n  \"company\": \"<ADD EXAMPLE VALUE>\",\n  \"contact_extension\": 0,\n  \"contact_name\": \"<ADD EXAMPLE VALUE>\",\n  \"contact_number\": 0,\n  \"dispatch_extension\": 0,\n  \"dispatch_number\": 0,\n  \"dot_number\": \"<ADD EXAMPLE VALUE>\",\n  \"fax_number\": 0,\n  \"mc_number\": \"<ADD EXAMPLE VALUE>\",\n  \"mobile_carrier\": \"Other/Unknown\",\n  \"mobile_number\": 0,\n  \"state\": \"<ADD EXAMPLE VALUE>\",\n  \"web_page\": \"<ADD EXAMPLE VALUE>\",\n  \"zip\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/profiles\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "consumes": [],
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/profile_object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Object created",
            "headers": {
              "Location": {
                "description": "This will have a fully qualified API url you can call to get details of your profile.",
                "type": "string",
                "x-example": "https://api.directfreight.com/v1/profiles/"
              }
            }
          }
        },
        "summary": "STAGE=UNK Create a new profile.",
        "tags": [
          "profiles"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/profiles\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/profiles\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles\"\n\n\tpayload := strings.NewReader(\"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/profiles\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/profiles\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/profiles\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"address\": \"<ADD EXAMPLE VALUE>\",\n  \"city\": \"<ADD EXAMPLE VALUE>\",\n  \"company\": \"<ADD EXAMPLE VALUE>\",\n  \"contact_extension\": 0,\n  \"contact_name\": \"<ADD EXAMPLE VALUE>\",\n  \"contact_number\": 0,\n  \"dispatch_extension\": 0,\n  \"dispatch_number\": 0,\n  \"dot_number\": \"<ADD EXAMPLE VALUE>\",\n  \"fax_number\": 0,\n  \"mc_number\": \"<ADD EXAMPLE VALUE>\",\n  \"mobile_carrier\": \"Other/Unknown\",\n  \"mobile_number\": 0,\n  \"state\": \"<ADD EXAMPLE VALUE>\",\n  \"web_page\": \"<ADD EXAMPLE VALUE>\",\n  \"zip\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/profiles\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ address: '<ADD EXAMPLE VALUE>',\n  city: '<ADD EXAMPLE VALUE>',\n  company: '<ADD EXAMPLE VALUE>',\n  contact_extension: 0,\n  contact_name: '<ADD EXAMPLE VALUE>',\n  contact_number: 0,\n  dispatch_extension: 0,\n  dispatch_number: 0,\n  dot_number: '<ADD EXAMPLE VALUE>',\n  fax_number: 0,\n  mc_number: '<ADD EXAMPLE VALUE>',\n  mobile_carrier: 'Other/Unknown',\n  mobile_number: 0,\n  state: '<ADD EXAMPLE VALUE>',\n  web_page: '<ADD EXAMPLE VALUE>',\n  zip: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/profiles',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { address: '<ADD EXAMPLE VALUE>',\n     city: '<ADD EXAMPLE VALUE>',\n     company: '<ADD EXAMPLE VALUE>',\n     contact_extension: 0,\n     contact_name: '<ADD EXAMPLE VALUE>',\n     contact_number: 0,\n     dispatch_extension: 0,\n     dispatch_number: 0,\n     dot_number: '<ADD EXAMPLE VALUE>',\n     fax_number: 0,\n     mc_number: '<ADD EXAMPLE VALUE>',\n     mobile_carrier: 'Other/Unknown',\n     mobile_number: 0,\n     state: '<ADD EXAMPLE VALUE>',\n     web_page: '<ADD EXAMPLE VALUE>',\n     zip: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/profiles\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"address\": \"<ADD EXAMPLE VALUE>\",\n  \"city\": \"<ADD EXAMPLE VALUE>\",\n  \"company\": \"<ADD EXAMPLE VALUE>\",\n  \"contact_extension\": 0,\n  \"contact_name\": \"<ADD EXAMPLE VALUE>\",\n  \"contact_number\": 0,\n  \"dispatch_extension\": 0,\n  \"dispatch_number\": 0,\n  \"dot_number\": \"<ADD EXAMPLE VALUE>\",\n  \"fax_number\": 0,\n  \"mc_number\": \"<ADD EXAMPLE VALUE>\",\n  \"mobile_carrier\": \"Other/Unknown\",\n  \"mobile_number\": 0,\n  \"state\": \"<ADD EXAMPLE VALUE>\",\n  \"web_page\": \"<ADD EXAMPLE VALUE>\",\n  \"zip\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"address\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"city\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"company\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"contact_extension\": @0,\n                              @\"contact_name\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"contact_number\": @0,\n                              @\"dispatch_extension\": @0,\n                              @\"dispatch_number\": @0,\n                              @\"dot_number\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"fax_number\": @0,\n                              @\"mc_number\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"mobile_carrier\": @\"Other/Unknown\",\n                              @\"mobile_number\": @0,\n                              @\"state\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"web_page\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"zip\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/profiles\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/profiles\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/profiles\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/profiles\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/profiles');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/profiles');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/profiles\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/profiles\"\n\npayload = \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/profiles\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/profiles \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http POST https://api.directfreight.com/v1/profiles \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/profiles"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"address\": \"<ADD EXAMPLE VALUE>\",\n  \"city\": \"<ADD EXAMPLE VALUE>\",\n  \"company\": \"<ADD EXAMPLE VALUE>\",\n  \"contact_extension\": 0,\n  \"contact_name\": \"<ADD EXAMPLE VALUE>\",\n  \"contact_number\": 0,\n  \"dispatch_extension\": 0,\n  \"dispatch_number\": 0,\n  \"dot_number\": \"<ADD EXAMPLE VALUE>\",\n  \"fax_number\": 0,\n  \"mc_number\": \"<ADD EXAMPLE VALUE>\",\n  \"mobile_carrier\": \"Other/Unknown\",\n  \"mobile_number\": 0,\n  \"state\": \"<ADD EXAMPLE VALUE>\",\n  \"web_page\": \"<ADD EXAMPLE VALUE>\",\n  \"zip\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/profiles\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "PROFILES",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/profiles\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/profiles\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/profiles\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/profiles\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/profiles\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/profiles',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/profiles\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/profiles\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/profiles\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/profiles\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/profiles\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/profiles');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/profiles');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/profiles\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/profiles\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/profiles\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/profiles \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/profiles \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/profiles"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/profiles\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/profiles/documents": {
      "delete": {
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "success operation"
          }
        },
        "summary": "STAGE=UNK Delete the document.",
        "tags": [
          "profiles"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/profiles/documents\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/profiles/documents\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/documents\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/profiles/documents\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://api.directfreight.com/v1/profiles/documents\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/profiles/documents\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.directfreight.com/v1/profiles/documents\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles/documents\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://api.directfreight.com/v1/profiles/documents',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://api.directfreight.com/v1/profiles/documents\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/profiles/documents\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/profiles/documents\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"https://api.directfreight.com/v1/profiles/documents\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/profiles/documents\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/profiles/documents');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/profiles/documents');\n$request->setRequestMethod('DELETE');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/profiles/documents\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/profiles/documents\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/profiles/documents\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url https://api.directfreight.com/v1/profiles/documents \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE https://api.directfreight.com/v1/profiles/documents \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/profiles/documents"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/profiles/documents\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "description": "Retrieve documents",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        },
        "summary": "STAGE=UNK Retrieve documents",
        "tags": [
          "profiles"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/profiles/documents\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/profiles/documents\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/documents\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/profiles/documents\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/profiles/documents\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/profiles/documents\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/profiles/documents\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles/documents\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/profiles/documents',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/profiles/documents\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/profiles/documents\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/profiles/documents\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"https://api.directfreight.com/v1/profiles/documents\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/profiles/documents\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/profiles/documents');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/profiles/documents');\n$request->setRequestMethod('GET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/profiles/documents\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/profiles/documents\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/profiles/documents\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url https://api.directfreight.com/v1/profiles/documents \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET https://api.directfreight.com/v1/profiles/documents \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/profiles/documents"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/profiles/documents\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "patch": {
        "consumes": [],
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rename_document"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          }
        },
        "summary": "STAGE=UNK Rename a document.",
        "tags": [
          "profiles"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/profiles/documents\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/profiles/documents\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/documents\"\n\n\tpayload := strings.NewReader(\"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/profiles/documents\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://api.directfreight.com/v1/profiles/documents\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/profiles/documents\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"current_name\": \"<ADD EXAMPLE VALUE>\",\n  \"new_name\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://api.directfreight.com/v1/profiles/documents\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles/documents\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ current_name: '<ADD EXAMPLE VALUE>',\n  new_name: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://api.directfreight.com/v1/profiles/documents',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { current_name: '<ADD EXAMPLE VALUE>',\n     new_name: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://api.directfreight.com/v1/profiles/documents\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"current_name\": \"<ADD EXAMPLE VALUE>\",\n  \"new_name\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"current_name\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"new_name\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/profiles/documents\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/profiles/documents\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://api.directfreight.com/v1/profiles/documents\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/profiles/documents\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/profiles/documents');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/profiles/documents');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/profiles/documents\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/profiles/documents\"\n\npayload = \"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/profiles/documents\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://api.directfreight.com/v1/profiles/documents \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http PATCH https://api.directfreight.com/v1/profiles/documents \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/profiles/documents"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"current_name\": \"<ADD EXAMPLE VALUE>\",\n  \"new_name\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/profiles/documents\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "consumes": [],
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/upload_document"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/object_created"
          }
        },
        "summary": "STAGE=UNK Upload a new document.",
        "tags": [
          "profiles"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/profiles/documents\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"The\\\":{}}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/profiles/documents\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"The\\\":{}}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/documents\"\n\n\tpayload := strings.NewReader(\"{\\\"The\\\":{}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"The\\\":{}}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/profiles/documents\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/profiles/documents\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"The\\\":{}}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/profiles/documents\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"The\\\":{}}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"The\": {}\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/profiles/documents\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles/documents\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ The: {} }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/profiles/documents',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: { The: {} },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/profiles/documents\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"The\": {}\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"The\": @{  } };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/profiles/documents\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/profiles/documents\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"The\\\":{}}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/profiles/documents\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"The\":{}}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/profiles/documents\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"The\\\":{}}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/profiles/documents');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"The\":{}}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"The\":{}}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/profiles/documents');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"The\\\":{}}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/profiles/documents\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/profiles/documents\"\n\npayload = \"{\\\"The\\\":{}}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/profiles/documents\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"The\\\":{}}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/profiles/documents \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"The\":{}}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"The\":{}}' |  \\\n  http POST https://api.directfreight.com/v1/profiles/documents \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"The\":{}}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/profiles/documents"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\"The\": []]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/profiles/documents\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "PROFILES",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/profiles/documents\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/documents\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/profiles/documents\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/profiles/documents\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/profiles/documents\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/profiles/documents\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles/documents\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/profiles/documents',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/profiles/documents\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/profiles/documents\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/profiles/documents\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/profiles/documents\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/profiles/documents\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/profiles/documents');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/profiles/documents');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/profiles/documents\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/profiles/documents\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/profiles/documents\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/profiles/documents \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/profiles/documents \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/profiles/documents"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/profiles/documents\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/validations/email_exists": {
      "get": {
        "description": "Enter an e-mail to see if it is available. Can be used as ?email=xxx or as a JSON request.",
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/get_email_exists_response"
            }
          }
        },
        "summary": "STAGE=UNK Check if an e-mail exists.",
        "tags": [
          "validations"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/validations/email_exists?email=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/validations/email_exists',\n  qs: { email: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/validations/email_exists\");\n\nreq.query({\n  \"email\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/validations/email_exists');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'email' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/validations/email_exists');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'email' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/validations/email_exists?email=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/validations/email_exists\"\n\nquerystring = {\"email\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "VALIDATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/validations/email_exists\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/validations/email_exists\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/validations/email_exists\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/validations/email_exists\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/validations/email_exists\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/validations/email_exists\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/validations/email_exists\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/validations/email_exists',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/validations/email_exists\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/validations/email_exists\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/validations/email_exists\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/validations/email_exists\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/validations/email_exists\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/validations/email_exists');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/validations/email_exists');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/validations/email_exists\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/validations/email_exists\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/validations/email_exists\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/validations/email_exists \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/validations/email_exists \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/validations/email_exists"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/validations/email_exists\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/validations/trailers": {
      "delete": {
        "description": "This will remove a customer_type from the list. This is only useable via a special api-token",
        "parameters": [
          {
            "description": "This will remove this type from the list.",
            "in": "query",
            "name": "customer_type",
            "required": true,
            "type": "string"
          },
          {
            "description": "If you wish to remove a customer_type associated with a username you would add this parameter.",
            "in": "query",
            "name": "username",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Status 204"
          }
        },
        "summary": "STAGE=UNK Remove a lookup.",
        "tags": [
          "validations"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://api.directfreight.com/v1/validations/trailers',\n  qs: \n   { customer_type: 'SOME_STRING_VALUE',\n     username: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://api.directfreight.com/v1/validations/trailers\");\n\nreq.query({\n  \"customer_type\": \"SOME_STRING_VALUE\",\n  \"username\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"'https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/validations/trailers');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setQueryData(array(\n  'customer_type' => 'SOME_STRING_VALUE',\n  'username' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/validations/trailers');\n$request->setRequestMethod('DELETE');\n$request->setQuery(new http\\QueryString(array(\n  'customer_type' => 'SOME_STRING_VALUE',\n  'username' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/validations/trailers\"\n\nquerystring = {\"customer_type\":\"SOME_STRING_VALUE\",\"username\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url 'https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE 'https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&username=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The custom type that the poster is trying to submit.",
            "in": "query",
            "name": "customer_type",
            "required": true,
            "type": "string",
            "x-example": "DX"
          },
          {
            "description": "We assume only posters will be using this endpoint. We will use their end-user-token to match for a customer specific match first, and fall back to a general one if it doesn't exist.",
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "properties": {
                "trailer_type": {
                  "$ref": "#/definitions/trailer_type"
                }
              },
              "required": [
                "trailer_type"
              ],
              "type": "object"
            }
          }
        },
        "summary": "STAGE=UNK Find an official type to match to the customer submitted one.",
        "tags": [
          "validations"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/validations/trailers?customer_type=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/validations/trailers',\n  qs: { customer_type: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/validations/trailers\");\n\nreq.query({\n  \"customer_type\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/validations/trailers');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'customer_type' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/validations/trailers');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'customer_type' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/validations/trailers?customer_type=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/validations/trailers\"\n\nquerystring = {\"customer_type\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "patch": {
        "consumes": [],
        "description": "Will update the match of the trailer_type to the customer type. This is only useable via a special api-token",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "customer_type": {
                  "description": "This is the key. It is not modified.",
                  "type": "string"
                },
                "notes": {
                  "description": "You can clear or replace the notes.",
                  "type": "string"
                },
                "trailer_type": {
                  "$ref": "#/definitions/trailer_type"
                },
                "username": {
                  "description": "This is an optional key, and is also not modifiable. If customer_type is associated with a username you must also include the username.",
                  "type": "string"
                }
              },
              "required": [
                "customer_type",
                "trailer_type"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Status 202"
          }
        },
        "summary": "STAGE=UNK Update which DF trailer_types match the customer_type",
        "tags": [
          "validations"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/validations/trailers\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"customer_type\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notes\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"username\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/validations/trailers\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"customer_type\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notes\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"username\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/validations/trailers\"\n\n\tpayload := strings.NewReader(\"{\\\"customer_type\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notes\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"username\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"customer_type\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notes\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"username\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/validations/trailers\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://api.directfreight.com/v1/validations/trailers\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"customer_type\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notes\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"username\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/validations/trailers\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"customer_type\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notes\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"username\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"customer_type\": \"<ADD EXAMPLE VALUE>\",\n  \"notes\": \"<ADD EXAMPLE VALUE>\",\n  \"username\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://api.directfreight.com/v1/validations/trailers\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/validations/trailers\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ customer_type: '<ADD EXAMPLE VALUE>',\n  notes: '<ADD EXAMPLE VALUE>',\n  username: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://api.directfreight.com/v1/validations/trailers',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { customer_type: '<ADD EXAMPLE VALUE>',\n     notes: '<ADD EXAMPLE VALUE>',\n     username: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://api.directfreight.com/v1/validations/trailers\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"customer_type\": \"<ADD EXAMPLE VALUE>\",\n  \"notes\": \"<ADD EXAMPLE VALUE>\",\n  \"username\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"customer_type\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"notes\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"username\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/validations/trailers\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/validations/trailers\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"customer_type\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notes\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"username\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://api.directfreight.com/v1/validations/trailers\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/validations/trailers\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"customer_type\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notes\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"username\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/validations/trailers');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/validations/trailers');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"customer_type\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notes\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"username\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/validations/trailers\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/validations/trailers\"\n\npayload = \"{\\\"customer_type\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notes\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"username\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/validations/trailers\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"customer_type\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notes\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"username\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://api.directfreight.com/v1/validations/trailers \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --data '{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http PATCH https://api.directfreight.com/v1/validations/trailers \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/validations/trailers"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"customer_type\": \"<ADD EXAMPLE VALUE>\",\n  \"notes\": \"<ADD EXAMPLE VALUE>\",\n  \"username\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/validations/trailers\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "consumes": [],
        "description": "This is only useable via a special api-token",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "customer_type": {
                  "description": "This is the new type we are adding to our lookup table.",
                  "type": "string"
                },
                "notes": {
                  "description": "Provides context. For internal use.",
                  "type": "string"
                },
                "trailer_type": {
                  "$ref": "#/definitions/trailer_type"
                },
                "username": {
                  "description": "This is to specify to create this definition for only this specific user. You might do this if this customer_type already exists and uses a different list of trailer types than this customer requires.\n\nThis style uses the old system. It is open in that anyone with the special api-token can update any user. Optionally, if we chose to lock it down to end-user-token we loose that ability, could drop this field and let them just send in an EUA token.",
                  "type": "string"
                }
              },
              "required": [
                "customer_type",
                "trailer_type"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Status 201"
          }
        },
        "summary": "STAGE=UNK Add a custom trailer type match.",
        "tags": [
          "validations"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/validations/trailers\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"customer_type\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notes\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"username\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/validations/trailers\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"customer_type\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notes\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"username\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/validations/trailers\"\n\n\tpayload := strings.NewReader(\"{\\\"customer_type\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notes\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"username\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"customer_type\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notes\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"username\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/validations/trailers\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/validations/trailers\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"customer_type\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notes\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"username\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/validations/trailers\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"customer_type\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notes\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"username\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"customer_type\": \"<ADD EXAMPLE VALUE>\",\n  \"notes\": \"<ADD EXAMPLE VALUE>\",\n  \"username\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/validations/trailers\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/validations/trailers\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ customer_type: '<ADD EXAMPLE VALUE>',\n  notes: '<ADD EXAMPLE VALUE>',\n  username: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/validations/trailers',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { customer_type: '<ADD EXAMPLE VALUE>',\n     notes: '<ADD EXAMPLE VALUE>',\n     username: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/validations/trailers\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"customer_type\": \"<ADD EXAMPLE VALUE>\",\n  \"notes\": \"<ADD EXAMPLE VALUE>\",\n  \"username\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"customer_type\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"notes\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"username\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/validations/trailers\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/validations/trailers\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"customer_type\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notes\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"username\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/validations/trailers\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/validations/trailers\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"customer_type\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notes\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"username\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/validations/trailers');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/validations/trailers');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"customer_type\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notes\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"username\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/validations/trailers\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/validations/trailers\"\n\npayload = \"{\\\"customer_type\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notes\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"username\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/validations/trailers\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"customer_type\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notes\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"username\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/validations/trailers \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --data '{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http POST https://api.directfreight.com/v1/validations/trailers \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"customer_type\":\"<ADD EXAMPLE VALUE>\",\"notes\":\"<ADD EXAMPLE VALUE>\",\"username\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/validations/trailers"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"customer_type\": \"<ADD EXAMPLE VALUE>\",\n  \"notes\": \"<ADD EXAMPLE VALUE>\",\n  \"username\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/validations/trailers\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "VALIDATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/validations/trailers\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/validations/trailers\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/validations/trailers\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/validations/trailers\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/validations/trailers\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/validations/trailers\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/validations/trailers\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/validations/trailers',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/validations/trailers\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/validations/trailers\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/validations/trailers\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/validations/trailers\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/validations/trailers\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/validations/trailers');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/validations/trailers');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/validations/trailers\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/validations/trailers\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/validations/trailers\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/validations/trailers \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/validations/trailers \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/validations/trailers"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/validations/trailers\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    }
  },
  "definitions": {
    "alert_list": {
      "description": "A hash containing a list of objects. Each entry should have 1 alert object, and 1 search object, and 2 integer counts. One for the number of new loads, and one for the number of total loads that match the search critera.",
      "example": "{\n  \"data\": [\n    \"{}\",\n    \"{}\"\n  ]\n}",
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/alert"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "ALERTS"
      }
    },
    "alert": {
      "properties": {
        "days_of_week": {
          "description": "Limit the days that alerts are sent to the days listed.",
          "items": {
            "enum": [
              "Sun",
              "Mon",
              "Tue",
              "Wed",
              "Thu",
              "Fri",
              "Sat"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "email_address": {
          "description": "The address for the alert.",
          "type": "string"
        },
        "end_hour": {
          "description": "A  corresponding to the hour of the day.",
          "maximum": 21,
          "minimum": 3,
          "type": "integer"
        },
        "expires_after": {
          "description": "The last day the alert will be valid. Valid time frames are from today until one year into the future.",
          "example": "2019-12-30",
          "format": "date",
          "type": "string"
        },
        "list_order": {
          "description": "Any value that is valid in the boards sort_order is also valid here.",
          "type": "string"
        },
        "list_type": {
          "description": "This specify the type of list that is returned, including disabling the list from being sent at all. Valid values are 'complete-list','only-new', and 'not-active'.",
          "enum": [
            "complete-list",
            "only-new",
            "not-active"
          ],
          "type": "string"
        },
        "minute_frequency": {
          "description": "How many minutes to wait before sending another alert. Valid values are '15','30','60','120','240','480', and '1440'.",
          "type": "integer"
        },
        "search": {
          "description": "Refer to the boards documentation for the full list of restrictions for each field.",
          "properties": {
            "delivery_date": {
              "format": "date",
              "type": "string"
            },
            "destination_city": {
              "type": "string"
            },
            "destination_radius": {
              "type": "integer"
            },
            "destination_state": {
              "type": "string"
            },
            "full_load": {
              "type": "boolean"
            },
            "origin_city": {
              "type": "string"
            },
            "origin_radius": {
              "type": "integer"
            },
            "origin_state": {
              "type": "string"
            },
            "ship_date": {
              "items": {
                "format": "date",
                "type": "string"
              },
              "type": "array"
            },
            "trailer_type": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "send_type": {
          "description": "What method to send the alert list.",
          "enum": [
            "email",
            "text"
          ],
          "type": "string"
        },
        "start_hour": {
          "description": "A  corresponding to the hour of the day.",
          "maximum": 21,
          "minimum": 3,
          "type": "integer"
        },
        "time_zone": {
          "description": "A number between -1 and 2. -1 = EST, 0 = CST, 1 = MST, 2 = PST",
          "maximum": 2,
          "minimum": -1,
          "type": "integer"
        }
      },
      "required": [
        "days_of_week",
        "email_address",
        "end_hour",
        "expires_after",
        "list_order",
        "list_type",
        "minute_frequency",
        "search",
        "send_type",
        "start_hour",
        "time_zone"
      ],
      "type": "object",
      "x-restlet": {
        "section": "ALERTS"
      }
    },
    "autocomplete_response": {
      "example": "{\n  \"city\": \"city\",\n  \"state_abbreviation\": \"{}\",\n  \"state_name\": \"{}\"\n}",
      "properties": {
        "city": {
          "description": "The name of the city.  Only returned if record_type is city or postal",
          "type": "string"
        },
        "postal_code": {
          "description": "The postal code of the city.  Only returned if match type is postal.",
          "type": "string"
        },
        "record_type": {
          "enum": [
            "country",
            "state",
            "province",
            "city",
            "postal"
          ],
          "type": "string"
        },
        "region_code": {
          "type": "string"
        },
        "region_name": {
          "type": "string"
        }
      },
      "required": [
        "record_type",
        "region_code",
        "region_name"
      ],
      "type": "object",
      "x-restlet": {
        "section": "LOCATIONS"
      }
    },
    "board_request": {
      "properties": {
        "alert_id": {
          "description": "By specifying an alert_id we will record the loads or trucks seen by this user, and associate it with their alert.   See /alerts documentation for more information on setting up alerts.",
          "example": 5555,
          "type": "integer"
        },
        "company_name": {
          "description": "Search only for loads posted by this company.",
          "type": "string"
        },
        "destination_city": {
          "description": "If used, this field must be accompanied by a destination_state.",
          "example": "chicago",
          "minLength": 2,
          "type": "string"
        },
        "destination_radius": {
          "description": "If both the destination city and state are specified, this field will limit the search to results to within # miles of the specified destination city.   If this field is omitted during a search that includes a destination city a default value of 30 miles will be used.",
          "example": 100,
          "maximum": 300,
          "minimum": 1,
          "type": "integer"
        },
        "destination_state": {
          "description": "If the destination_city field is is used, this field should contain the state for that city.  For searches without a specified destination_city this field may contain an array list of state abbreviations.",
          "example": [
            "IL",
            "HI",
            "NY",
            "KS",
            "TX",
            "MO",
            "AL"
          ],
          "items": {
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "type": "array"
        },
        "full_load": {
          "description": "This is only valid when requesting a loads board. Omitting this field will return both full and partial loads. A true value will limit results to full loads loads only.  False will return partial loads only.",
          "example": true,
          "type": "boolean"
        },
        "item_count": {
          "description": "This argument adjusts how many items per page will be returned.  Omitting this field will return the default of 50 items per page",
          "example": 25,
          "maximum": 100,
          "minimum": 1,
          "type": "integer"
        },
        "origin_city": {
          "description": "If used, this field must be accompanied by an origin_state.",
          "example": "Kansas City",
          "minLength": 2,
          "type": "string"
        },
        "origin_radius": {
          "description": "If both the origin city and state are specified, this field will limit the search to results to within # miles of the specified origin city. If this field is omitted during a search that includes an origin city a default value of 25 miles will be used.",
          "example": 150,
          "maximum": 300,
          "minimum": 1,
          "type": "integer"
        },
        "origin_state": {
          "description": "If the origin_city field is is used, this field should contain the state for that city. For searches without a specified origin_city this field may contain an array list of state abbreviations.",
          "example": [
            "MO",
            "IL",
            "TX",
            "CA"
          ],
          "items": {
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "type": "array"
        },
        "page_number": {
          "description": "The page you want to return. Will return an empty board on an invalid page.",
          "minimum": 1,
          "type": "integer"
        },
        "return_count": {
          "description": "If included this will return a total count instead of a list. ",
          "type": "boolean"
        },
        "return_only_new": {
          "description": "A true value will only return results that have not been viewed by the user. This field requires a valid alert_id to be specified in order to return unviewed items.  See /alerts for more information on setting up and using alerts.",
          "type": "boolean"
        },
        "ship_date": {
          "description": "Limits results to specified ship date(s).",
          "items": {
            "description": "Please use the YYYY-MM-DD format.",
            "format": "date",
            "type": "string"
          },
          "type": "array"
        },
        "sort_parameter": {
          "default": "age",
          "description": "The system automatically chooses the most common order based on the parameter chosen.  Sort order can be specified by adding -asc or -desc to the end.",
          "enum": [
            "origin_city",
            "origin_state",
            "destination_city",
            "destination_state",
            "trailer_type",
            "load_size",
            "pay_rate",
            "credit_score",
            "age",
            "trip_miles",
            "dead_head",
            "length",
            "weight",
            "company_name",
            "ship_date",
            "receive_date",
            "tia_user",
            "green_light"
          ],
          "example": "age",
          "type": "string"
        },
        "trailer_type": {
          "description": "A string array of valid trailer types to limit the search. ",
          "example": [
            "F",
            "F+T",
            "F+S",
            "V"
          ],
          "items": {
            "enum": [
              "V",
              "VINT",
              "SD",
              "MX",
              "HS",
              "AC",
              "LB",
              "F+T",
              "F",
              "FINT",
              "DD",
              "V+V",
              "V+A",
              "CRG",
              "HB",
              "LA",
              "PO",
              "R",
              "RINT",
              "RGN",
              "CV",
              "DT",
              "TNK",
              "F+S",
              "PNEU",
              "CONT",
              "OTHER"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "BOARDS"
      }
    },
    "board_response_item": {
      "example": "test",
      "properties": {
        "age": {
          "description": "Time in minutes since load/truck was first posted. NULL is returned for values less than 1 minute.",
          "example": 15,
          "type": "integer"
        },
        "comment": {
          "description": "This field is only returned for an end_user_token that has the subscribed access level.",
          "example": "Test Load",
          "type": "string"
        },
        "company_name": {
          "description": "This field is only returned for an end_user_token that has the subscribed access level.",
          "example": "ABC Company",
          "type": "string"
        },
        "credit_report_key": {
          "description": "This field is only returned for an end_user_token that has the subscribed access level.\n\nTo access the credit report associated with the company for this item, use the key returned with the following url. https://www.directfreight.com/home/credit_report?refid=$credit_report_key",
          "type": "string"
        },
        "credit_score": {
          "description": "The credit score for the company associated with this item.",
          "example": 99,
          "type": "integer"
        },
        "dead_head": {
          "description": "Distance between request body origin_city, and response item origin_city. This field will be null if no origin_city is specified in the request body or if distance cannot be calculated.",
          "example": 87,
          "type": "integer"
        },
        "destination_city": {
          "description": "This field may be returned as null.",
          "minLength": 2,
          "type": "string"
        },
        "destination_state": {
          "description": "This field may be returned as null.",
          "example": "MO",
          "type": "string"
        },
        "entry_id": {
          "description": "unique identifier for this item.",
          "example": "55555555",
          "type": "string"
        },
        "full_load": {
          "description": "Specifies whether load is full or partial.  Will always return true for trucks.",
          "example": true,
          "type": "boolean"
        },
        "green_light": {
          "description": "Indicates whether broker/shipper for item is pre-approved for Rivera Finance factoring program.",
          "example": true,
          "type": "boolean"
        },
        "height": {
          "description": "Height in inches.  Will be null if empty.",
          "type": "integer"
        },
        "length": {
          "description": "Length in feet.  Will be null if empty.",
          "type": "number"
        },
        "origin_city": {
          "description": "Origin city of item.",
          "example": "Chicago",
          "minLength": 2,
          "type": "string"
        },
        "origin_state": {
          "description": "Origin state of item",
          "example": "IL",
          "type": "string"
        },
        "pay_rate": {
          "description": "Will be null if empty.",
          "type": "number"
        },
        "phone_extension": {
          "description": "This field is only returned for an end_user_token that has the subscribed access level.   Will return null if empty.",
          "example": 123,
          "type": "integer"
        },
        "phone_number": {
          "description": "This field is only returned for an end_user_token that has the subscribed access level.",
          "example": "555-555-5555",
          "type": "integer"
        },
        "receive_date": {
          "example": "2018-09-24",
          "format": "date",
          "type": "string"
        },
        "ship_date": {
          "description": "Date item is scheduled to be loaded.",
          "example": "2018-09-20",
          "format": "date",
          "type": "string"
        },
        "trade_orgs": {
          "description": "Approved Trade Organizations",
          "properties": {
            "tia_approved": {
              "description": "TIA Approved (yes/no)",
              "type": "string"
            }
          },
          "type": "object"
        },
        "trailer_type": {
          "description": "A string array of valid trailer types.",
          "example": "V",
          "type": "string"
        },
        "trip_miles": {
          "description": "Distance between origin and destination.  This field will be null if distance cannot be calculated.",
          "example": 523,
          "type": "integer"
        },
        "user_hid": {
          "description": "This field is only returned for an end_user_token that has the subscribed or posting access level. The value when true represents that the user wishes the entry hidden. Refer to boards/hidden_entries/ documentation for more information on how to set and update this value.",
          "example": false,
          "type": "boolean"
        },
        "weight": {
          "description": "Weight in pounds.  Will be null if empty.",
          "type": "integer"
        },
        "width": {
          "description": "Width in inches.  Will be null if empty.",
          "type": "integer"
        }
      },
      "required": [
        "age",
        "credit_score",
        "dead_head",
        "destination_city",
        "destination_state",
        "entry_id",
        "full_load",
        "green_light",
        "height",
        "length",
        "origin_city",
        "origin_state",
        "pay_rate",
        "receive_date",
        "ship_date",
        "trailer_type",
        "trip_miles",
        "weight",
        "width"
      ],
      "type": "object",
      "x-restlet": {
        "section": "BOARDS"
      }
    },
    "board_response": {
      "example": "{\n  \"list\": \"{}\",\n  \"page_number\": \"{}\",\n  \"total_items\": \"{}\",\n  \"total_pages\": 0\n}",
      "properties": {
        "list": {
          "description": "A list of entries for this board.",
          "items": {
            "$ref": "#/definitions/board_response_item"
          },
          "type": "array"
        },
        "page_number": {
          "description": "The page you are on.",
          "type": "integer"
        },
        "total_items": {
          "description": "A count of all the entry objects for the specified search.",
          "type": "integer"
        },
        "total_pages": {
          "description": "A count of the # of pages based on the search parameters.",
          "type": "integer"
        }
      },
      "required": [
        "list"
      ],
      "type": "object",
      "x-restlet": {
        "section": "BOARDS"
      }
    },
    "create_multiple_postings": {
      "properties": {
        "contact_name": {
          "description": "The dispatchers name. By default we use the profile information. ",
          "type": "string"
        },
        "contact_phone": {
          "description": "By default we use the number listed in their profile. ",
          "type": "string"
        },
        "delete_current_before_posting": {
          "description": "An optional argument that will first delete all of the users loads before entering the fresh list. Caution, this will still delete everything even if some of the entries fail to be created. ",
          "type": "boolean"
        },
        "list": {
          "description": "Valid types are &quot;loads&quot;, &quot;trucks&quot;, &quot;private_loads&quot;, &quot;private_trucks&quot;, &quot;test_loads&quot;, and &quot;test_trucks&quot; ",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "list"
      ],
      "type": "object",
      "x-restlet": {
        "section": "POSTINGS"
      }
    },
    "create_notes": {
      "properties": {
        "body": {
          "type": "string"
        },
        "entry_id": {
          "description": "The entry to associate the note with. ",
          "type": "string"
        },
        "title": {
          "description": "Subject of the note. ",
          "type": "string"
        }
      },
      "required": [
        "body",
        "entry_id",
        "title"
      ],
      "type": "object",
      "x-restlet": {
        "section": "BOARDS"
      }
    },
    "create_status": {
      "properties": {
        "success": {
          "type": "integer"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "common_definitions"
      }
    },
    "end-user-token": {
      "properties": {
        "end-user-token": {
          "description": "On success and end-user-token is returned.",
          "example": "XX423ASOEUHT4AESUTH",
          "type": "string"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS"
      }
    },
    "error_object": {
      "example": "{\n  \"code\": 1,\n  \"error\": \"Generic Validation\",\n  \"description\": \"The e-mail address must be valid.\"\n}",
      "properties": {
        "code": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "code",
        "description",
        "error"
      ],
      "type": "object",
      "x-restlet": {
        "section": "common_definitions"
      }
    },
    "get_boards_notes_response": {
      "properties": {
        "list": {
          "description": "A list of requested notes",
          "items": {
            "$ref": "#/definitions/notes_response_item"
          },
          "type": "array"
        }
      },
      "required": [
        "list"
      ],
      "type": "object",
      "x-restlet": {
        "section": "BOARDS"
      }
    },
    "get_custom_categories_response": {
      "example": "{\n  \"categories\": [\n    \"categories\",\n    \"categories\"\n  ]\n}",
      "properties": {
        "categories": {
          "description": "A list of each category, type and it's corresponding position.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "not categorized yet"
      }
    },
    "get_email_exists_response": {
      "example": "{\n  \"exists\": true\n}",
      "properties": {
        "exists": {
          "description": "Returns a true value if it is associated with an account.",
          "type": "boolean"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "not categorized yet"
      }
    },
    "get_hidden_companies_response": {
      "example": "{\n  \"company_name\": [\n    \"company_name\",\n    \"company_name\"\n  ]\n}",
      "properties": {
        "company_name": {
          "description": "A subset of companies that need to be marked as hidden.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "not categorized yet"
      }
    },
    "get_hidden_entries": {
      "example": {
        "entry_id": [
          "entry_id",
          "entry_id"
        ]
      },
      "properties": {
        "entry_id": {
          "description": "A subset of entries that need to be marked as hidden.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "not categorized yet"
      }
    },
    "get_state_list_response": {
      "example": "{\n  \"list\": \"{     \\\"MS\\\": 1449,     \\\"NS\\\": 24,     \\\"VT\\\": 145,     \\\"MD\\\": 520,     \\\"ID\\\": 2091,     \\\"SK\\\": 126,     \\\"WA\\\": 2207,     \\\"SC\\\": 1619,     \\\"VA\\\": 1781,     \\\"PQ\\\": 10,     \\\"ON\\\": 270,     \\\"KS\\\": 969,     \\\"NE\\\": 1386,     \\\"OR\\\": 2984,     \\\"WI\\\": 2714,     \\\"GA\\\": 3184,     \\\"IN\\\": 3363,     \\\"KY\\\": 1731,     \\\"NV\\\": 534,     \\\"NC\\\": 1824,     \\\"BC\\\": 124,     \\\"DC\\\": 7,     .... }\"\n}",
      "properties": {
        "list": {
          "description": "A hash of state totals.",
          "example": "{     \"MS\": 1449,     \"NS\": 24,     \"VT\": 145,     \"MD\": 520,     \"ID\": 2091,     \"SK\": 126,     \"WA\": 2207,     \"SC\": 1619,     \"VA\": 1781,     \"PQ\": 10,     \"ON\": 270,     \"KS\": 969,     \"NE\": 1386,     \"OR\": 2984,     \"WI\": 2714,     \"GA\": 3184,     \"IN\": 3363,     \"KY\": 1731,     \"NV\": 534,     \"NC\": 1824,     \"BC\": 124,     \"DC\": 7,     .... }",
          "type": "object"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "BOARDS"
      }
    },
    "hidden_entry_object": {
      "properties": {
        "entry_id": {
          "description": "The entry(s) that need to be marked as hidden.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "entry_id"
      ],
      "type": "object",
      "x-restlet": {
        "section": "BOARDS"
      }
    },
    "login_credentials": {
      "properties": {
        "login": {
          "description": "The e-mail, or username information needed to log in. ",
          "type": "string"
        },
        "realm": {
          "description": "This specifies who to log in with. If left blank we will assume email/password. Valid realms are username, email, facebook(not implemneted), google(not implemented), and linkedin(not implemented). ",
          "enum": [
            "username",
            "email"
          ],
          "type": "string"
        },
        "secret": {
          "description": "The password, or token required for this login. ",
          "type": "string"
        }
      },
      "required": [
        "login",
        "realm",
        "secret"
      ],
      "type": "object",
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS"
      }
    },
    "mark_hidden_companies": {
      "properties": {
        "company_name": {
          "description": "The company that need to be marked as hidden.",
          "type": "string"
        }
      },
      "required": [
        "company_name"
      ],
      "type": "object",
      "x-restlet": {
        "section": "not categorized yet"
      }
    },
    "mobile_carrier_response": {
      "example": {
        "carrier_id": 0,
        "carrier_name": "{}"
      },
      "properties": {
        "carrier_id": {
          "description": "The carrier ID.",
          "format": "int32",
          "type": "integer"
        },
        "carrier_name": {
          "description": "Their mobile carrier.",
          "type": "object"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "not categorized yet"
      }
    },
    "note_create_status": {
      "properties": {
        "note_id": {
          "description": "Id of the note.",
          "type": "integer"
        },
        "success": {
          "type": "integer"
        }
      },
      "required": [
        "note_id"
      ],
      "type": "object",
      "x-restlet": {
        "section": "common_definitions"
      }
    },
    "notes_response_item": {
      "example": "test",
      "properties": {
        "body": {
          "description": "Body of the note",
          "example": "This is a test note.",
          "type": "string"
        },
        "date_added": {
          "description": "The date the note was created.",
          "example": "2019-08-23",
          "format": "date",
          "type": "string"
        },
        "date_modified": {
          "description": "Date of the last update to this note",
          "example": "2019-08-24",
          "format": "date",
          "type": "string"
        },
        "deleted": {
          "description": "Not sure what this field is?  Is this the date the note was deleted or the status of the load?",
          "type": "string"
        },
        "entry_id": {
          "description": "Entry id of the load associated with this note.",
          "example": "93b30df654ccd860eb34775214877921",
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "example": 55551,
          "type": "integer"
        },
        "important": {
          "description": "Identifies notes marked as important.",
          "example": true,
          "type": "boolean"
        },
        "title": {
          "description": "Title of note.",
          "example": "MO",
          "type": "string"
        }
      },
      "required": [
        "body",
        "date_added",
        "date_modified",
        "deleted",
        "entry_id",
        "id",
        "important",
        "title"
      ],
      "type": "object",
      "x-restlet": {
        "section": "BOARDS"
      }
    },
    "patch_alert_properties": {
      "properties": {
        "alert_id": {
          "description": "Specify which alert you are updating.",
          "type": "integer"
        },
        "days_of_week": {
          "description": "Limit the days that alerts are sent to the days listed.",
          "items": {
            "enum": [
              "Sun",
              "Mon",
              "Tue",
              "Wed",
              "Thu",
              "Fri",
              "Sat"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "end_hour": {
          "description": "A value corresponding to the hour of the day.",
          "maximum": 21,
          "minimum": 3,
          "type": "integer"
        },
        "expires_after": {
          "description": "The last day the alert will be valid. Valid time frames are from today until one year into the future.",
          "format": "date",
          "type": "string"
        },
        "list_order": {
          "description": "Any value that is valid in the boards sort_order is also valid here.",
          "type": "string"
        },
        "list_type": {
          "description": "This specify the type of list that is returned, including disabling the list from being sent at all.",
          "enum": [
            "complete-list",
            "only-new",
            "not-active"
          ],
          "type": "string"
        },
        "minute_frequency": {
          "description": "How many minutes to wait before sending another alert.",
          "type": "integer"
        },
        "send_type": {
          "description": "What method to send the alert list.",
          "enum": [
            "email",
            "text"
          ],
          "type": "string"
        },
        "start_hour": {
          "description": "A value corresponding to the hour of the day.",
          "maximum": 21,
          "minimum": 3,
          "type": "integer"
        },
        "time_zone": {
          "description": "A number between -1 and 2. -1 = EST, 0 = CST, 1 = MST, 2 = PST",
          "maximum": 2,
          "minimum": -1,
          "type": "integer"
        }
      },
      "required": [
        "alert_id"
      ],
      "type": "object",
      "x-restlet": {
        "section": "ALERTS"
      }
    },
    "post_optin_code_response": {
      "example": {
        "optin_code": "optin_code"
      },
      "properties": {
        "optin_code": {
          "description": "A text string with the code sent.",
          "type": "string"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "not categorized yet"
      }
    },
    "post_posting_multiple_response": {
      "example": "{\n  \"success\": true\n}",
      "properties": {
        "success": {
          "description": "This will return true, and have a unique location in the location header.",
          "type": "boolean"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "POSTINGS"
      }
    },
    "post_posting_type_action_body": {
      "properties": {
        "source_id": {
          "description": "The posting id of the posting you are moving or copying. Optional for create.",
          "type": "object"
        },
        "source_posting": {
          "description": "The posting_type where you are moving or copying the posting from. Optional for create. Items can only be moved to like types. loads -> private_private loads.",
          "type": "string"
        }
      },
      "required": [
        "source_id",
        "source_posting"
      ],
      "type": "object",
      "x-restlet": {
        "section": "not categorized yet"
      }
    },
    "posting_post_response": {
      "example": "{\n  \"list\": [\n    .....\n  ]\n}",
      "properties": {
        "list": {
          "description": "A list of posting objects you can iterate over.",
          "items": {
            "$ref": "#/definitions/postings_post_response_item"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "POSTINGS"
      }
    },
    "postings_entry_object": {
      "properties": {
        "comment": {
          "type": "string"
        },
        "custom_id": {
          "description": "An identifier that can be provided for your own records.  (i.e.-Company load number) This field can be used to retrieve loads via GET.  This value must be unique. Custom Id's can have a maximum of 25 characters.",
          "type": "string"
        },
        "destination_city": {
          "description": "Delivery location city of load/truck. For truck type entries this field is optional or can be used to specify a region.",
          "type": "string"
        },
        "destination_state": {
          "description": "Delivery location state of load/truck. For truck type entries this field is optional.",
          "type": "string"
        },
        "full_load": {
          "description": "The load will be defaulted to full if this argument isn't included and marked to false.",
          "type": "boolean"
        },
        "height": {
          "description": "This number represents inches.",
          "type": "integer"
        },
        "length": {
          "description": "This number represents feet.",
          "type": "number"
        },
        "origin_city": {
          "description": "Origin city location of load or truck.  Required for all entry types.",
          "type": "string"
        },
        "origin_state": {
          "description": "Origin state location of load or truck.  Use the 2 digit state abbreviation.",
          "maxLength": 2,
          "minLength": 2,
          "type": "string"
        },
        "other_trailer_types": {
          "description": "Can be used to specify custom trailer types.",
          "type": "string"
        },
        "pay_rate": {
          "description": "This field will accept either the per mile rate, or gross rate.",
          "type": "number"
        },
        "phone_extension": {
          "description": "If not provided we will use the contact info associated with the users profile.",
          "type": "integer"
        },
        "phone_number": {
          "description": "If not provided we will use the contact info associated with the users profile.",
          "type": "integer"
        },
        "receive_date": {
          "description": "The date the load/truck should deliver.",
          "format": "date",
          "type": "string"
        },
        "ship_date": {
          "description": "When posting loads this is the date the load should be picked up.  When posting trucks this is the date the truck is available to be loaded.",
          "format": "date",
          "type": "string"
        },
        "trailer_type": {
          "description": "This can have 1 or more standard trailer types.",
          "items": {
            "enum": [
              "V",
              "VINT",
              "SD",
              "MX",
              "HS",
              "AC",
              "LB",
              "F+T",
              "F",
              "FINT",
              "DD",
              "V+V",
              "V+A",
              "CRG",
              "HB",
              "LA",
              "PO",
              "R",
              "RINT",
              "RGN",
              "CV",
              "DT",
              "TNK",
              "F+S",
              "PNEU",
              "CONT",
              "OTHER"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "weight": {
          "description": "This number represents pounds.",
          "type": "integer"
        },
        "width": {
          "description": "This number represents inches.",
          "type": "integer"
        }
      },
      "required": [
        "custom_id",
        "origin_city",
        "origin_state",
        "ship_date",
        "trailer_type"
      ],
      "type": "object",
      "x-restlet": {
        "section": "POSTINGS"
      }
    },
    "postings_patch_object": {
      "properties": {
        "comment": {
          "type": "string"
        },
        "custom_id": {
          "description": "An identifier that can be provided for your own records. (i.e.-Company load number) This field can be used to retrieve loads via GET. This value must be unique.\nYou cannot update a custom_id once it is set. Please delete and reenter the load to change the custom_id.  Either posting_id or custom_id is required.",
          "type": "string"
        },
        "destination_city": {
          "description": "Delivery location city of load/truck.",
          "type": "string"
        },
        "destination_state": {
          "description": "Delivery location city of load/truck.",
          "type": "string"
        },
        "full_load": {
          "description": "This should only be used with loads.",
          "type": "boolean"
        },
        "height": {
          "description": "This number represents inches.",
          "type": "integer"
        },
        "length": {
          "description": "This number represents feet.",
          "type": "number"
        },
        "origin_city": {
          "description": "Origin city location of load or truck",
          "type": "string"
        },
        "origin_state": {
          "description": "Origin state location of load or truck",
          "type": "string"
        },
        "other_trailer_types": {
          "description": "Can be used to specify custom trailer types.",
          "type": "string"
        },
        "pay_rate": {
          "description": "This field will accept either the per mile rate, or gross rate.",
          "type": "number"
        },
        "phone_extension": {
          "description": "If not provided we will use the contact info associated with the users profile.",
          "type": "integer"
        },
        "phone_number": {
          "description": "If not provided we will use the contact info associated with the users profile.",
          "type": "integer"
        },
        "posting_id": {
          "description": "A unique id for each entry.  This value is returned via GET. \nEither posting_id or custom_id is required.",
          "type": "integer"
        },
        "receive_date": {
          "description": "The date the load/truck should deliver.",
          "format": "date",
          "type": "string"
        },
        "ship_date": {
          "description": "When posting loads this is the date the load should be picked up.  When posting trucks this is the date the truck is available to be loaded.",
          "format": "date",
          "type": "string"
        },
        "trailer_type": {
          "description": "This can have 1 or more standard trailer types.",
          "items": {
            "enum": [
              "V",
              "VINT",
              "SD",
              "MX",
              "HS",
              "AC",
              "LB",
              "F+T",
              "F",
              "FINT",
              "DD",
              "V+V",
              "V+A",
              "CRG",
              "HB",
              "LA",
              "PO",
              "R",
              "RINT",
              "RGN",
              "CV",
              "DT",
              "TNK",
              "F+S",
              "PNEU",
              "CONT",
              "OTHER"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "weight": {
          "description": "This number represents pounds.",
          "type": "integer"
        },
        "width": {
          "description": "This number represents inches.",
          "type": "integer"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "POSTINGS"
      }
    },
    "postings_post_response_item": {
      "properties": {
        "comment": {
          "type": "string"
        },
        "contact_name": {
          "description": "This is generated from the logged in users profile information.",
          "type": "string"
        },
        "custom_id": {
          "description": "A unique identifier a user can provide for their own records.",
          "type": "integer"
        },
        "destination_city": {
          "description": "Delivery location city of load/truck.",
          "type": "string"
        },
        "destination_state": {
          "description": "Delivery location state of load/truck.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "full_load": {
          "description": "For trucks this will always be false.",
          "type": "boolean"
        },
        "height": {
          "description": "This number represents inches.",
          "type": "integer"
        },
        "length": {
          "description": "This number represents feet.",
          "type": "number"
        },
        "origin_city": {
          "description": "Origin city location of load or truck",
          "type": "string"
        },
        "origin_state": {
          "description": "Origin state location of load or truck.",
          "type": "string"
        },
        "other_trailer_types": {
          "description": "To include custom trailer types.",
          "type": "string"
        },
        "pay_rate": {
          "description": "We expect one of 2 formats. either the per mile, or total sum.",
          "type": "number"
        },
        "phone_extension": {
          "description": "If not supplied and not in the user's profile this will be null.",
          "type": "integer"
        },
        "phone_number": {
          "description": "If not supplied, this is generated from the logged in users profile information.",
          "type": "integer"
        },
        "posting_id": {
          "description": "This is the unique ID of this post.",
          "type": "integer"
        },
        "receive_date": {
          "description": "The date the load/truck should deliver.",
          "format": "date",
          "type": "string"
        },
        "ship_date": {
          "description": "The date you wish the load to be shipped.",
          "format": "date",
          "type": "string"
        },
        "trailer_type": {
          "description": "This can have 1 or more standard trailer types.",
          "items": {
            "enum": [
              "V",
              "VINT",
              "SD",
              "MX",
              "HS",
              "AC",
              "LB",
              "F+T",
              "F",
              "FINT",
              "DD",
              "V+V",
              "V+A",
              "CRG",
              "HB",
              "LA",
              "PO",
              "R",
              "RINT",
              "RGN",
              "CV",
              "DT",
              "TNK",
              "F+S",
              "PNEU",
              "CONT",
              "OTHER"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "weight": {
          "description": "This number represents pounds.",
          "type": "integer"
        },
        "width": {
          "description": "This number represents inches.",
          "type": "integer"
        }
      },
      "required": [
        "comment",
        "contact_name",
        "custom_id",
        "destination_city",
        "destination_state",
        "full_load",
        "height",
        "length",
        "origin_city",
        "origin_state",
        "other_trailer_types",
        "pay_rate",
        "phone_extension",
        "phone_number",
        "posting_id",
        "receive_date",
        "ship_date",
        "trailer_type",
        "weight",
        "width"
      ],
      "type": "object",
      "x-restlet": {
        "section": "POSTINGS"
      }
    },
    "postings-post_or_patch_response": {
      "example": "Success",
      "properties": {
        "list": {
          "items": {
            "properties": {
              "code": {
                "type": "integer"
              },
              "description": {
                "description": "An explanation of what each code means.",
                "type": "string"
              },
              "status": {
                "enum": [
                  "Success",
                  "Error"
                ],
                "type": "string"
              }
            },
            "required": [
              "status"
            ],
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "list"
      ],
      "type": "object",
      "x-restlet": {
        "section": "POSTINGS"
      }
    },
    "profile_object": {
      "example": "{\n  \"address\": \"P.O. Box 131\",\n  \"city\": \"Chillicothe\",\n  \"company\": \"Direct Freight\",\n  \"contact_extension\": 333,\n  \"contact_name\": \"Joe Doe\",\n  \"contact_number\": 555-555-5555,\n  \"dot_number\": 123456,\n  \"fax_number\": \"555-555-5555\",\n  \"mc_number\": 123456,\n  \"mobile_carrier\": \"Company_X\",\n  \"mobile_number\": \"555-555-1234\",\n  \"state\": \"MO\",\n  \"web_page\": \"http://www.directfreight.com\",\n  \"zip\": 55555\n}",
      "properties": {
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "company": {
          "description": "Company name. ",
          "type": "string"
        },
        "contact_extension": {
          "type": "integer"
        },
        "contact_name": {
          "description": "Contact name. ",
          "type": "string"
        },
        "contact_number": {
          "type": "integer"
        },
        "dispatch_extension": {
          "description": "Limited to 3 integers",
          "type": "integer"
        },
        "dispatch_number": {
          "type": "integer"
        },
        "dot_number": {
          "type": "string"
        },
        "fax_number": {
          "type": "integer"
        },
        "mc_number": {
          "type": "string"
        },
        "mobile_carrier": {
          "enum": [
            "Other/Unknown",
            "AT&T",
            "Verizon",
            "Sprint",
            "T-Mobile",
            "US Cellular",
            "Nextel",
            "Virgin Mobile",
            "Boost Mobile",
            "Straight Talk",
            "Tracfone",
            "NET10",
            "Metro PCS",
            "Cricket",
            "Rogers",
            "Fido",
            "Bell Mobility",
            "Telus",
            "Clearnet",
            "Solo Mobile",
            "Koodo Mobile"
          ],
          "type": "string"
        },
        "mobile_number": {
          "type": "integer"
        },
        "state": {
          "type": "string"
        },
        "web_page": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "PROFILES"
      }
    },
    "rename_document": {
      "properties": {
        "current_name": {
          "description": "The document to be renamed. ",
          "type": "string"
        },
        "new_name": {
          "description": "Replacement name. ",
          "type": "string"
        }
      },
      "required": [
        "current_name",
        "new_name"
      ],
      "type": "object",
      "x-restlet": {
        "section": "PROFILES"
      }
    },
    "reverse_geocode_response": {
      "properties": {
        "city": {
          "type": "string"
        },
        "region_code": {
          "type": "string"
        },
        "region_name": {
          "type": "string"
        }
      },
      "required": [
        "city",
        "region_code",
        "region_name"
      ],
      "type": "object",
      "x-restlet": {
        "section": "LOCATIONS"
      }
    },
    "success_status_response": {
      "example": {
        "status": "status"
      },
      "properties": {
        "status": {
          "description": "A text status like OPTIN, NORESPONSE, OPTOUT.",
          "type": "string"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "not categorized yet"
      }
    },
    "toggle_hidden_companies": {
      "properties": {
        "company_name": {
          "description": "The company name that need to be toggled. ",
          "type": "string"
        }
      },
      "required": [
        "company_name"
      ],
      "type": "object",
      "x-restlet": {
        "section": "not categorized yet"
      }
    },
    "toggle_hidden_entries": {
      "properties": {
        "entry_id": {
          "description": "The entry that need to be toggled. ",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "entry_id"
      ],
      "type": "object",
      "x-restlet": {
        "section": "BOARDS"
      }
    },
    "trailer_type": {
      "description": "These are the officially supported trailer types.",
      "items": {
        "enum": [
          "V",
          "VINT",
          "SD",
          "MX",
          "HS",
          "AC",
          "LB",
          "F+T",
          "F",
          "FINT",
          "DD",
          "V+V",
          "V+A",
          "CRG",
          "HB",
          "LA",
          "PO",
          "R",
          "RINT",
          "RGN",
          "CV",
          "DT",
          "TNK",
          "F+S",
          "PNEU",
          "CONT",
          "OTHER"
        ],
        "type": "string"
      },
      "type": "array",
      "x-restlet": {
        "section": "common_definitions"
      }
    },
    "update_notes_status": {
      "properties": {
        "success": {
          "type": "integer"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "common_definitions"
      }
    },
    "update_notes": {
      "properties": {
        "body": {
          "type": "string"
        },
        "note_id": {
          "description": "Id of the note",
          "type": "integer"
        },
        "title": {
          "description": "Subject of the note. ",
          "type": "string"
        }
      },
      "required": [
        "body",
        "note_id",
        "title"
      ],
      "type": "object",
      "x-restlet": {
        "section": "BOARDS"
      }
    },
    "upload_document": {
      "properties": {
        "The": {
          "description": "file to be uploaded. ",
          "type": "object"
        }
      },
      "required": [
        "The"
      ],
      "type": "object",
      "x-restlet": {
        "section": "PROFILES"
      }
    },
    "user": {
      "properties": {
        "email": {
          "description": "This must be a valid e-mail. ",
          "type": "string"
        },
        "password": {
          "description": "Currently this is a 6-10 digit alphanumeric password. ",
          "type": "string"
        }
      },
      "required": [
        "email",
        "password"
      ],
      "type": "object",
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS"
      }
    }
  }
}
