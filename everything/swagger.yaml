basePath: /v1
consumes:
  - application/json
host: api.directfreight.com
info:
  contact: {}
  description: |-
    In order to use the Direct Freight Load Board API please first contact us to get an API Token. 
    This token needs to be sent as a HTTP header argument in every request to our API.

    api-token="SECRET KEY"

    Please keep your api-token a secret. If the token is compromised please contact us to get a new one.

    This api token authenticates your application and gives it access to the API.

    The API token should not be confused with the end-user-token. 
    The end-user-token is given to you via the end_user_authentications endpoint when the user logs in. 
    The end-user-token is needed in order to use certain features, and get certain sensitive information.

    Both Tokens are stateless, and delivered via the HTTP headers.

    The api token is a permanent token assigned to each partner.
    The user token is a temporary session token assigned to each direct freight user.
    The user token can be valid for up to 24 hours depending on activity.
  title: Direct Freight Load Board API
  version: '1.0'
  x-logo:
    url: 'https://www.directfreight.com/home/images/logo-direct-freight.png'
parameters:
  end-user-token:
    in: header
    name: end-user-token
    required: true
    type: string
  end-user-token-optional:
    in: header
    name: end-user-token
    required: false
    type: string
  board_type:
    description: 'Valid types are "loads", and "trucks".'
    enum:
      - loads
      - trucks
    in: path
    name: board_type
    required: true
    type: string
  posting_type:
    description: 'Valid types are "loads", "trucks", "private_loads", "private_trucks", "test_loads", and "test_trucks"'
    enum:
      - loads
      - trucks
      - private_loads
      - private_trucks
      - test_loads
      - test_trucks
    in: path
    name: posting_type
    required: true
    type: string
produces:
  - application/json
responses:
  error_422:
    description: Unprocessable Entity. More information provided in the return object.
    schema:
      $ref: '#/definitions/error_object'
  object_created:
    description: Object created check the headers for a reference URL.
    schema:
      $ref: '#/definitions/create_status'
schemes:
  - https
security:
  - api-token: []
securityDefinitions:
  api-token:
    in: header
    name: api-token
    type: apiKey
swagger: '2.0'
x-restlet:
  sections:
    ALERTS: {}
    BOARDS: {}
    END_USER_AUTHENTICATIONS: {}
    LOCATIONS: {}
    Mobile Update: {}
    Optins: {}
    POSTINGS: {}
    PROFILES: {}
    VALIDATIONS: {}
    common_definitions: {}
    not categorized yet: {}
paths:
  '/alerts/{board_type}':
    delete:
      parameters:
        - description: 'Valid types are "loads", and "trucks".'
          enum:
            - loads
            - trucks
          in: path
          name: board_type
          required: true
          type: string
        - collectionFormat: multi
          description: Specify to just delete some alerts.
          in: query
          items:
            type: string
          name: alert_id
          required: true
          type: array
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '204':
          description: successful operation
      summary: STAGE=UNKNOWN Delete an alert.
      tags:
        - alerts
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE")
              .delete(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.delete("https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE",
              "method": "DELETE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("DELETE", "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url: 'https://api.directfreight.com/v1/alerts/%7Bboard_type%7D',
              qs: { alert_id: 'SOME_ARRAY_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("DELETE", "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D");

            req.query({
              "alert_id": "SOME_ARRAY_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `DELETE uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("DELETE",
            "'https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/alerts/%7Bboard_type%7D');
            $request->setMethod(HTTP_METH_DELETE);

            $request->setQueryData(array(
              'alert_id' => 'SOME_ARRAY_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/alerts/%7Bboard_type%7D');
            $request->setRequestMethod('DELETE');
            $request->setQuery(new http\QueryString(array(
              'alert_id' => 'SOME_ARRAY_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("DELETE", "/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D"

            querystring = {"alert_id":"SOME_ARRAY_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("DELETE", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url 'https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http DELETE 'https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method DELETE \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    get:
      description: Get a list of alerts. You can optionally limit the list by specifcying alerts by their alert_id. Returns 50 alerts by default.
      parameters:
        - description: 'Valid types are "loads", and "trucks".'
          enum:
            - loads
            - trucks
          in: path
          name: board_type
          required: true
          type: string
        - collectionFormat: multi
          description: only get a subset of alerts. As this is a get request this is specified as a query string parameter.
          in: query
          items:
            type: integer
          name: alert_id
          required: false
          type: array
        - description: 'Page number to fetch, defaults to 1'
          in: query
          name: page_number
          required: false
          type: integer
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: On success will return a list of alerts.
          schema:
            $ref: '#/definitions/alert_list'
      summary: STAGE=UNKNOWN Retrieve alerts.
      tags:
        - alerts
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/alerts/%7Bboard_type%7D',
              qs: 
               { alert_id: 'SOME_ARRAY_VALUE',
                 page_number: 'SOME_INTEGER_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D");

            req.query({
              "alert_id": "SOME_ARRAY_VALUE",
              "page_number": "SOME_INTEGER_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/alerts/%7Bboard_type%7D');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'alert_id' => 'SOME_ARRAY_VALUE',
              'page_number' => 'SOME_INTEGER_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/alerts/%7Bboard_type%7D');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'alert_id' => 'SOME_ARRAY_VALUE',
              'page_number' => 'SOME_INTEGER_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D"

            querystring = {"alert_id":"SOME_ARRAY_VALUE","page_number":"SOME_INTEGER_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    patch:
      description: Search objects are set at creation. You cannot modify them after the alert has been created.
      parameters:
        - description: 'Valid types are "loads", and "trucks".'
          enum:
            - loads
            - trucks
          in: path
          name: board_type
          required: true
          type: string
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/patch_alert_properties'
      responses:
        '204':
          description: Returned on response.
      summary: STAGE=UNK Update an alert.
      tags:
        - alerts
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/alerts/%7Bboard_type%7D");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/alerts/%7Bboard_type%7D")
              .patch(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.patch("https://api.directfreight.com/v1/alerts/%7Bboard_type%7D")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D",
              "method": "PATCH",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "alert_id": 0,
              "end_hour": 0,
              "expires_after": "<ADD EXAMPLE VALUE>",
              "list_type": "complete-list",
              "minute_frequency": 0,
              "send_type": "email",
              "start_hour": 0,
              "time_zone": 0
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("PATCH", "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PATCH",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/alerts/%7Bboard_type%7D",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ alert_id: 0,
              end_hour: 0,
              expires_after: '<ADD EXAMPLE VALUE>',
              list_type: 'complete-list',
              minute_frequency: 0,
              send_type: 'email',
              start_hour: 0,
              time_zone: 0 }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'PATCH',
              url: 'https://api.directfreight.com/v1/alerts/%7Bboard_type%7D',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { alert_id: 0,
                 end_hour: 0,
                 expires_after: '<ADD EXAMPLE VALUE>',
                 list_type: 'complete-list',
                 minute_frequency: 0,
                 send_type: 'email',
                 start_hour: 0,
                 time_zone: 0 },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("PATCH", "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "alert_id": 0,
              "end_hour": 0,
              "expires_after": "<ADD EXAMPLE VALUE>",
              "list_type": "complete-list",
              "minute_frequency": 0,
              "send_type": "email",
              "start_hour": 0,
              "time_zone": 0
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"alert_id": @0,
                                          @"end_hour": @0,
                                          @"expires_after": @"<ADD EXAMPLE VALUE>",
                                          @"list_type": @"complete-list",
                                          @"minute_frequency": @0,
                                          @"send_type": @"email",
                                          @"start_hour": @0,
                                          @"time_zone": @0 };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PATCH"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}" in

            Client.call ~headers ~body `PATCH uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("PATCH",
            "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"alert_id":0,"end_hour":0,"expires_after":"<ADD EXAMPLE VALUE>","list_type":"complete-list","minute_frequency":0,"send_type":"email","start_hour":0,"time_zone":0}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PATCH",
              CURLOPT_POSTFIELDS => "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('PATCH');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/alerts/%7Bboard_type%7D');
            $request->setMethod(HttpRequest::HTTP_METH_PATCH);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"alert_id":0,"end_hour":0,"expires_after":"<ADD EXAMPLE VALUE>","list_type":"complete-list","minute_frequency":0,"send_type":"email","start_hour":0,"time_zone":0}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"alert_id":0,"end_hour":0,"expires_after":"<ADD EXAMPLE VALUE>","list_type":"complete-list","minute_frequency":0,"send_type":"email","start_hour":0,"time_zone":0}');

            $request->setRequestUrl('https://api.directfreight.com/v1/alerts/%7Bboard_type%7D');
            $request->setRequestMethod('PATCH');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("PATCH", "/v1/alerts/%7Bboard_type%7D", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D"

            payload = "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("PATCH", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/alerts/%7Bboard_type%7D")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Patch.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request PATCH \
              --url https://api.directfreight.com/v1/alerts/%7Bboard_type%7D \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"alert_id":0,"end_hour":0,"expires_after":"<ADD EXAMPLE VALUE>","list_type":"complete-list","minute_frequency":0,"send_type":"email","start_hour":0,"time_zone":0}'
        - lang: Shell_httpie
          source: |-
            echo '{"alert_id":0,"end_hour":0,"expires_after":"<ADD EXAMPLE VALUE>","list_type":"complete-list","minute_frequency":0,"send_type":"email","start_hour":0,"time_zone":0}' |  \
              http PATCH https://api.directfreight.com/v1/alerts/%7Bboard_type%7D \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method PATCH \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"alert_id":0,"end_hour":0,"expires_after":"<ADD EXAMPLE VALUE>","list_type":"complete-list","minute_frequency":0,"send_type":"email","start_hour":0,"time_zone":0}' \
              --output-document \
              - https://api.directfreight.com/v1/alerts/%7Bboard_type%7D
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "alert_id": 0,
              "end_hour": 0,
              "expires_after": "<ADD EXAMPLE VALUE>",
              "list_type": "complete-list",
              "minute_frequency": 0,
              "send_type": "email",
              "start_hour": 0,
              "time_zone": 0
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "PATCH"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      description: 'This method will update or create an alert. The POST action with the same search parameters but different alert parameters will update the existing alert. The one caveaut to this is send_type. You can have 2 alerts with the same search parameters but different send_types. Any parameter that is defined here and is also defined on the boards POST action, follows the same rules.'
      parameters:
        - description: 'Valid types are "loads", and "trucks".'
          enum:
            - loads
            - trucks
          in: path
          name: board_type
          required: true
          type: string
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/alert'
      responses:
        '201':
          description: Object created check the headers for a reference URL
          schema:
            $ref: '#/definitions/create_status_alert'
      summary: STAGE=UNKNOWN Create an alert.
      tags:
        - alerts
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/alerts/%7Bboard_type%7D");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2020-01-01T14:30:24.000Z\\\",\\\"item_count\\\":25,\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"search\\\":{\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"return_only\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"sort_parameter\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"tier\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/alerts/%7Bboard_type%7D")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/alerts/%7Bboard_type%7D")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "alert_id": 0,
              "end_hour": 0,
              "expires_after": "2020-01-01T14:30:24.000Z",
              "item_count": 25,
              "list_type": "complete-list",
              "minute_frequency": 0,
              "page_number": 0,
              "return_count": false,
              "search": {
                "destination_city": "<ADD EXAMPLE VALUE>",
                "destination_radius": 0,
                "full_load": false,
                "origin_city": "<ADD EXAMPLE VALUE>",
                "origin_radius": 0,
                "return_only": "<ADD EXAMPLE VALUE>",
                "sort_parameter": "<ADD EXAMPLE VALUE>",
                "tier": "<ADD EXAMPLE VALUE>"
              },
              "send_type": "email",
              "start_hour": 0,
              "time_zone": 0
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/alerts/%7Bboard_type%7D",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ alert_id: 0,
              end_hour: 0,
              expires_after: '2020-01-01T14:30:24.000Z',
              item_count: 25,
              list_type: 'complete-list',
              minute_frequency: 0,
              page_number: 0,
              return_count: false,
              search: 
               { destination_city: '<ADD EXAMPLE VALUE>',
                 destination_radius: 0,
                 full_load: false,
                 origin_city: '<ADD EXAMPLE VALUE>',
                 origin_radius: 0,
                 return_only: '<ADD EXAMPLE VALUE>',
                 sort_parameter: '<ADD EXAMPLE VALUE>',
                 tier: '<ADD EXAMPLE VALUE>' },
              send_type: 'email',
              start_hour: 0,
              time_zone: 0 }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/alerts/%7Bboard_type%7D',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { alert_id: 0,
                 end_hour: 0,
                 expires_after: '2020-01-01T14:30:24.000Z',
                 item_count: 25,
                 list_type: 'complete-list',
                 minute_frequency: 0,
                 page_number: 0,
                 return_count: false,
                 search: 
                  { destination_city: '<ADD EXAMPLE VALUE>',
                    destination_radius: 0,
                    full_load: false,
                    origin_city: '<ADD EXAMPLE VALUE>',
                    origin_radius: 0,
                    return_only: '<ADD EXAMPLE VALUE>',
                    sort_parameter: '<ADD EXAMPLE VALUE>',
                    tier: '<ADD EXAMPLE VALUE>' },
                 send_type: 'email',
                 start_hour: 0,
                 time_zone: 0 },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "alert_id": 0,
              "end_hour": 0,
              "expires_after": "2020-01-01T14:30:24.000Z",
              "item_count": 25,
              "list_type": "complete-list",
              "minute_frequency": 0,
              "page_number": 0,
              "return_count": false,
              "search": {
                "destination_city": "<ADD EXAMPLE VALUE>",
                "destination_radius": 0,
                "full_load": false,
                "origin_city": "<ADD EXAMPLE VALUE>",
                "origin_radius": 0,
                "return_only": "<ADD EXAMPLE VALUE>",
                "sort_parameter": "<ADD EXAMPLE VALUE>",
                "tier": "<ADD EXAMPLE VALUE>"
              },
              "send_type": "email",
              "start_hour": 0,
              "time_zone": 0
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"alert_id": @0,
                                          @"end_hour": @0,
                                          @"expires_after": @"2020-01-01T14:30:24.000Z",
                                          @"item_count": @25,
                                          @"list_type": @"complete-list",
                                          @"minute_frequency": @0,
                                          @"page_number": @0,
                                          @"return_count": @NO,
                                          @"search": @{ @"destination_city": @"<ADD EXAMPLE VALUE>", @"destination_radius": @0, @"full_load": @NO, @"origin_city": @"<ADD EXAMPLE VALUE>", @"origin_radius": @0, @"return_only": @"<ADD EXAMPLE VALUE>", @"sort_parameter": @"<ADD EXAMPLE VALUE>", @"tier": @"<ADD EXAMPLE VALUE>" },
                                          @"send_type": @"email",
                                          @"start_hour": @0,
                                          @"time_zone": @0 };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"alert_id":0,"end_hour":0,"expires_after":"2020-01-01T14:30:24.000Z","item_count":25,"list_type":"complete-list","minute_frequency":0,"page_number":0,"return_count":false,"search":{"destination_city":"<ADD EXAMPLE VALUE>","destination_radius":0,"full_load":false,"origin_city":"<ADD EXAMPLE VALUE>","origin_radius":0,"return_only":"<ADD EXAMPLE VALUE>","sort_parameter":"<ADD EXAMPLE VALUE>","tier":"<ADD EXAMPLE VALUE>"},"send_type":"email","start_hour":0,"time_zone":0}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/alerts/%7Bboard_type%7D');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"alert_id":0,"end_hour":0,"expires_after":"2020-01-01T14:30:24.000Z","item_count":25,"list_type":"complete-list","minute_frequency":0,"page_number":0,"return_count":false,"search":{"destination_city":"<ADD EXAMPLE VALUE>","destination_radius":0,"full_load":false,"origin_city":"<ADD EXAMPLE VALUE>","origin_radius":0,"return_only":"<ADD EXAMPLE VALUE>","sort_parameter":"<ADD EXAMPLE VALUE>","tier":"<ADD EXAMPLE VALUE>"},"send_type":"email","start_hour":0,"time_zone":0}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"alert_id":0,"end_hour":0,"expires_after":"2020-01-01T14:30:24.000Z","item_count":25,"list_type":"complete-list","minute_frequency":0,"page_number":0,"return_count":false,"search":{"destination_city":"<ADD EXAMPLE VALUE>","destination_radius":0,"full_load":false,"origin_city":"<ADD EXAMPLE VALUE>","origin_radius":0,"return_only":"<ADD EXAMPLE VALUE>","sort_parameter":"<ADD EXAMPLE VALUE>","tier":"<ADD EXAMPLE VALUE>"},"send_type":"email","start_hour":0,"time_zone":0}');

            $request->setRequestUrl('https://api.directfreight.com/v1/alerts/%7Bboard_type%7D');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/alerts/%7Bboard_type%7D", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D"

            payload = "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/alerts/%7Bboard_type%7D")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/alerts/%7Bboard_type%7D \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"alert_id":0,"end_hour":0,"expires_after":"2020-01-01T14:30:24.000Z","item_count":25,"list_type":"complete-list","minute_frequency":0,"page_number":0,"return_count":false,"search":{"destination_city":"<ADD EXAMPLE VALUE>","destination_radius":0,"full_load":false,"origin_city":"<ADD EXAMPLE VALUE>","origin_radius":0,"return_only":"<ADD EXAMPLE VALUE>","sort_parameter":"<ADD EXAMPLE VALUE>","tier":"<ADD EXAMPLE VALUE>"},"send_type":"email","start_hour":0,"time_zone":0}'
        - lang: Shell_httpie
          source: |-
            echo '{"alert_id":0,"end_hour":0,"expires_after":"2020-01-01T14:30:24.000Z","item_count":25,"list_type":"complete-list","minute_frequency":0,"page_number":0,"return_count":false,"search":{"destination_city":"<ADD EXAMPLE VALUE>","destination_radius":0,"full_load":false,"origin_city":"<ADD EXAMPLE VALUE>","origin_radius":0,"return_only":"<ADD EXAMPLE VALUE>","sort_parameter":"<ADD EXAMPLE VALUE>","tier":"<ADD EXAMPLE VALUE>"},"send_type":"email","start_hour":0,"time_zone":0}' |  \
              http POST https://api.directfreight.com/v1/alerts/%7Bboard_type%7D \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"alert_id":0,"end_hour":0,"expires_after":"2020-01-01T14:30:24.000Z","item_count":25,"list_type":"complete-list","minute_frequency":0,"page_number":0,"return_count":false,"search":{"destination_city":"<ADD EXAMPLE VALUE>","destination_radius":0,"full_load":false,"origin_city":"<ADD EXAMPLE VALUE>","origin_radius":0,"return_only":"<ADD EXAMPLE VALUE>","sort_parameter":"<ADD EXAMPLE VALUE>","tier":"<ADD EXAMPLE VALUE>"},"send_type":"email","start_hour":0,"time_zone":0}' \
              --output-document \
              - https://api.directfreight.com/v1/alerts/%7Bboard_type%7D
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "alert_id": 0,
              "end_hour": 0,
              "expires_after": "2020-01-01T14:30:24.000Z",
              "item_count": 25,
              "list_type": "complete-list",
              "minute_frequency": 0,
              "page_number": 0,
              "return_count": false,
              "search": [
                "destination_city": "<ADD EXAMPLE VALUE>",
                "destination_radius": 0,
                "full_load": false,
                "origin_city": "<ADD EXAMPLE VALUE>",
                "origin_radius": 0,
                "return_only": "<ADD EXAMPLE VALUE>",
                "sort_parameter": "<ADD EXAMPLE VALUE>",
                "tier": "<ADD EXAMPLE VALUE>"
              ],
              "send_type": "email",
              "start_hour": 0,
              "time_zone": 0
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: ALERTS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/alerts/%7Bboard_type%7D")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/alerts/%7Bboard_type%7D")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/alerts/%7Bboard_type%7D",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/alerts/%7Bboard_type%7D',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/alerts/%7Bboard_type%7D');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/alerts/%7Bboard_type%7D');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/alerts/%7Bboard_type%7D", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/alerts/%7Bboard_type%7D")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/alerts/%7Bboard_type%7D \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/alerts/%7Bboard_type%7D \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/alerts/%7Bboard_type%7D
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/alerts/%7Bboard_type%7D")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  '/alerts/search/{board_type}':
    post:
      description: 'This method will search a users alert. It accepts the exact same structure as the POST method for /alerts/. Any parameter that is defined here and is also defined on the boards POST action, follows the same rules.'
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/alert'
        - in: path
          name: board_type
          required: true
          type: string
      responses:
        '200':
          description: 'Alert found, returns the alert_id that corresponds to the search.'
          schema:
            $ref: '#/definitions/alert_search_response'
        '404':
          description: Alert not found using specified parameters.
      summary: STAGE=UNKNOWN Create an alert.
      tags:
        - alerts
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2020-01-01T14:30:24.000Z\\\",\\\"item_count\\\":25,\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"search\\\":{\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"return_only\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"sort_parameter\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"tier\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "alert_id": 0,
              "end_hour": 0,
              "expires_after": "2020-01-01T14:30:24.000Z",
              "item_count": 25,
              "list_type": "complete-list",
              "minute_frequency": 0,
              "page_number": 0,
              "return_count": false,
              "search": {
                "destination_city": "<ADD EXAMPLE VALUE>",
                "destination_radius": 0,
                "full_load": false,
                "origin_city": "<ADD EXAMPLE VALUE>",
                "origin_radius": 0,
                "return_only": "<ADD EXAMPLE VALUE>",
                "sort_parameter": "<ADD EXAMPLE VALUE>",
                "tier": "<ADD EXAMPLE VALUE>"
              },
              "send_type": "email",
              "start_hour": 0,
              "time_zone": 0
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/alerts/search/%7Bboard_type%7D",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ alert_id: 0,
              end_hour: 0,
              expires_after: '2020-01-01T14:30:24.000Z',
              item_count: 25,
              list_type: 'complete-list',
              minute_frequency: 0,
              page_number: 0,
              return_count: false,
              search: 
               { destination_city: '<ADD EXAMPLE VALUE>',
                 destination_radius: 0,
                 full_load: false,
                 origin_city: '<ADD EXAMPLE VALUE>',
                 origin_radius: 0,
                 return_only: '<ADD EXAMPLE VALUE>',
                 sort_parameter: '<ADD EXAMPLE VALUE>',
                 tier: '<ADD EXAMPLE VALUE>' },
              send_type: 'email',
              start_hour: 0,
              time_zone: 0 }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { alert_id: 0,
                 end_hour: 0,
                 expires_after: '2020-01-01T14:30:24.000Z',
                 item_count: 25,
                 list_type: 'complete-list',
                 minute_frequency: 0,
                 page_number: 0,
                 return_count: false,
                 search: 
                  { destination_city: '<ADD EXAMPLE VALUE>',
                    destination_radius: 0,
                    full_load: false,
                    origin_city: '<ADD EXAMPLE VALUE>',
                    origin_radius: 0,
                    return_only: '<ADD EXAMPLE VALUE>',
                    sort_parameter: '<ADD EXAMPLE VALUE>',
                    tier: '<ADD EXAMPLE VALUE>' },
                 send_type: 'email',
                 start_hour: 0,
                 time_zone: 0 },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "alert_id": 0,
              "end_hour": 0,
              "expires_after": "2020-01-01T14:30:24.000Z",
              "item_count": 25,
              "list_type": "complete-list",
              "minute_frequency": 0,
              "page_number": 0,
              "return_count": false,
              "search": {
                "destination_city": "<ADD EXAMPLE VALUE>",
                "destination_radius": 0,
                "full_load": false,
                "origin_city": "<ADD EXAMPLE VALUE>",
                "origin_radius": 0,
                "return_only": "<ADD EXAMPLE VALUE>",
                "sort_parameter": "<ADD EXAMPLE VALUE>",
                "tier": "<ADD EXAMPLE VALUE>"
              },
              "send_type": "email",
              "start_hour": 0,
              "time_zone": 0
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"alert_id": @0,
                                          @"end_hour": @0,
                                          @"expires_after": @"2020-01-01T14:30:24.000Z",
                                          @"item_count": @25,
                                          @"list_type": @"complete-list",
                                          @"minute_frequency": @0,
                                          @"page_number": @0,
                                          @"return_count": @NO,
                                          @"search": @{ @"destination_city": @"<ADD EXAMPLE VALUE>", @"destination_radius": @0, @"full_load": @NO, @"origin_city": @"<ADD EXAMPLE VALUE>", @"origin_radius": @0, @"return_only": @"<ADD EXAMPLE VALUE>", @"sort_parameter": @"<ADD EXAMPLE VALUE>", @"tier": @"<ADD EXAMPLE VALUE>" },
                                          @"send_type": @"email",
                                          @"start_hour": @0,
                                          @"time_zone": @0 };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"alert_id":0,"end_hour":0,"expires_after":"2020-01-01T14:30:24.000Z","item_count":25,"list_type":"complete-list","minute_frequency":0,"page_number":0,"return_count":false,"search":{"destination_city":"<ADD EXAMPLE VALUE>","destination_radius":0,"full_load":false,"origin_city":"<ADD EXAMPLE VALUE>","origin_radius":0,"return_only":"<ADD EXAMPLE VALUE>","sort_parameter":"<ADD EXAMPLE VALUE>","tier":"<ADD EXAMPLE VALUE>"},"send_type":"email","start_hour":0,"time_zone":0}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"alert_id":0,"end_hour":0,"expires_after":"2020-01-01T14:30:24.000Z","item_count":25,"list_type":"complete-list","minute_frequency":0,"page_number":0,"return_count":false,"search":{"destination_city":"<ADD EXAMPLE VALUE>","destination_radius":0,"full_load":false,"origin_city":"<ADD EXAMPLE VALUE>","origin_radius":0,"return_only":"<ADD EXAMPLE VALUE>","sort_parameter":"<ADD EXAMPLE VALUE>","tier":"<ADD EXAMPLE VALUE>"},"send_type":"email","start_hour":0,"time_zone":0}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"alert_id":0,"end_hour":0,"expires_after":"2020-01-01T14:30:24.000Z","item_count":25,"list_type":"complete-list","minute_frequency":0,"page_number":0,"return_count":false,"search":{"destination_city":"<ADD EXAMPLE VALUE>","destination_radius":0,"full_load":false,"origin_city":"<ADD EXAMPLE VALUE>","origin_radius":0,"return_only":"<ADD EXAMPLE VALUE>","sort_parameter":"<ADD EXAMPLE VALUE>","tier":"<ADD EXAMPLE VALUE>"},"send_type":"email","start_hour":0,"time_zone":0}');

            $request->setRequestUrl('https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/alerts/search/%7Bboard_type%7D", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D"

            payload = "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"alert_id":0,"end_hour":0,"expires_after":"2020-01-01T14:30:24.000Z","item_count":25,"list_type":"complete-list","minute_frequency":0,"page_number":0,"return_count":false,"search":{"destination_city":"<ADD EXAMPLE VALUE>","destination_radius":0,"full_load":false,"origin_city":"<ADD EXAMPLE VALUE>","origin_radius":0,"return_only":"<ADD EXAMPLE VALUE>","sort_parameter":"<ADD EXAMPLE VALUE>","tier":"<ADD EXAMPLE VALUE>"},"send_type":"email","start_hour":0,"time_zone":0}'
        - lang: Shell_httpie
          source: |-
            echo '{"alert_id":0,"end_hour":0,"expires_after":"2020-01-01T14:30:24.000Z","item_count":25,"list_type":"complete-list","minute_frequency":0,"page_number":0,"return_count":false,"search":{"destination_city":"<ADD EXAMPLE VALUE>","destination_radius":0,"full_load":false,"origin_city":"<ADD EXAMPLE VALUE>","origin_radius":0,"return_only":"<ADD EXAMPLE VALUE>","sort_parameter":"<ADD EXAMPLE VALUE>","tier":"<ADD EXAMPLE VALUE>"},"send_type":"email","start_hour":0,"time_zone":0}' |  \
              http POST https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"alert_id":0,"end_hour":0,"expires_after":"2020-01-01T14:30:24.000Z","item_count":25,"list_type":"complete-list","minute_frequency":0,"page_number":0,"return_count":false,"search":{"destination_city":"<ADD EXAMPLE VALUE>","destination_radius":0,"full_load":false,"origin_city":"<ADD EXAMPLE VALUE>","origin_radius":0,"return_only":"<ADD EXAMPLE VALUE>","sort_parameter":"<ADD EXAMPLE VALUE>","tier":"<ADD EXAMPLE VALUE>"},"send_type":"email","start_hour":0,"time_zone":0}' \
              --output-document \
              - https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "alert_id": 0,
              "end_hour": 0,
              "expires_after": "2020-01-01T14:30:24.000Z",
              "item_count": 25,
              "list_type": "complete-list",
              "minute_frequency": 0,
              "page_number": 0,
              "return_count": false,
              "search": [
                "destination_city": "<ADD EXAMPLE VALUE>",
                "destination_radius": 0,
                "full_load": false,
                "origin_city": "<ADD EXAMPLE VALUE>",
                "origin_radius": 0,
                "return_only": "<ADD EXAMPLE VALUE>",
                "sort_parameter": "<ADD EXAMPLE VALUE>",
                "tier": "<ADD EXAMPLE VALUE>"
              ],
              "send_type": "email",
              "start_hour": 0,
              "time_zone": 0
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: ALERTS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/alerts/search/%7Bboard_type%7D",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/alerts/search/%7Bboard_type%7D", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  '/boards/{board_type}':
    get:
      description: Retrieves a single load
      parameters:
        - description: Defines the type of board requested.
          enum:
            - loads
            - trucks
          in: path
          name: board_type
          required: true
          type: string
          x-example: loads
        - description: the entry_id associated with the data you want to get.
          in: query
          name: entry_id
          required: true
          type: string
          x-example: 0123456789012345678901234567890123
        - description: 'The page that is requesting the information.  This is used to determine when to retrieve real time information from the shipper or broker.  Example:  requesting_page="book-now" will return real time information for certain partners.  Stage=Private'
          in: query
          name: requesting_page
          required: false
          type: string
        - in: header
          name: end-user-token
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/board_response_item'
      summary: Retrieve single load
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D',
              qs: 
               { entry_id: 'SOME_STRING_VALUE',
                 requesting_page: 'SOME_STRING_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/boards/%7Bboard_type%7D");

            req.query({
              "entry_id": "SOME_STRING_VALUE",
              "requesting_page": "SOME_STRING_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/%7Bboard_type%7D');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'entry_id' => 'SOME_STRING_VALUE',
              'requesting_page' => 'SOME_STRING_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/%7Bboard_type%7D');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'entry_id' => 'SOME_STRING_VALUE',
              'requesting_page' => 'SOME_STRING_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/%7Bboard_type%7D"

            querystring = {"entry_id":"SOME_STRING_VALUE","requesting_page":"SOME_STRING_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      description: This is the primary search method for loads and trucks. Please specifify at least an origin or destination.  The origin or destination may be state only.
      parameters:
        - description: Defines the type of board requested.
          enum:
            - loads
            - trucks
          in: path
          name: board_type
          required: true
          type: string
          x-example: loads
        - default: 01234567890abc
          in: header
          name: end-user-token
          required: false
          type: string
          x-example: 01234567890abc
        - default: 0
          description: 'If this optional header is sent and set to a positive value, the API will not update the users last_date, this option is used internally when sending email alerts. STAGE=Private'
          in: header
          name: x-dont-update-user-last-date
          required: false
          type: number
          x-example: 1
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/board_request'
      responses:
        '200':
          description: Returns a list matching your search.
          schema:
            $ref: '#/definitions/board_response'
        '422':
          $ref: '#/responses/error_422'
      summary: Retrieve a board
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/%7Bboard_type%7D");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "x-dont-update-user-last-date: NO DEFAULT");
            headers = curl_slist_append(headers, "end-user-token: 01234567890abc");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"alert_id\":1155,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"google_recaptcha_score\":0,\"item_count\":25,\"max_age\":300,\"max_length\":300,\"max_pay_rate\":300,\"max_weight\":40000,\"md5\":\"850FBE52A5345119FD9C79FDE4E27308\",\"min_age\":50,\"min_length\":15,\"min_pay_rate\":50,\"min_weight\":1000,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"partner\":\"<ADD EXAMPLE VALUE>\",\"return_count\":false,\"return_only\":\"unviewed\",\"return_web_url\":false,\"sort_direction\":\"asc\",\"sort_parameter\":\"age\",\"tier\":\"all\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/%7Bboard_type%7D");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("x-dont-update-user-last-date", "NO DEFAULT");
            request.AddHeader("end-user-token", "01234567890abc");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"alert_id\":1155,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"google_recaptcha_score\":0,\"item_count\":25,\"max_age\":300,\"max_length\":300,\"max_pay_rate\":300,\"max_weight\":40000,\"md5\":\"850FBE52A5345119FD9C79FDE4E27308\",\"min_age\":50,\"min_length\":15,\"min_pay_rate\":50,\"min_weight\":1000,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"partner\":\"<ADD EXAMPLE VALUE>\",\"return_count\":false,\"return_only\":\"unviewed\",\"return_web_url\":false,\"sort_direction\":\"asc\",\"sort_parameter\":\"age\",\"tier\":\"all\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"alert_id\\\":1155,\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"chicago\\\",\\\"destination_radius\\\":100,\\\"destination_state\\\":[\\\"IL\\\",\\\"HI\\\",\\\"NY\\\",\\\"KS\\\",\\\"TX\\\",\\\"MO\\\",\\\"AL\\\"],\\\"full_load\\\":true,\\\"google_recaptcha_score\\\":0,\\\"item_count\\\":25,\\\"max_age\\\":300,\\\"max_length\\\":300,\\\"max_pay_rate\\\":300,\\\"max_weight\\\":40000,\\\"md5\\\":\\\"850FBE52A5345119FD9C79FDE4E27308\\\",\\\"min_age\\\":50,\\\"min_length\\\":15,\\\"min_pay_rate\\\":50,\\\"min_weight\\\":1000,\\\"origin_city\\\":\\\"Kansas City\\\",\\\"origin_radius\\\":150,\\\"origin_state\\\":[\\\"MO\\\",\\\"IL\\\",\\\"TX\\\",\\\"CA\\\"],\\\"page_number\\\":0,\\\"partner\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"return_count\\\":false,\\\"return_only\\\":\\\"unviewed\\\",\\\"return_web_url\\\":false,\\\"sort_direction\\\":\\\"asc\\\",\\\"sort_parameter\\\":\\\"age\\\",\\\"tier\\\":\\\"all\\\",\\\"trailer_type\\\":[\\\"F\\\",\\\"F+T\\\",\\\"F+S\\\",\\\"V\\\"]}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"01234567890abc\")\n\treq.Header.Add(\"x-dont-update-user-last-date\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"alert_id\":1155,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"google_recaptcha_score\":0,\"item_count\":25,\"max_age\":300,\"max_length\":300,\"max_pay_rate\":300,\"max_weight\":40000,\"md5\":\"850FBE52A5345119FD9C79FDE4E27308\",\"min_age\":50,\"min_length\":15,\"min_pay_rate\":50,\"min_weight\":1000,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"partner\":\"<ADD EXAMPLE VALUE>\",\"return_count\":false,\"return_only\":\"unviewed\",\"return_web_url\":false,\"sort_direction\":\"asc\",\"sort_parameter\":\"age\",\"tier\":\"all\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/%7Bboard_type%7D")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "01234567890abc")
              .addHeader("x-dont-update-user-last-date", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/boards/%7Bboard_type%7D")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "01234567890abc")
              .header("x-dont-update-user-last-date", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"alert_id\":1155,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"google_recaptcha_score\":0,\"item_count\":25,\"max_age\":300,\"max_length\":300,\"max_pay_rate\":300,\"max_weight\":40000,\"md5\":\"850FBE52A5345119FD9C79FDE4E27308\",\"min_age\":50,\"min_length\":15,\"min_pay_rate\":50,\"min_weight\":1000,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"partner\":\"<ADD EXAMPLE VALUE>\",\"return_count\":false,\"return_only\":\"unviewed\",\"return_web_url\":false,\"sort_direction\":\"asc\",\"sort_parameter\":\"age\",\"tier\":\"all\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/%7Bboard_type%7D",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "01234567890abc",
                "x-dont-update-user-last-date": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"alert_id\":1155,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"google_recaptcha_score\":0,\"item_count\":25,\"max_age\":300,\"max_length\":300,\"max_pay_rate\":300,\"max_weight\":40000,\"md5\":\"850FBE52A5345119FD9C79FDE4E27308\",\"min_age\":50,\"min_length\":15,\"min_pay_rate\":50,\"min_weight\":1000,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"partner\":\"<ADD EXAMPLE VALUE>\",\"return_count\":false,\"return_only\":\"unviewed\",\"return_web_url\":false,\"sort_direction\":\"asc\",\"sort_parameter\":\"age\",\"tier\":\"all\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "alert_id": 1155,
              "company_name": "<ADD EXAMPLE VALUE>",
              "destination_city": "chicago",
              "destination_radius": 100,
              "destination_state": [
                "IL",
                "HI",
                "NY",
                "KS",
                "TX",
                "MO",
                "AL"
              ],
              "full_load": true,
              "google_recaptcha_score": 0,
              "item_count": 25,
              "max_age": 300,
              "max_length": 300,
              "max_pay_rate": 300,
              "max_weight": 40000,
              "md5": "850FBE52A5345119FD9C79FDE4E27308",
              "min_age": 50,
              "min_length": 15,
              "min_pay_rate": 50,
              "min_weight": 1000,
              "origin_city": "Kansas City",
              "origin_radius": 150,
              "origin_state": [
                "MO",
                "IL",
                "TX",
                "CA"
              ],
              "page_number": 0,
              "partner": "<ADD EXAMPLE VALUE>",
              "return_count": false,
              "return_only": "unviewed",
              "return_web_url": false,
              "sort_direction": "asc",
              "sort_parameter": "age",
              "tier": "all",
              "trailer_type": [
                "F",
                "F+T",
                "F+S",
                "V"
              ]
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/boards/%7Bboard_type%7D");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "01234567890abc");
            xhr.setRequestHeader("x-dont-update-user-last-date", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/%7Bboard_type%7D",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "01234567890abc",
                "x-dont-update-user-last-date": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ alert_id: 1155,
              company_name: '<ADD EXAMPLE VALUE>',
              destination_city: 'chicago',
              destination_radius: 100,
              destination_state: [ 'IL', 'HI', 'NY', 'KS', 'TX', 'MO', 'AL' ],
              full_load: true,
              google_recaptcha_score: 0,
              item_count: 25,
              max_age: 300,
              max_length: 300,
              max_pay_rate: 300,
              max_weight: 40000,
              md5: '850FBE52A5345119FD9C79FDE4E27308',
              min_age: 50,
              min_length: 15,
              min_pay_rate: 50,
              min_weight: 1000,
              origin_city: 'Kansas City',
              origin_radius: 150,
              origin_state: [ 'MO', 'IL', 'TX', 'CA' ],
              page_number: 0,
              partner: '<ADD EXAMPLE VALUE>',
              return_count: false,
              return_only: 'unviewed',
              return_web_url: false,
              sort_direction: 'asc',
              sort_parameter: 'age',
              tier: 'all',
              trailer_type: [ 'F', 'F+T', 'F+S', 'V' ] }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'x-dont-update-user-last-date': 'NO DEFAULT',
                 'end-user-token': '01234567890abc',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { alert_id: 1155,
                 company_name: '<ADD EXAMPLE VALUE>',
                 destination_city: 'chicago',
                 destination_radius: 100,
                 destination_state: [ 'IL', 'HI', 'NY', 'KS', 'TX', 'MO', 'AL' ],
                 full_load: true,
                 google_recaptcha_score: 0,
                 item_count: 25,
                 max_age: 300,
                 max_length: 300,
                 max_pay_rate: 300,
                 max_weight: 40000,
                 md5: '850FBE52A5345119FD9C79FDE4E27308',
                 min_age: 50,
                 min_length: 15,
                 min_pay_rate: 50,
                 min_weight: 1000,
                 origin_city: 'Kansas City',
                 origin_radius: 150,
                 origin_state: [ 'MO', 'IL', 'TX', 'CA' ],
                 page_number: 0,
                 partner: '<ADD EXAMPLE VALUE>',
                 return_count: false,
                 return_only: 'unviewed',
                 return_web_url: false,
                 sort_direction: 'asc',
                 sort_parameter: 'age',
                 tier: 'all',
                 trailer_type: [ 'F', 'F+T', 'F+S', 'V' ] },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/boards/%7Bboard_type%7D");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "x-dont-update-user-last-date": "NO DEFAULT",
              "end-user-token": "01234567890abc",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "alert_id": 1155,
              "company_name": "<ADD EXAMPLE VALUE>",
              "destination_city": "chicago",
              "destination_radius": 100,
              "destination_state": [
                "IL",
                "HI",
                "NY",
                "KS",
                "TX",
                "MO",
                "AL"
              ],
              "full_load": true,
              "google_recaptcha_score": 0,
              "item_count": 25,
              "max_age": 300,
              "max_length": 300,
              "max_pay_rate": 300,
              "max_weight": 40000,
              "md5": "850FBE52A5345119FD9C79FDE4E27308",
              "min_age": 50,
              "min_length": 15,
              "min_pay_rate": 50,
              "min_weight": 1000,
              "origin_city": "Kansas City",
              "origin_radius": 150,
              "origin_state": [
                "MO",
                "IL",
                "TX",
                "CA"
              ],
              "page_number": 0,
              "partner": "<ADD EXAMPLE VALUE>",
              "return_count": false,
              "return_only": "unviewed",
              "return_web_url": false,
              "sort_direction": "asc",
              "sort_parameter": "age",
              "tier": "all",
              "trailer_type": [
                "F",
                "F+T",
                "F+S",
                "V"
              ]
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"01234567890abc",
                                       @"x-dont-update-user-last-date": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"alert_id": @1155,
                                          @"company_name": @"<ADD EXAMPLE VALUE>",
                                          @"destination_city": @"chicago",
                                          @"destination_radius": @100,
                                          @"destination_state": @[ @"IL", @"HI", @"NY", @"KS", @"TX", @"MO", @"AL" ],
                                          @"full_load": @YES,
                                          @"google_recaptcha_score": @0,
                                          @"item_count": @25,
                                          @"max_age": @300,
                                          @"max_length": @300,
                                          @"max_pay_rate": @300,
                                          @"max_weight": @40000,
                                          @"md5": @"850FBE52A5345119FD9C79FDE4E27308",
                                          @"min_age": @50,
                                          @"min_length": @15,
                                          @"min_pay_rate": @50,
                                          @"min_weight": @1000,
                                          @"origin_city": @"Kansas City",
                                          @"origin_radius": @150,
                                          @"origin_state": @[ @"MO", @"IL", @"TX", @"CA" ],
                                          @"page_number": @0,
                                          @"partner": @"<ADD EXAMPLE VALUE>",
                                          @"return_count": @NO,
                                          @"return_only": @"unviewed",
                                          @"return_web_url": @NO,
                                          @"sort_direction": @"asc",
                                          @"sort_parameter": @"age",
                                          @"tier": @"all",
                                          @"trailer_type": @[ @"F", @"F+T", @"F+S", @"V" ] };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/%7Bboard_type%7D"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/%7Bboard_type%7D" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "01234567890abc");
              ("x-dont-update-user-last-date", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"alert_id\":1155,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"google_recaptcha_score\":0,\"item_count\":25,\"max_age\":300,\"max_length\":300,\"max_pay_rate\":300,\"max_weight\":40000,\"md5\":\"850FBE52A5345119FD9C79FDE4E27308\",\"min_age\":50,\"min_length\":15,\"min_pay_rate\":50,\"min_weight\":1000,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"partner\":\"<ADD EXAMPLE VALUE>\",\"return_count\":false,\"return_only\":\"unviewed\",\"return_web_url\":false,\"sort_direction\":\"asc\",\"sort_parameter\":\"age\",\"tier\":\"all\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/boards/%7Bboard_type%7D");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "01234567890abc" );
            $request->header( "x-dont-update-user-last-date" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"alert_id":1155,"company_name":"<ADD EXAMPLE VALUE>","destination_city":"chicago","destination_radius":100,"destination_state":["IL","HI","NY","KS","TX","MO","AL"],"full_load":true,"google_recaptcha_score":0,"item_count":25,"max_age":300,"max_length":300,"max_pay_rate":300,"max_weight":40000,"md5":"850FBE52A5345119FD9C79FDE4E27308","min_age":50,"min_length":15,"min_pay_rate":50,"min_weight":1000,"origin_city":"Kansas City","origin_radius":150,"origin_state":["MO","IL","TX","CA"],"page_number":0,"partner":"<ADD EXAMPLE VALUE>","return_count":false,"return_only":"unviewed","return_web_url":false,"sort_direction":"asc","sort_parameter":"age","tier":"all","trailer_type":["F","F+T","F+S","V"]}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/%7Bboard_type%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"alert_id\":1155,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"google_recaptcha_score\":0,\"item_count\":25,\"max_age\":300,\"max_length\":300,\"max_pay_rate\":300,\"max_weight\":40000,\"md5\":\"850FBE52A5345119FD9C79FDE4E27308\",\"min_age\":50,\"min_length\":15,\"min_pay_rate\":50,\"min_weight\":1000,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"partner\":\"<ADD EXAMPLE VALUE>\",\"return_count\":false,\"return_only\":\"unviewed\",\"return_web_url\":false,\"sort_direction\":\"asc\",\"sort_parameter\":\"age\",\"tier\":\"all\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: 01234567890abc",
                "x-dont-update-user-last-date: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/%7Bboard_type%7D');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'x-dont-update-user-last-date' => 'NO DEFAULT',
              'end-user-token' => '01234567890abc',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"alert_id":1155,"company_name":"<ADD EXAMPLE VALUE>","destination_city":"chicago","destination_radius":100,"destination_state":["IL","HI","NY","KS","TX","MO","AL"],"full_load":true,"google_recaptcha_score":0,"item_count":25,"max_age":300,"max_length":300,"max_pay_rate":300,"max_weight":40000,"md5":"850FBE52A5345119FD9C79FDE4E27308","min_age":50,"min_length":15,"min_pay_rate":50,"min_weight":1000,"origin_city":"Kansas City","origin_radius":150,"origin_state":["MO","IL","TX","CA"],"page_number":0,"partner":"<ADD EXAMPLE VALUE>","return_count":false,"return_only":"unviewed","return_web_url":false,"sort_direction":"asc","sort_parameter":"age","tier":"all","trailer_type":["F","F+T","F+S","V"]}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"alert_id":1155,"company_name":"<ADD EXAMPLE VALUE>","destination_city":"chicago","destination_radius":100,"destination_state":["IL","HI","NY","KS","TX","MO","AL"],"full_load":true,"google_recaptcha_score":0,"item_count":25,"max_age":300,"max_length":300,"max_pay_rate":300,"max_weight":40000,"md5":"850FBE52A5345119FD9C79FDE4E27308","min_age":50,"min_length":15,"min_pay_rate":50,"min_weight":1000,"origin_city":"Kansas City","origin_radius":150,"origin_state":["MO","IL","TX","CA"],"page_number":0,"partner":"<ADD EXAMPLE VALUE>","return_count":false,"return_only":"unviewed","return_web_url":false,"sort_direction":"asc","sort_parameter":"age","tier":"all","trailer_type":["F","F+T","F+S","V"]}');

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/%7Bboard_type%7D');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'x-dont-update-user-last-date' => 'NO DEFAULT',
              'end-user-token' => '01234567890abc',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"alert_id\":1155,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"google_recaptcha_score\":0,\"item_count\":25,\"max_age\":300,\"max_length\":300,\"max_pay_rate\":300,\"max_weight\":40000,\"md5\":\"850FBE52A5345119FD9C79FDE4E27308\",\"min_age\":50,\"min_length\":15,\"min_pay_rate\":50,\"min_weight\":1000,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"partner\":\"<ADD EXAMPLE VALUE>\",\"return_count\":false,\"return_only\":\"unviewed\",\"return_web_url\":false,\"sort_direction\":\"asc\",\"sort_parameter\":\"age\",\"tier\":\"all\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "01234567890abc",
                'x-dont-update-user-last-date': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/boards/%7Bboard_type%7D", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/%7Bboard_type%7D"

            payload = "{\"alert_id\":1155,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"google_recaptcha_score\":0,\"item_count\":25,\"max_age\":300,\"max_length\":300,\"max_pay_rate\":300,\"max_weight\":40000,\"md5\":\"850FBE52A5345119FD9C79FDE4E27308\",\"min_age\":50,\"min_length\":15,\"min_pay_rate\":50,\"min_weight\":1000,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"partner\":\"<ADD EXAMPLE VALUE>\",\"return_count\":false,\"return_only\":\"unviewed\",\"return_web_url\":false,\"sort_direction\":\"asc\",\"sort_parameter\":\"age\",\"tier\":\"all\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "01234567890abc",
                'x-dont-update-user-last-date': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/%7Bboard_type%7D")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = '01234567890abc'
            request["x-dont-update-user-last-date"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"alert_id\":1155,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"google_recaptcha_score\":0,\"item_count\":25,\"max_age\":300,\"max_length\":300,\"max_pay_rate\":300,\"max_weight\":40000,\"md5\":\"850FBE52A5345119FD9C79FDE4E27308\",\"min_age\":50,\"min_length\":15,\"min_pay_rate\":50,\"min_weight\":1000,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"partner\":\"<ADD EXAMPLE VALUE>\",\"return_count\":false,\"return_only\":\"unviewed\",\"return_web_url\":false,\"sort_direction\":\"asc\",\"sort_parameter\":\"age\",\"tier\":\"all\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/boards/%7Bboard_type%7D \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: 01234567890abc' \
              --header 'x-dont-update-user-last-date: NO DEFAULT' \
              --data '{"alert_id":1155,"company_name":"<ADD EXAMPLE VALUE>","destination_city":"chicago","destination_radius":100,"destination_state":["IL","HI","NY","KS","TX","MO","AL"],"full_load":true,"google_recaptcha_score":0,"item_count":25,"max_age":300,"max_length":300,"max_pay_rate":300,"max_weight":40000,"md5":"850FBE52A5345119FD9C79FDE4E27308","min_age":50,"min_length":15,"min_pay_rate":50,"min_weight":1000,"origin_city":"Kansas City","origin_radius":150,"origin_state":["MO","IL","TX","CA"],"page_number":0,"partner":"<ADD EXAMPLE VALUE>","return_count":false,"return_only":"unviewed","return_web_url":false,"sort_direction":"asc","sort_parameter":"age","tier":"all","trailer_type":["F","F+T","F+S","V"]}'
        - lang: Shell_httpie
          source: |-
            echo '{"alert_id":1155,"company_name":"<ADD EXAMPLE VALUE>","destination_city":"chicago","destination_radius":100,"destination_state":["IL","HI","NY","KS","TX","MO","AL"],"full_load":true,"google_recaptcha_score":0,"item_count":25,"max_age":300,"max_length":300,"max_pay_rate":300,"max_weight":40000,"md5":"850FBE52A5345119FD9C79FDE4E27308","min_age":50,"min_length":15,"min_pay_rate":50,"min_weight":1000,"origin_city":"Kansas City","origin_radius":150,"origin_state":["MO","IL","TX","CA"],"page_number":0,"partner":"<ADD EXAMPLE VALUE>","return_count":false,"return_only":"unviewed","return_web_url":false,"sort_direction":"asc","sort_parameter":"age","tier":"all","trailer_type":["F","F+T","F+S","V"]}' |  \
              http POST https://api.directfreight.com/v1/boards/%7Bboard_type%7D \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:01234567890abc \
              x-dont-update-user-last-date:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: 01234567890abc' \
              --header 'x-dont-update-user-last-date: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"alert_id":1155,"company_name":"<ADD EXAMPLE VALUE>","destination_city":"chicago","destination_radius":100,"destination_state":["IL","HI","NY","KS","TX","MO","AL"],"full_load":true,"google_recaptcha_score":0,"item_count":25,"max_age":300,"max_length":300,"max_pay_rate":300,"max_weight":40000,"md5":"850FBE52A5345119FD9C79FDE4E27308","min_age":50,"min_length":15,"min_pay_rate":50,"min_weight":1000,"origin_city":"Kansas City","origin_radius":150,"origin_state":["MO","IL","TX","CA"],"page_number":0,"partner":"<ADD EXAMPLE VALUE>","return_count":false,"return_only":"unviewed","return_web_url":false,"sort_direction":"asc","sort_parameter":"age","tier":"all","trailer_type":["F","F+T","F+S","V"]}' \
              --output-document \
              - https://api.directfreight.com/v1/boards/%7Bboard_type%7D
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "01234567890abc",
              "x-dont-update-user-last-date": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "alert_id": 1155,
              "company_name": "<ADD EXAMPLE VALUE>",
              "destination_city": "chicago",
              "destination_radius": 100,
              "destination_state": ["IL", "HI", "NY", "KS", "TX", "MO", "AL"],
              "full_load": true,
              "google_recaptcha_score": 0,
              "item_count": 25,
              "max_age": 300,
              "max_length": 300,
              "max_pay_rate": 300,
              "max_weight": 40000,
              "md5": "850FBE52A5345119FD9C79FDE4E27308",
              "min_age": 50,
              "min_length": 15,
              "min_pay_rate": 50,
              "min_weight": 1000,
              "origin_city": "Kansas City",
              "origin_radius": 150,
              "origin_state": ["MO", "IL", "TX", "CA"],
              "page_number": 0,
              "partner": "<ADD EXAMPLE VALUE>",
              "return_count": false,
              "return_only": "unviewed",
              "return_web_url": false,
              "sort_direction": "asc",
              "sort_parameter": "age",
              "tier": "all",
              "trailer_type": ["F", "F+T", "F+S", "V"]
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/%7Bboard_type%7D")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: BOARDS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/%7Bboard_type%7D");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/%7Bboard_type%7D")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/boards/%7Bboard_type%7D")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/%7Bboard_type%7D",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/boards/%7Bboard_type%7D");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/%7Bboard_type%7D",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/boards/%7Bboard_type%7D");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/%7Bboard_type%7D"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/%7Bboard_type%7D" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/boards/%7Bboard_type%7D");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/%7Bboard_type%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/%7Bboard_type%7D');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/%7Bboard_type%7D');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/boards/%7Bboard_type%7D", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/%7Bboard_type%7D"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/boards/%7Bboard_type%7D")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/boards/%7Bboard_type%7D \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/boards/%7Bboard_type%7D \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/boards/%7Bboard_type%7D
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/%7Bboard_type%7D")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  '/boards/{board_type}/state_totals':
    get:
      description: A convenience method to get totals by state.
      parameters:
        - description: 'Valid types are "loads", and "trucks".'
          enum:
            - loads
            - trucks
          in: path
          name: board_type
          required: true
          type: string
        - description: Filter totals to only include these trailer_type's. This parameter can be specified multiple times and the totals are combined. i.e. trailer_type=V&trailer_type=R returns the combined total of all loads that are either V or
          in: query
          name: trailer_type
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/get_state_list_response'
      summary: Totals by state
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals',
              qs: { trailer_type: 'SOME_STRING_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals");

            req.query({
              "trailer_type": "SOME_STRING_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'trailer_type' => 'SOME_STRING_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'trailer_type' => 'SOME_STRING_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals"

            querystring = {"trailer_type":"SOME_STRING_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: BOARDS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/%7Bboard_type%7D/state_totals",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/boards/%7Bboard_type%7D/state_totals", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  '/boards/{board_type}/state_totals/{state_code}':
    get:
      description: A convenience method to get totals by state.  Stage=Private
      parameters:
        - description: 'Valid types are "loads", and "trucks".'
          enum:
            - loads
            - trucks
          in: path
          name: board_type
          required: true
          type: string
        - description: Filter totals to only include these trailer_type's. This parameter can be specified multiple times and the totals are combined. i.e. trailer_type=V&trailer_type=R returns the combined total of all loads that are either V or
          in: query
          name: trailer_type
          required: false
          type: string
        - in: path
          name: state_code
          required: true
          type: string
      responses:
        '200':
          description: A list of freight rates
      summary: Top 5 city totals by state
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D',
              qs: { trailer_type: 'SOME_STRING_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D");

            req.query({
              "trailer_type": "SOME_STRING_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'trailer_type' => 'SOME_STRING_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'trailer_type' => 'SOME_STRING_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D"

            querystring = {"trailer_type":"SOME_STRING_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: BOARDS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /boards/freight_rates:
    get:
      description: Calculate Freight Rates.
      parameters:
        - description: Origin City
          in: query
          name: origin_city
          required: true
          type: string
        - description: Origin State
          in: query
          name: origin_state
          required: true
          type: string
        - description: Destination City
          in: query
          name: destination_city
          required: true
          type: string
        - description: 'Destination State. If destination_city and destination_state are set to "ANYWHERE", then this endpoint will return an average of freight rates from the origin to all destinations.'
          in: query
          name: destination_state
          required: true
          type: string
        - description: Must be used in conjunction with end_date. If not specified the most current day's data is used.
          format: date
          in: query
          name: start_date
          required: false
          type: string
        - description: Must be used in conjunction with start_date. If not specified the most current day's data is used
          format: date
          in: query
          name: end_date
          required: false
          type: string
        - description: 'Trailer Type, defaults to "all" if not specied. This option can be specified multiple times.'
          enum:
            - all
            - van
            - reefer
            - flat
          in: query
          name: trailer_type
          required: false
          type: string
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '201':
          description: Details about average rates for this trip. Returns an object where each key is a trailer type with an array of the freight rate for each day that was found for that type.
          schema:
            $ref: '#/definitions/boards_freight_rate_response'
      summary: Get Freight Rates.
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/boards/freight_rates',
              qs: 
               { origin_city: 'SOME_STRING_VALUE',
                 origin_state: 'SOME_STRING_VALUE',
                 destination_city: 'SOME_STRING_VALUE',
                 destination_state: 'SOME_STRING_VALUE',
                 start_date: 'SOME_STRING_VALUE',
                 end_date: 'SOME_STRING_VALUE',
                 trailer_type: 'SOME_STRING_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/boards/freight_rates");

            req.query({
              "origin_city": "SOME_STRING_VALUE",
              "origin_state": "SOME_STRING_VALUE",
              "destination_city": "SOME_STRING_VALUE",
              "destination_state": "SOME_STRING_VALUE",
              "start_date": "SOME_STRING_VALUE",
              "end_date": "SOME_STRING_VALUE",
              "trailer_type": "SOME_STRING_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/freight_rates');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'origin_city' => 'SOME_STRING_VALUE',
              'origin_state' => 'SOME_STRING_VALUE',
              'destination_city' => 'SOME_STRING_VALUE',
              'destination_state' => 'SOME_STRING_VALUE',
              'start_date' => 'SOME_STRING_VALUE',
              'end_date' => 'SOME_STRING_VALUE',
              'trailer_type' => 'SOME_STRING_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/freight_rates');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'origin_city' => 'SOME_STRING_VALUE',
              'origin_state' => 'SOME_STRING_VALUE',
              'destination_city' => 'SOME_STRING_VALUE',
              'destination_state' => 'SOME_STRING_VALUE',
              'start_date' => 'SOME_STRING_VALUE',
              'end_date' => 'SOME_STRING_VALUE',
              'trailer_type' => 'SOME_STRING_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/freight_rates"

            querystring = {"origin_city":"SOME_STRING_VALUE","origin_state":"SOME_STRING_VALUE","destination_city":"SOME_STRING_VALUE","destination_state":"SOME_STRING_VALUE","start_date":"SOME_STRING_VALUE","end_date":"SOME_STRING_VALUE","trailer_type":"SOME_STRING_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: BOARDS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/freight_rates");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/freight_rates\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/freight_rates")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/boards/freight_rates")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/freight_rates",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/boards/freight_rates");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/freight_rates",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/boards/freight_rates',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/boards/freight_rates");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/freight_rates"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/freight_rates" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/boards/freight_rates");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/freight_rates",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/freight_rates');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/freight_rates');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/boards/freight_rates", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/freight_rates"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/boards/freight_rates")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/boards/freight_rates \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/boards/freight_rates \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/boards/freight_rates
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/freight_rates")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /boards/freight_rates/saved_lanes:
    delete:
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: query
          name: lane_id
          required: true
          type: integer
      responses:
        '204':
          description: Will not have a return body.
      summary: Remove a Saved lane
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE")
              .delete(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.delete("https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE",
              "method": "DELETE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("DELETE", "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url: 'https://api.directfreight.com/v1/boards/freight_rates/saved_lanes',
              qs: { lane_id: 'SOME_INTEGER_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("DELETE", "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes");

            req.query({
              "lane_id": "SOME_INTEGER_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `DELETE uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("DELETE",
            "'https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/freight_rates/saved_lanes');
            $request->setMethod(HTTP_METH_DELETE);

            $request->setQueryData(array(
              'lane_id' => 'SOME_INTEGER_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/freight_rates/saved_lanes');
            $request->setRequestMethod('DELETE');
            $request->setQuery(new http\QueryString(array(
              'lane_id' => 'SOME_INTEGER_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("DELETE", "/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes"

            querystring = {"lane_id":"SOME_INTEGER_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("DELETE", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url 'https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http DELETE 'https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method DELETE \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    get:
      description: Get all saved lanes for logged in user.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: Will return an object containing a list of saved lanes.
          schema:
            $ref: '#/definitions/boards_saved_lanes_response'
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/freight_rates/saved_lanes");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/freight_rates/saved_lanes")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/boards/freight_rates/saved_lanes")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/freight_rates/saved_lanes",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/boards/freight_rates/saved_lanes',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/freight_rates/saved_lanes');
            $request->setMethod(HTTP_METH_GET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/freight_rates/saved_lanes');
            $request->setRequestMethod('GET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/boards/freight_rates/saved_lanes", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/freight_rates/saved_lanes")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.directfreight.com/v1/boards/freight_rates/saved_lanes \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET https://api.directfreight.com/v1/boards/freight_rates/saved_lanes \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/boards/freight_rates/saved_lanes
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      description: Save a lane.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: false
          schema:
            properties:
              destinaition_city:
                description: A valid city or outbound
                type: string
              destination_state:
                description: A valid State abbrevitaino or blank when using outbound.
                type: string
              origin_city:
                description: A valid city or inbound
                type: string
              origin_state:
                description: A valid State abbrevitaino or blank when using inbound.
                type: string
            required:
              - destination_state
              - origin_city
              - origin_state
            type: object
      responses:
        '200':
          description: Will return an object containing a list of saved lanes.
          schema:
            $ref: '#/definitions/boards_saved_lanes_response'
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"destinaition_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/freight_rates/saved_lanes");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"destinaition_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\"\n\n\tpayload := strings.NewReader(\"{\\\"destinaition_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"destinaition_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/freight_rates/saved_lanes")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/boards/freight_rates/saved_lanes")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"destinaition_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"destinaition_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "destinaition_city": "<ADD EXAMPLE VALUE>",
              "destination_state": "<ADD EXAMPLE VALUE>",
              "origin_city": "<ADD EXAMPLE VALUE>",
              "origin_state": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/freight_rates/saved_lanes",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ destinaition_city: '<ADD EXAMPLE VALUE>',
              destination_state: '<ADD EXAMPLE VALUE>',
              origin_city: '<ADD EXAMPLE VALUE>',
              origin_state: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/boards/freight_rates/saved_lanes',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { destinaition_city: '<ADD EXAMPLE VALUE>',
                 destination_state: '<ADD EXAMPLE VALUE>',
                 origin_city: '<ADD EXAMPLE VALUE>',
                 origin_state: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "destinaition_city": "<ADD EXAMPLE VALUE>",
              "destination_state": "<ADD EXAMPLE VALUE>",
              "origin_city": "<ADD EXAMPLE VALUE>",
              "origin_state": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"destinaition_city": @"<ADD EXAMPLE VALUE>",
                                          @"destination_state": @"<ADD EXAMPLE VALUE>",
                                          @"origin_city": @"<ADD EXAMPLE VALUE>",
                                          @"origin_state": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"destinaition_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"destinaition_city":"<ADD EXAMPLE VALUE>","destination_state":"<ADD EXAMPLE VALUE>","origin_city":"<ADD EXAMPLE VALUE>","origin_state":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"destinaition_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/freight_rates/saved_lanes');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"destinaition_city":"<ADD EXAMPLE VALUE>","destination_state":"<ADD EXAMPLE VALUE>","origin_city":"<ADD EXAMPLE VALUE>","origin_state":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"destinaition_city":"<ADD EXAMPLE VALUE>","destination_state":"<ADD EXAMPLE VALUE>","origin_city":"<ADD EXAMPLE VALUE>","origin_state":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/freight_rates/saved_lanes');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"destinaition_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/boards/freight_rates/saved_lanes", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes"

            payload = "{\"destinaition_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/freight_rates/saved_lanes")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"destinaition_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/boards/freight_rates/saved_lanes \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"destinaition_city":"<ADD EXAMPLE VALUE>","destination_state":"<ADD EXAMPLE VALUE>","origin_city":"<ADD EXAMPLE VALUE>","origin_state":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"destinaition_city":"<ADD EXAMPLE VALUE>","destination_state":"<ADD EXAMPLE VALUE>","origin_city":"<ADD EXAMPLE VALUE>","origin_state":"<ADD EXAMPLE VALUE>"}' |  \
              http POST https://api.directfreight.com/v1/boards/freight_rates/saved_lanes \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"destinaition_city":"<ADD EXAMPLE VALUE>","destination_state":"<ADD EXAMPLE VALUE>","origin_city":"<ADD EXAMPLE VALUE>","origin_state":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/boards/freight_rates/saved_lanes
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "destinaition_city": "<ADD EXAMPLE VALUE>",
              "destination_state": "<ADD EXAMPLE VALUE>",
              "origin_city": "<ADD EXAMPLE VALUE>",
              "origin_state": "<ADD EXAMPLE VALUE>"
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: BOARDS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/freight_rates/saved_lanes")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/boards/freight_rates/saved_lanes")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/freight_rates/saved_lanes",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/boards/freight_rates/saved_lanes',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/freight_rates/saved_lanes');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/freight_rates/saved_lanes');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/boards/freight_rates/saved_lanes", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/boards/freight_rates/saved_lanes")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/boards/freight_rates/saved_lanes \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/boards/freight_rates/saved_lanes \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/boards/freight_rates/saved_lanes
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/freight_rates/saved_lanes")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /boards/hidden_companies:
    delete:
      description: Mark a company as not hidden.
      parameters:
        - description: The company that need to be marked as not hidden.
          in: query
          name: company_name
          required: true
          type: string
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '204':
          description: No content
      summary: STAGE=UNK Unhide companies
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE")
              .delete(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.delete("https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE",
              "method": "DELETE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("DELETE", "https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url: 'https://api.directfreight.com/v1/boards/hidden_companies',
              qs: { company_name: 'SOME_STRING_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("DELETE", "https://api.directfreight.com/v1/boards/hidden_companies");

            req.query({
              "company_name": "SOME_STRING_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `DELETE uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("DELETE",
            "'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/hidden_companies');
            $request->setMethod(HTTP_METH_DELETE);

            $request->setQueryData(array(
              'company_name' => 'SOME_STRING_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_companies');
            $request->setRequestMethod('DELETE');
            $request->setQuery(new http\QueryString(array(
              'company_name' => 'SOME_STRING_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("DELETE", "/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/hidden_companies"

            querystring = {"company_name":"SOME_STRING_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("DELETE", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url 'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http DELETE 'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method DELETE \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    get:
      description: Get a list of companies that should be hidden.
      parameters:
        - collectionFormat: multi
          description: A list of company names to check if any should be visually hidden.  If this field is blank all hidden companies will be returned.
          in: query
          items:
            type: string
          name: company_name
          required: false
          type: array
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/get_hidden_companies_response'
      summary: STAGE=UNK List hidden companies.
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/boards/hidden_companies',
              qs: { company_name: 'SOME_ARRAY_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/boards/hidden_companies");

            req.query({
              "company_name": "SOME_ARRAY_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/hidden_companies');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'company_name' => 'SOME_ARRAY_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_companies');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'company_name' => 'SOME_ARRAY_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/hidden_companies"

            querystring = {"company_name":"SOME_ARRAY_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    patch:
      description: Toggle one  company between hidden and unhidden.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/toggle_hidden_companies'
      responses:
        '204':
          description: successful operation
      summary: STAGE=UNK Change hidden status
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/hidden_companies");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/hidden_companies");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_companies\"\n\n\tpayload := strings.NewReader(\"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/hidden_companies")
              .patch(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.patch("https://api.directfreight.com/v1/boards/hidden_companies")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"company_name\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/hidden_companies",
              "method": "PATCH",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "company_name": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("PATCH", "https://api.directfreight.com/v1/boards/hidden_companies");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PATCH",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/hidden_companies",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ company_name: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'PATCH',
              url: 'https://api.directfreight.com/v1/boards/hidden_companies',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: { company_name: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("PATCH", "https://api.directfreight.com/v1/boards/hidden_companies");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "company_name": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"company_name": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/hidden_companies"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PATCH"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/hidden_companies" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `PATCH uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("PATCH",
            "https://api.directfreight.com/v1/boards/hidden_companies");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"company_name":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/hidden_companies",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PATCH",
              CURLOPT_POSTFIELDS => "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('PATCH');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/hidden_companies');
            $request->setMethod(HttpRequest::HTTP_METH_PATCH);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"company_name":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"company_name":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_companies');
            $request->setRequestMethod('PATCH');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("PATCH", "/v1/boards/hidden_companies", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/hidden_companies"

            payload = "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("PATCH", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/hidden_companies")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Patch.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request PATCH \
              --url https://api.directfreight.com/v1/boards/hidden_companies \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"company_name":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"company_name":"<ADD EXAMPLE VALUE>"}' |  \
              http PATCH https://api.directfreight.com/v1/boards/hidden_companies \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method PATCH \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"company_name":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/boards/hidden_companies
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = ["company_name": "<ADD EXAMPLE VALUE>"]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/hidden_companies")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "PATCH"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      description: Mark a set of companies as hidden.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/mark_hidden_companies'
      responses:
        '201':
          $ref: '#/responses/object_created'
      summary: STAGE=UNK Hide companies.
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/hidden_companies");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/hidden_companies");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_companies\"\n\n\tpayload := strings.NewReader(\"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/hidden_companies")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/boards/hidden_companies")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"company_name\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/hidden_companies",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "company_name": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/boards/hidden_companies");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/hidden_companies",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ company_name: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/boards/hidden_companies',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: { company_name: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/boards/hidden_companies");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "company_name": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"company_name": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/hidden_companies"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/hidden_companies" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/boards/hidden_companies");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"company_name":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/hidden_companies",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/hidden_companies');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"company_name":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"company_name":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_companies');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/boards/hidden_companies", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/hidden_companies"

            payload = "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/hidden_companies")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"company_name\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/boards/hidden_companies \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"company_name":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"company_name":"<ADD EXAMPLE VALUE>"}' |  \
              http POST https://api.directfreight.com/v1/boards/hidden_companies \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"company_name":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/boards/hidden_companies
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = ["company_name": "<ADD EXAMPLE VALUE>"]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/hidden_companies")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: BOARDS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/hidden_companies");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_companies\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/hidden_companies")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/boards/hidden_companies")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/hidden_companies",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/boards/hidden_companies");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/hidden_companies",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/boards/hidden_companies',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/boards/hidden_companies");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/hidden_companies"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/hidden_companies" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/boards/hidden_companies");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/hidden_companies",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/hidden_companies');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_companies');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/boards/hidden_companies", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/hidden_companies"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/boards/hidden_companies")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/boards/hidden_companies \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/boards/hidden_companies \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/boards/hidden_companies
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/hidden_companies")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /boards/hidden_entries:
    delete:
      description: ' Mark an entry as unhidden.'
      parameters:
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: entry_id
          required: true
          type: array
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '204':
          description: No Content
      summary: STAGE=private Unhide 1 or more postings
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE")
              .delete(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.delete("https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE",
              "method": "DELETE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("DELETE", "https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url: 'https://api.directfreight.com/v1/boards/hidden_entries',
              qs: { entry_id: 'SOME_ARRAY_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("DELETE", "https://api.directfreight.com/v1/boards/hidden_entries");

            req.query({
              "entry_id": "SOME_ARRAY_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `DELETE uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("DELETE",
            "'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/hidden_entries');
            $request->setMethod(HTTP_METH_DELETE);

            $request->setQueryData(array(
              'entry_id' => 'SOME_ARRAY_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_entries');
            $request->setRequestMethod('DELETE');
            $request->setQuery(new http\QueryString(array(
              'entry_id' => 'SOME_ARRAY_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("DELETE", "/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/hidden_entries"

            querystring = {"entry_id":"SOME_ARRAY_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("DELETE", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url 'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http DELETE 'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method DELETE \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    get:
      description: Get a list of entries that should be hidden.
      parameters:
        - collectionFormat: multi
          description: A list of id's to check if any should be visually hidden.
          in: query
          items:
            type: string
          name: entry_id
          required: true
          type: array
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/get_hidden_entries'
      summary: STAGE=UNK List hidden entries.
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/boards/hidden_entries',
              qs: { entry_id: 'SOME_ARRAY_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/boards/hidden_entries");

            req.query({
              "entry_id": "SOME_ARRAY_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/hidden_entries');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'entry_id' => 'SOME_ARRAY_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_entries');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'entry_id' => 'SOME_ARRAY_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/hidden_entries"

            querystring = {"entry_id":"SOME_ARRAY_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    patch:
      description: Toggle one or more entries between hidden and unhidden.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/toggle_hidden_entries'
      responses:
        '204':
          description: successful operation
      summary: STAGE=UNK Change hidden status
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/hidden_entries");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/hidden_entries");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_entries\"\n\n\tpayload := strings.NewReader(\"{}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/hidden_entries")
              .patch(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.patch("https://api.directfreight.com/v1/boards/hidden_entries")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/hidden_entries",
              "method": "PATCH",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({});

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("PATCH", "https://api.directfreight.com/v1/boards/hidden_entries");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PATCH",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/hidden_entries",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({}));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'PATCH',
              url: 'https://api.directfreight.com/v1/boards/hidden_entries',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: {},
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("PATCH", "https://api.directfreight.com/v1/boards/hidden_entries");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({});

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{  };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/hidden_entries"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PATCH"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/hidden_entries" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{}" in

            Client.call ~headers ~body `PATCH uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("PATCH",
            "https://api.directfreight.com/v1/boards/hidden_entries");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/hidden_entries",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PATCH",
              CURLOPT_POSTFIELDS => "{}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('PATCH');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/hidden_entries');
            $request->setMethod(HttpRequest::HTTP_METH_PATCH);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{}');

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_entries');
            $request->setRequestMethod('PATCH');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("PATCH", "/v1/boards/hidden_entries", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/hidden_entries"

            payload = "{}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("PATCH", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/hidden_entries")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Patch.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request PATCH \
              --url https://api.directfreight.com/v1/boards/hidden_entries \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{}'
        - lang: Shell_httpie
          source: |-
            echo '{}' |  \
              http PATCH https://api.directfreight.com/v1/boards/hidden_entries \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method PATCH \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{}' \
              --output-document \
              - https://api.directfreight.com/v1/boards/hidden_entries
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = []

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/hidden_entries")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "PATCH"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      description: Mark an entry as hidden.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/hidden_entry_object'
      responses:
        '201':
          $ref: '#/responses/object_created'
      summary: STAGE=private Hide 1 or more postings
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/hidden_entries");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/hidden_entries");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_entries\"\n\n\tpayload := strings.NewReader(\"{}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/hidden_entries")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/boards/hidden_entries")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/hidden_entries",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({});

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/boards/hidden_entries");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/hidden_entries",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({}));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/boards/hidden_entries',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: {},
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/boards/hidden_entries");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({});

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{  };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/hidden_entries"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/hidden_entries" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/boards/hidden_entries");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/hidden_entries",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/hidden_entries');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{}');

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_entries');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/boards/hidden_entries", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/hidden_entries"

            payload = "{}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/hidden_entries")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/boards/hidden_entries \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{}'
        - lang: Shell_httpie
          source: |-
            echo '{}' |  \
              http POST https://api.directfreight.com/v1/boards/hidden_entries \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{}' \
              --output-document \
              - https://api.directfreight.com/v1/boards/hidden_entries
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = []

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/hidden_entries")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: BOARDS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/hidden_entries");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_entries\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/hidden_entries")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/boards/hidden_entries")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/hidden_entries",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/boards/hidden_entries");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/hidden_entries",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/boards/hidden_entries',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/boards/hidden_entries");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/hidden_entries"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/hidden_entries" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/boards/hidden_entries");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/hidden_entries",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/hidden_entries');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_entries');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/boards/hidden_entries", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/hidden_entries"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/boards/hidden_entries")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/boards/hidden_entries \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/boards/hidden_entries \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/boards/hidden_entries
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/hidden_entries")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /boards/notes:
    delete:
      parameters:
        - description: 'The entry to associate the note with. '
          in: query
          name: note_id
          required: true
          type: string
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '204':
          description: successful operation
      summary: STAGE=UNK Delete a note.
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE")
              .delete(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.delete("https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE",
              "method": "DELETE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("DELETE", "https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/notes?note_id=SOME_STRING_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url: 'https://api.directfreight.com/v1/boards/notes',
              qs: { note_id: 'SOME_STRING_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("DELETE", "https://api.directfreight.com/v1/boards/notes");

            req.query({
              "note_id": "SOME_STRING_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `DELETE uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("DELETE",
            "'https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/notes');
            $request->setMethod(HTTP_METH_DELETE);

            $request->setQueryData(array(
              'note_id' => 'SOME_STRING_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/notes');
            $request->setRequestMethod('DELETE');
            $request->setQuery(new http\QueryString(array(
              'note_id' => 'SOME_STRING_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("DELETE", "/v1/boards/notes?note_id=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/notes"

            querystring = {"note_id":"SOME_STRING_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("DELETE", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url 'https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http DELETE 'https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method DELETE \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    get:
      description: Get notes that this user has written.
      parameters:
        - collectionFormat: multi
          description: 'Optionally just check if certain loads have notes associated with them. '
          in: query
          items:
            type: string
          name: entry_id
          required: false
          type: array
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/get_boards_notes_response'
      summary: STAGE=UNK List user notes.
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/notes?entry_id=SOME_ARRAY_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/boards/notes',
              qs: { entry_id: 'SOME_ARRAY_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/boards/notes");

            req.query({
              "entry_id": "SOME_ARRAY_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/notes');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'entry_id' => 'SOME_ARRAY_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/notes');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'entry_id' => 'SOME_ARRAY_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/boards/notes?entry_id=SOME_ARRAY_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/notes"

            querystring = {"entry_id":"SOME_ARRAY_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    patch:
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/update_notes'
      responses:
        '201':
          description: successful operation
          schema:
            $ref: '#/definitions/update_notes_status'
      summary: STAGE=UNK Update a note.
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/notes");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/notes");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/notes\"\n\n\tpayload := strings.NewReader(\"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"note_id\\\":0,\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/notes")
              .patch(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.patch("https://api.directfreight.com/v1/boards/notes")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/notes",
              "method": "PATCH",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "body": "<ADD EXAMPLE VALUE>",
              "note_id": 0,
              "title": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("PATCH", "https://api.directfreight.com/v1/boards/notes");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PATCH",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/notes",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ body: '<ADD EXAMPLE VALUE>',
              note_id: 0,
              title: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'PATCH',
              url: 'https://api.directfreight.com/v1/boards/notes',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { body: '<ADD EXAMPLE VALUE>',
                 note_id: 0,
                 title: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("PATCH", "https://api.directfreight.com/v1/boards/notes");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "body": "<ADD EXAMPLE VALUE>",
              "note_id": 0,
              "title": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"body": @"<ADD EXAMPLE VALUE>",
                                          @"note_id": @0,
                                          @"title": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/notes"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PATCH"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/notes" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `PATCH uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("PATCH",
            "https://api.directfreight.com/v1/boards/notes");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"body":"<ADD EXAMPLE VALUE>","note_id":0,"title":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/notes",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PATCH",
              CURLOPT_POSTFIELDS => "{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('PATCH');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/notes');
            $request->setMethod(HttpRequest::HTTP_METH_PATCH);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"body":"<ADD EXAMPLE VALUE>","note_id":0,"title":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"body":"<ADD EXAMPLE VALUE>","note_id":0,"title":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/notes');
            $request->setRequestMethod('PATCH');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("PATCH", "/v1/boards/notes", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/notes"

            payload = "{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("PATCH", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/notes")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Patch.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request PATCH \
              --url https://api.directfreight.com/v1/boards/notes \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"body":"<ADD EXAMPLE VALUE>","note_id":0,"title":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"body":"<ADD EXAMPLE VALUE>","note_id":0,"title":"<ADD EXAMPLE VALUE>"}' |  \
              http PATCH https://api.directfreight.com/v1/boards/notes \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method PATCH \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"body":"<ADD EXAMPLE VALUE>","note_id":0,"title":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/boards/notes
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "body": "<ADD EXAMPLE VALUE>",
              "note_id": 0,
              "title": "<ADD EXAMPLE VALUE>"
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/notes")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "PATCH"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      description: Create a new note.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/create_notes'
      responses:
        '201':
          description: Object created check the headers for a reference URL.
          schema:
            $ref: '#/definitions/note_create_status'
      summary: STAGE=UNK Create a note.
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/notes");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/notes");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/notes\"\n\n\tpayload := strings.NewReader(\"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/notes")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/boards/notes")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/notes",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "body": "<ADD EXAMPLE VALUE>",
              "entry_id": "<ADD EXAMPLE VALUE>",
              "title": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/boards/notes");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/notes",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ body: '<ADD EXAMPLE VALUE>',
              entry_id: '<ADD EXAMPLE VALUE>',
              title: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/boards/notes',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { body: '<ADD EXAMPLE VALUE>',
                 entry_id: '<ADD EXAMPLE VALUE>',
                 title: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/boards/notes");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "body": "<ADD EXAMPLE VALUE>",
              "entry_id": "<ADD EXAMPLE VALUE>",
              "title": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"body": @"<ADD EXAMPLE VALUE>",
                                          @"entry_id": @"<ADD EXAMPLE VALUE>",
                                          @"title": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/notes"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/notes" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/boards/notes");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"body":"<ADD EXAMPLE VALUE>","entry_id":"<ADD EXAMPLE VALUE>","title":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/notes",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/notes');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"body":"<ADD EXAMPLE VALUE>","entry_id":"<ADD EXAMPLE VALUE>","title":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"body":"<ADD EXAMPLE VALUE>","entry_id":"<ADD EXAMPLE VALUE>","title":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/notes');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/boards/notes", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/notes"

            payload = "{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/notes")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/boards/notes \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"body":"<ADD EXAMPLE VALUE>","entry_id":"<ADD EXAMPLE VALUE>","title":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"body":"<ADD EXAMPLE VALUE>","entry_id":"<ADD EXAMPLE VALUE>","title":"<ADD EXAMPLE VALUE>"}' |  \
              http POST https://api.directfreight.com/v1/boards/notes \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"body":"<ADD EXAMPLE VALUE>","entry_id":"<ADD EXAMPLE VALUE>","title":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/boards/notes
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "body": "<ADD EXAMPLE VALUE>",
              "entry_id": "<ADD EXAMPLE VALUE>",
              "title": "<ADD EXAMPLE VALUE>"
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/notes")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: BOARDS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/notes");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/notes\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/notes")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/boards/notes")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/notes",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/boards/notes");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/notes",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/boards/notes',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/boards/notes");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/notes"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/notes" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/boards/notes");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/notes",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/notes');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/notes');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/boards/notes", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/notes"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/boards/notes")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/boards/notes \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/boards/notes \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/boards/notes
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/notes")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /boards/offer/driver:
    get:
      description: Get the offer submitted by the driver for this load.  STAGE=Private
      parameters:
        - description: The reference code to look up the driver's offer
          in: query
          name: df_reference_code
          required: true
          type: string
        - description: 32 character entry id
          in: query
          name: entry_id
          required: true
          type: string
      responses:
        '201':
          description: Details about Driver Offer
          schema:
            $ref: '#/definitions/boards_offer_driver_response'
      summary: Get Driver Offer
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/boards/offer/driver',
              qs: 
               { df_reference_code: 'SOME_STRING_VALUE',
                 entry_id: 'SOME_STRING_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/boards/offer/driver");

            req.query({
              "df_reference_code": "SOME_STRING_VALUE",
              "entry_id": "SOME_STRING_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/offer/driver');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'df_reference_code' => 'SOME_STRING_VALUE',
              'entry_id' => 'SOME_STRING_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/offer/driver');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'df_reference_code' => 'SOME_STRING_VALUE',
              'entry_id' => 'SOME_STRING_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/offer/driver"

            querystring = {"df_reference_code":"SOME_STRING_VALUE","entry_id":"SOME_STRING_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      description: Submit the offer from the driver for this load.  STAGE=Private
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: false
          schema:
            properties:
              df_reference_code:
                description: The reference code returned with the broker offer.
                type: string
              entry_id:
                description: 32 character entry id
                type: string
              quote_amount:
                description: The amount offered by the driver to transport this load.
                type: number
            type: object
      responses:
        '201':
          description: successful operation
          schema:
            $ref: '#/definitions/boards_submit_offer_response'
      summary: Submit Driver Offer
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/offer/driver");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"quote_amount\":0}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/offer/driver");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"quote_amount\":0}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/offer/driver\"\n\n\tpayload := strings.NewReader(\"{\\\"df_reference_code\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"quote_amount\\\":0}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"quote_amount\":0}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/offer/driver")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/boards/offer/driver")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"quote_amount\":0}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/offer/driver",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"quote_amount\":0}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "df_reference_code": "<ADD EXAMPLE VALUE>",
              "entry_id": "<ADD EXAMPLE VALUE>",
              "quote_amount": 0
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/boards/offer/driver");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/offer/driver",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ df_reference_code: '<ADD EXAMPLE VALUE>',
              entry_id: '<ADD EXAMPLE VALUE>',
              quote_amount: 0 }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/boards/offer/driver',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { df_reference_code: '<ADD EXAMPLE VALUE>',
                 entry_id: '<ADD EXAMPLE VALUE>',
                 quote_amount: 0 },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/boards/offer/driver");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "df_reference_code": "<ADD EXAMPLE VALUE>",
              "entry_id": "<ADD EXAMPLE VALUE>",
              "quote_amount": 0
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"df_reference_code": @"<ADD EXAMPLE VALUE>",
                                          @"entry_id": @"<ADD EXAMPLE VALUE>",
                                          @"quote_amount": @0 };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/offer/driver"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/offer/driver" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"quote_amount\":0}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/boards/offer/driver");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"df_reference_code":"<ADD EXAMPLE VALUE>","entry_id":"<ADD EXAMPLE VALUE>","quote_amount":0}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/offer/driver",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"quote_amount\":0}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/offer/driver');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"df_reference_code":"<ADD EXAMPLE VALUE>","entry_id":"<ADD EXAMPLE VALUE>","quote_amount":0}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"df_reference_code":"<ADD EXAMPLE VALUE>","entry_id":"<ADD EXAMPLE VALUE>","quote_amount":0}');

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/offer/driver');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"quote_amount\":0}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/boards/offer/driver", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/offer/driver"

            payload = "{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"quote_amount\":0}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/offer/driver")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"quote_amount\":0}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/boards/offer/driver \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"df_reference_code":"<ADD EXAMPLE VALUE>","entry_id":"<ADD EXAMPLE VALUE>","quote_amount":0}'
        - lang: Shell_httpie
          source: |-
            echo '{"df_reference_code":"<ADD EXAMPLE VALUE>","entry_id":"<ADD EXAMPLE VALUE>","quote_amount":0}' |  \
              http POST https://api.directfreight.com/v1/boards/offer/driver \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"df_reference_code":"<ADD EXAMPLE VALUE>","entry_id":"<ADD EXAMPLE VALUE>","quote_amount":0}' \
              --output-document \
              - https://api.directfreight.com/v1/boards/offer/driver
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "df_reference_code": "<ADD EXAMPLE VALUE>",
              "entry_id": "<ADD EXAMPLE VALUE>",
              "quote_amount": 0
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/offer/driver")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: BOARDS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/offer/driver");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/offer/driver\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/offer/driver")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/boards/offer/driver")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/offer/driver",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/boards/offer/driver");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/offer/driver",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/boards/offer/driver',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/boards/offer/driver");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/offer/driver"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/offer/driver" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/boards/offer/driver");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/offer/driver",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/offer/driver');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/offer/driver');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/boards/offer/driver", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/offer/driver"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/boards/offer/driver")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/boards/offer/driver \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/boards/offer/driver \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/boards/offer/driver
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/offer/driver")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /boards/offer/driver/accept_broker_offer:
    post:
      description: Submit the offer from the driver for this load.  STAGE=Private
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: false
          schema:
            properties:
              df_reference_code:
                description: The reference code returned with the broker offer.
                type: string
              entry_id:
                description: 32 character entry id
                type: string
            type: object
      responses:
        '201':
          description: successful operation
          schema:
            $ref: '#/definitions/boards_accept_offer_response'
      summary: Accept Broker Offer
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer\"\n\n\tpayload := strings.NewReader(\"{\\\"df_reference_code\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "df_reference_code": "<ADD EXAMPLE VALUE>",
              "entry_id": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/offer/driver/accept_broker_offer",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ df_reference_code: '<ADD EXAMPLE VALUE>',
              entry_id: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { df_reference_code: '<ADD EXAMPLE VALUE>',
                 entry_id: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "df_reference_code": "<ADD EXAMPLE VALUE>",
              "entry_id": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"df_reference_code": @"<ADD EXAMPLE VALUE>",
                                          @"entry_id": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"df_reference_code":"<ADD EXAMPLE VALUE>","entry_id":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"df_reference_code":"<ADD EXAMPLE VALUE>","entry_id":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"df_reference_code":"<ADD EXAMPLE VALUE>","entry_id":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/boards/offer/driver/accept_broker_offer", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer"

            payload = "{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"df_reference_code":"<ADD EXAMPLE VALUE>","entry_id":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"df_reference_code":"<ADD EXAMPLE VALUE>","entry_id":"<ADD EXAMPLE VALUE>"}' |  \
              http POST https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"df_reference_code":"<ADD EXAMPLE VALUE>","entry_id":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "df_reference_code": "<ADD EXAMPLE VALUE>",
              "entry_id": "<ADD EXAMPLE VALUE>"
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /boards/offer/driver/list:
    get:
      description: Get a list of accepted and submitted offers driver has for this load.  STAGE=Private
      parameters:
        - description: 32 character entry id
          in: query
          name: entry_id
          required: true
          type: string
      responses:
        '201':
          description: List of offers
          schema:
            $ref: '#/definitions/boards_offer_driver_list_response'
      summary: Get accepted and submitter driver offers
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/boards/offer/driver/list',
              qs: { entry_id: 'SOME_STRING_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/boards/offer/driver/list");

            req.query({
              "entry_id": "SOME_STRING_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/offer/driver/list');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'entry_id' => 'SOME_STRING_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/offer/driver/list');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'entry_id' => 'SOME_STRING_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/offer/driver/list"

            querystring = {"entry_id":"SOME_STRING_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: BOARDS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/offer/driver/list");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/offer/driver/list\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/offer/driver/list")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/boards/offer/driver/list")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/offer/driver/list",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/boards/offer/driver/list");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/offer/driver/list",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/boards/offer/driver/list',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/boards/offer/driver/list");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/offer/driver/list"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/offer/driver/list" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/boards/offer/driver/list");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/offer/driver/list",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/offer/driver/list');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/offer/driver/list');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/boards/offer/driver/list", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/offer/driver/list"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/boards/offer/driver/list")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/boards/offer/driver/list \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/boards/offer/driver/list \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/boards/offer/driver/list
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/offer/driver/list")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /boards/profit:
    get:
      description: Calculate trip profit.
      parameters:
        - description: Origin City name
          in: query
          name: origin_city
          required: true
          type: string
        - description: 'Origin State, two letter abbreviation'
          in: query
          name: origin_state
          required: true
          type: string
        - description: Destination City name
          in: query
          name: destination_city
          required: true
          type: string
        - description: 'Destination State, two letter abbreviation'
          in: query
          name: destination_state
          required: true
          type: string
        - description: 'This field will accept either the per mile rate, or gross rate.'
          in: query
          name: pay_rate
          required: false
          type: number
        - description: 'Total deadhead distance in miles, if this value is provided the response will include the deadhead_cost.'
          in: query
          name: deadhead_distance
          required: false
          type: number
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: Details about the profitability of this trip.
          schema:
            $ref: '#/definitions/boards_profit_response'
      summary: STAGE=Private Get profit data.
      tags:
        - boards
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/boards/profit',
              qs: 
               { origin_city: 'SOME_STRING_VALUE',
                 origin_state: 'SOME_STRING_VALUE',
                 destination_city: 'SOME_STRING_VALUE',
                 destination_state: 'SOME_STRING_VALUE',
                 pay_rate: 'SOME_NUMBER_VALUE',
                 deadhead_distance: 'SOME_NUMBER_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/boards/profit");

            req.query({
              "origin_city": "SOME_STRING_VALUE",
              "origin_state": "SOME_STRING_VALUE",
              "destination_city": "SOME_STRING_VALUE",
              "destination_state": "SOME_STRING_VALUE",
              "pay_rate": "SOME_NUMBER_VALUE",
              "deadhead_distance": "SOME_NUMBER_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/profit');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'origin_city' => 'SOME_STRING_VALUE',
              'origin_state' => 'SOME_STRING_VALUE',
              'destination_city' => 'SOME_STRING_VALUE',
              'destination_state' => 'SOME_STRING_VALUE',
              'pay_rate' => 'SOME_NUMBER_VALUE',
              'deadhead_distance' => 'SOME_NUMBER_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/profit');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'origin_city' => 'SOME_STRING_VALUE',
              'origin_state' => 'SOME_STRING_VALUE',
              'destination_city' => 'SOME_STRING_VALUE',
              'destination_state' => 'SOME_STRING_VALUE',
              'pay_rate' => 'SOME_NUMBER_VALUE',
              'deadhead_distance' => 'SOME_NUMBER_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/profit"

            querystring = {"origin_city":"SOME_STRING_VALUE","origin_state":"SOME_STRING_VALUE","destination_city":"SOME_STRING_VALUE","destination_state":"SOME_STRING_VALUE","pay_rate":"SOME_NUMBER_VALUE","deadhead_distance":"SOME_NUMBER_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: BOARDS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/boards/profit");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/profit\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/boards/profit")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/boards/profit")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/boards/profit",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/boards/profit");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/boards/profit",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/boards/profit',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/boards/profit");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/boards/profit"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/boards/profit" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/boards/profit");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/boards/profit",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/boards/profit');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/boards/profit');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/boards/profit", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/boards/profit"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/boards/profit")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/boards/profit \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/boards/profit \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/boards/profit
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/boards/profit")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /end_user_authentications:
    delete:
      description: This deletes the logged in users account permanently.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '204':
          description: Will not return content on a successful delete.
      summary: Logout
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications")
              .delete(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.delete("https://api.directfreight.com/v1/end_user_authentications")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications",
              "method": "DELETE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("DELETE", "https://api.directfreight.com/v1/end_user_authentications");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url: 'https://api.directfreight.com/v1/end_user_authentications',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("DELETE", "https://api.directfreight.com/v1/end_user_authentications");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `DELETE uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("DELETE",
            "https://api.directfreight.com/v1/end_user_authentications");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications');
            $request->setMethod(HTTP_METH_DELETE);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications');
            $request->setRequestMethod('DELETE');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("DELETE", "/v1/end_user_authentications", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url https://api.directfreight.com/v1/end_user_authentications \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http DELETE https://api.directfreight.com/v1/end_user_authentications \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method DELETE \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    get:
      description: Get current authentication level for the user.
      parameters:
        - in: header
          name: end-user-token
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          examples:
            application/json: '{status: "Subscribed", nami_label: "default"}'
          schema:
            properties:
              abilities:
                items:
                  type: string
                type: array
              nami_label:
                description: used internally for in app purchase paywall campaigns
                type: string
              roles:
                items:
                  type: string
                type: array
              status:
                description: Will return the logged in user's status.  (deprecated)
                enum:
                  - subscribed
                  - posting
                  - overdue
                  - not_logged_in
                type: string
            type: object
      summary: Get authentication level.
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/end_user_authentications")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/end_user_authentications");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/end_user_authentications',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/end_user_authentications");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "https://api.directfreight.com/v1/end_user_authentications");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications');
            $request->setMethod(HTTP_METH_GET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications');
            $request->setRequestMethod('GET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/end_user_authentications", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.directfreight.com/v1/end_user_authentications \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET https://api.directfreight.com/v1/end_user_authentications \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      description: 'This function sends login credentials, and retrieves a stateless token.'
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/login_credentials'
      responses:
        '201':
          description: successful operation
          schema:
            $ref: '#/definitions/end-user-token'
        '422':
          $ref: '#/responses/error_422'
      summary: Login
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications\"\n\n\tpayload := strings.NewReader(\"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"username\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/end_user_authentications")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "login": "<ADD EXAMPLE VALUE>",
              "realm": "username",
              "secret": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/end_user_authentications");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ login: '<ADD EXAMPLE VALUE>',
              realm: 'username',
              secret: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/end_user_authentications',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { login: '<ADD EXAMPLE VALUE>',
                 realm: 'username',
                 secret: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/end_user_authentications");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "login": "<ADD EXAMPLE VALUE>",
              "realm": "username",
              "secret": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"login": @"<ADD EXAMPLE VALUE>",
                                          @"realm": @"username",
                                          @"secret": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/end_user_authentications");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"login":"<ADD EXAMPLE VALUE>","realm":"username","secret":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"login":"<ADD EXAMPLE VALUE>","realm":"username","secret":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"login":"<ADD EXAMPLE VALUE>","realm":"username","secret":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/end_user_authentications", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications"

            payload = "{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/end_user_authentications \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --data '{"login":"<ADD EXAMPLE VALUE>","realm":"username","secret":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"login":"<ADD EXAMPLE VALUE>","realm":"username","secret":"<ADD EXAMPLE VALUE>"}' |  \
              http POST https://api.directfreight.com/v1/end_user_authentications \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"login":"<ADD EXAMPLE VALUE>","realm":"username","secret":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "login": "<ADD EXAMPLE VALUE>",
              "realm": "username",
              "secret": "<ADD EXAMPLE VALUE>"
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: END_USER_AUTHENTICATIONS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/end_user_authentications")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/end_user_authentications',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/end_user_authentications");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/end_user_authentications", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/end_user_authentications")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/end_user_authentications \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/end_user_authentications \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /end_user_authentications/apple_appstore_notification:
    post:
      description: DEPRECATED Please use the webooks endpoint. Save the apple notification to mysql  STAGE=private
      parameters: []
      responses:
        '200':
          description: successful operation
      summary: Save the apple notification to mysql  STAGE=private
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification")
              .post(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/apple_appstore_notification",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification');
            $request->setRequestMethod('POST');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/end_user_authentications/apple_appstore_notification", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http POST https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: END_USER_AUTHENTICATIONS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/apple_appstore_notification",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/end_user_authentications/apple_appstore_notification", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /end_user_authentications/auto_login_url:
    get:
      description: Get an auto login url
      parameters:
        - description: 'DirectFreight website URI to redirect to after login. Example, {{url}}/v1/end_user_authentications/auto_login_url?redirect_url=/boards/find/loads'
          in: query
          name: redirect_url
          required: false
          type: string
      responses:
        '201':
          description: Will return a DirectFreight URI that can be used to auto login and redirect.  The URI is valid for 5 minutes.
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/end_user_authentications/auto_login_url',
              qs: { redirect_url: 'SOME_STRING_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/end_user_authentications/auto_login_url");

            req.query({
              "redirect_url": "SOME_STRING_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/auto_login_url');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'redirect_url' => 'SOME_STRING_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/auto_login_url');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'redirect_url' => 'SOME_STRING_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/auto_login_url"

            querystring = {"redirect_url":"SOME_STRING_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: END_USER_AUTHENTICATIONS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/auto_login_url");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/auto_login_url\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/auto_login_url")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/end_user_authentications/auto_login_url")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/auto_login_url",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/auto_login_url");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/auto_login_url",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/end_user_authentications/auto_login_url',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/auto_login_url");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/auto_login_url"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/auto_login_url" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/end_user_authentications/auto_login_url");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/auto_login_url",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/auto_login_url');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/auto_login_url');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/end_user_authentications/auto_login_url", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/auto_login_url"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/end_user_authentications/auto_login_url")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/end_user_authentications/auto_login_url \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/auto_login_url \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/auto_login_url
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/auto_login_url")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /end_user_authentications/dates:
    get:
      description: Gets an authoritative date_time string.
      parameters: []
      responses:
        '200':
          description: successful operation
          examples:
            application/json: |-
              {
                "now": "now"
              }
          schema:
            properties:
              now:
                description: The current date and time based on our server.
                type: string
            type: object
      summary: Retrieve date
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/dates");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications/dates");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/dates\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/dates")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/end_user_authentications/dates")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/dates",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/end_user_authentications/dates");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/dates",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/end_user_authentications/dates',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/end_user_authentications/dates");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/dates"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/dates" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "https://api.directfreight.com/v1/end_user_authentications/dates");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/dates",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/dates');
            $request->setMethod(HTTP_METH_GET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/dates');
            $request->setRequestMethod('GET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/end_user_authentications/dates", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/dates"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications/dates")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.directfreight.com/v1/end_user_authentications/dates \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http GET https://api.directfreight.com/v1/end_user_authentications/dates \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/dates
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/dates")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: END_USER_AUTHENTICATIONS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/dates");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/dates\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/dates")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/end_user_authentications/dates")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/dates",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/dates");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/dates",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/end_user_authentications/dates',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/dates");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/dates"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/dates" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/end_user_authentications/dates");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/dates",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/dates');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/dates');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/end_user_authentications/dates", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/dates"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/end_user_authentications/dates")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/end_user_authentications/dates \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/dates \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/dates
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/dates")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /end_user_authentications/departments:
    delete:
      parameters:
        - description: The department_id to delete.
          in: query
          name: department_id
          required: true
          type: integer
          x-example: '?department_id=1&department_id=2'
      responses:
        '204':
          description: Will not return content on a successful deletion.
      summary: Delete requested department ids.
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE")
              .delete(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.delete("https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE",
              "method": "DELETE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("DELETE", "https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url: 'https://api.directfreight.com/v1/end_user_authentications/departments',
              qs: { department_id: 'SOME_INTEGER_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("DELETE", "https://api.directfreight.com/v1/end_user_authentications/departments");

            req.query({
              "department_id": "SOME_INTEGER_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `DELETE uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("DELETE",
            "'https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/departments');
            $request->setMethod(HTTP_METH_DELETE);

            $request->setQueryData(array(
              'department_id' => 'SOME_INTEGER_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/departments');
            $request->setRequestMethod('DELETE');
            $request->setQuery(new http\QueryString(array(
              'department_id' => 'SOME_INTEGER_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("DELETE", "/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/departments"

            querystring = {"department_id":"SOME_INTEGER_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("DELETE", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url 'https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http DELETE 'https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method DELETE \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    get:
      description: Get departments
      parameters: []
      responses:
        '200':
          description: Get departments
          schema:
            $ref: '#/definitions/departments_response'
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/departments");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications/departments");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/departments\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/departments")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/end_user_authentications/departments")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/departments",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/end_user_authentications/departments");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/departments",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/end_user_authentications/departments',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/end_user_authentications/departments");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/departments"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/departments" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "https://api.directfreight.com/v1/end_user_authentications/departments");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/departments",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/departments');
            $request->setMethod(HTTP_METH_GET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/departments');
            $request->setRequestMethod('GET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/end_user_authentications/departments", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/departments"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications/departments")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.directfreight.com/v1/end_user_authentications/departments \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http GET https://api.directfreight.com/v1/end_user_authentications/departments \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/departments
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/departments")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      parameters:
        - description: The name of the department to create.
          in: query
          name: name
          required: true
          type: string
          x-example: '?name=West-Coast&name=East-Coast'
      responses:
        '201':
          description: successful operation
          schema:
            properties:
              message:
                description: Department created.
                type: string
            type: object
        '422':
          $ref: '#/responses/error_422'
      summary: Create department.
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE")
              .post(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/departments?name=SOME_STRING_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/end_user_authentications/departments',
              qs: { name: 'SOME_STRING_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/end_user_authentications/departments");

            req.query({
              "name": "SOME_STRING_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "'https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/departments');
            $request->setMethod(HTTP_METH_POST);

            $request->setQueryData(array(
              'name' => 'SOME_STRING_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/departments');
            $request->setRequestMethod('POST');
            $request->setQuery(new http\QueryString(array(
              'name' => 'SOME_STRING_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/end_user_authentications/departments?name=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/departments"

            querystring = {"name":"SOME_STRING_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url 'https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http POST 'https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: END_USER_AUTHENTICATIONS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/departments");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/departments\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/departments")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/end_user_authentications/departments")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/departments",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/departments");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/departments",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/end_user_authentications/departments',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/departments");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/departments"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/departments" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/end_user_authentications/departments");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/departments",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/departments');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/departments');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/end_user_authentications/departments", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/departments"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/end_user_authentications/departments")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/end_user_authentications/departments \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/departments \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/departments
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/departments")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  '/end_user_authentications/departments/{department_id}':
    delete:
      parameters:
        - description: The User ID to delete.
          in: query
          name: user_id
          required: true
          type: integer
          x-example: '?user_id=1&user_id=2'
        - description: The email to unlink from the department.
          in: query
          name: email
          required: true
          type: integer
          x-example: '?email=foo@bar.com&email=bar@foo.com'
        - description: Department ID
          in: path
          name: department_id
          required: true
          type: integer
      responses:
        '204':
          description: Will not return content on a successful deletion.
      summary: Delete requested User ID from department.
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE")
              .delete(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.delete("https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE",
              "method": "DELETE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("DELETE", "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url: 'https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D',
              qs: { user_id: 'SOME_INTEGER_VALUE', email: 'SOME_INTEGER_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("DELETE", "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D");

            req.query({
              "user_id": "SOME_INTEGER_VALUE",
              "email": "SOME_INTEGER_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `DELETE uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("DELETE",
            "'https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D');
            $request->setMethod(HTTP_METH_DELETE);

            $request->setQueryData(array(
              'user_id' => 'SOME_INTEGER_VALUE',
              'email' => 'SOME_INTEGER_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D');
            $request->setRequestMethod('DELETE');
            $request->setQuery(new http\QueryString(array(
              'user_id' => 'SOME_INTEGER_VALUE',
              'email' => 'SOME_INTEGER_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("DELETE", "/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D"

            querystring = {"user_id":"SOME_INTEGER_VALUE","email":"SOME_INTEGER_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("DELETE", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url 'https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http DELETE 'https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method DELETE \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    get:
      description: Get departments users
      parameters:
        - description: Department ID
          in: path
          name: department_id
          required: true
          type: integer
      responses:
        '200':
          description: Get departments users
          schema:
            $ref: '#/definitions/department_users_response'
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/departments/%7Bdepartment_id%7D",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D');
            $request->setMethod(HTTP_METH_GET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D');
            $request->setRequestMethod('GET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/end_user_authentications/departments/%7Bdepartment_id%7D", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http GET https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      parameters:
        - description: The User ID to link to the department.
          in: query
          name: user_id
          required: false
          type: string
          x-example: '?user_id=1&user_id=2'
        - description: The email to add to the department.
          in: query
          name: email
          required: false
          type: integer
          x-example: '?email=foo@bar.com&email=bar@foo.com'
        - description: Department ID
          in: path
          name: department_id
          required: true
          type: integer
      responses:
        '201':
          description: successful operation
          schema:
            properties:
              message:
                description: Department user created.
                type: string
            type: object
        '422':
          $ref: '#/responses/error_422'
      summary: Create department user.
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE")
              .post(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D',
              qs: { user_id: 'SOME_STRING_VALUE', email: 'SOME_INTEGER_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D");

            req.query({
              "user_id": "SOME_STRING_VALUE",
              "email": "SOME_INTEGER_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "'https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D');
            $request->setMethod(HTTP_METH_POST);

            $request->setQueryData(array(
              'user_id' => 'SOME_STRING_VALUE',
              'email' => 'SOME_INTEGER_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D');
            $request->setRequestMethod('POST');
            $request->setQuery(new http\QueryString(array(
              'user_id' => 'SOME_STRING_VALUE',
              'email' => 'SOME_INTEGER_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D"

            querystring = {"user_id":"SOME_STRING_VALUE","email":"SOME_INTEGER_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url 'https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http POST 'https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: END_USER_AUTHENTICATIONS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/departments/%7Bdepartment_id%7D",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/end_user_authentications/departments/%7Bdepartment_id%7D", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /end_user_authentications/email:
    patch:
      description: Update a users email address.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              email:
                description: The user's new email address.
                type: string
            required:
              - email
            type: object
      responses:
        '204':
          description: A successful operation.
        '422':
          $ref: '#/responses/error_422'
      summary: STAGE=UNK Update email.
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/email");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"email\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications/email");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"email\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/email\"\n\n\tpayload := strings.NewReader(\"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"email\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/email")
              .patch(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.patch("https://api.directfreight.com/v1/end_user_authentications/email")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"email\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/email",
              "method": "PATCH",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"email\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "email": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("PATCH", "https://api.directfreight.com/v1/end_user_authentications/email");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PATCH",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/email",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ email: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'PATCH',
              url: 'https://api.directfreight.com/v1/end_user_authentications/email',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: { email: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("PATCH", "https://api.directfreight.com/v1/end_user_authentications/email");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "email": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"email": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/email"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PATCH"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/email" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"email\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `PATCH uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("PATCH",
            "https://api.directfreight.com/v1/end_user_authentications/email");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"email":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/email",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PATCH",
              CURLOPT_POSTFIELDS => "{\"email\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('PATCH');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/email');
            $request->setMethod(HttpRequest::HTTP_METH_PATCH);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"email":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"email":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/email');
            $request->setRequestMethod('PATCH');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"email\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("PATCH", "/v1/end_user_authentications/email", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/email"

            payload = "{\"email\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("PATCH", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications/email")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Patch.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"email\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request PATCH \
              --url https://api.directfreight.com/v1/end_user_authentications/email \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"email":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"email":"<ADD EXAMPLE VALUE>"}' |  \
              http PATCH https://api.directfreight.com/v1/end_user_authentications/email \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method PATCH \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"email":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/email
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = ["email": "<ADD EXAMPLE VALUE>"]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/email")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "PATCH"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: END_USER_AUTHENTICATIONS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/email");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/email\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/email")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/end_user_authentications/email")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/email",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/email");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/email",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/end_user_authentications/email',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/email");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/email"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/email" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/end_user_authentications/email");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/email",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/email');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/email');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/end_user_authentications/email", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/email"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/end_user_authentications/email")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/end_user_authentications/email \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/email \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/email
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/email")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /end_user_authentications/passwords:
    get:
      description: Request a forgotten password.
      parameters:
        - description: The user e-mail to send a password to if valid.
          in: query
          name: email_address
          required: true
          type: string
      responses:
        '204':
          description: This will return a success only if the e-mail is in our records.
        '422':
          $ref: '#/responses/error_422'
      summary: STAGE=UNK Retrieve password
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/end_user_authentications/passwords',
              qs: { email_address: 'SOME_STRING_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/end_user_authentications/passwords");

            req.query({
              "email_address": "SOME_STRING_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/passwords');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'email_address' => 'SOME_STRING_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/passwords');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'email_address' => 'SOME_STRING_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/passwords"

            querystring = {"email_address":"SOME_STRING_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    patch:
      description: Update a users password.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              new_password:
                description: The user's new password.
                type: string
              old_password:
                description: Thee user's old password.
                type: string
            required:
              - new_password
              - old_password
            type: object
      responses:
        '204':
          description: A successful operation.
        '422':
          $ref: '#/responses/error_422'
      summary: STAGE=UNK Update password.
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/passwords");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications/passwords");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/passwords\"\n\n\tpayload := strings.NewReader(\"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/passwords")
              .patch(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.patch("https://api.directfreight.com/v1/end_user_authentications/passwords")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/passwords",
              "method": "PATCH",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "new_password": "<ADD EXAMPLE VALUE>",
              "old_password": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("PATCH", "https://api.directfreight.com/v1/end_user_authentications/passwords");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PATCH",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/passwords",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ new_password: '<ADD EXAMPLE VALUE>',
              old_password: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'PATCH',
              url: 'https://api.directfreight.com/v1/end_user_authentications/passwords',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { new_password: '<ADD EXAMPLE VALUE>',
                 old_password: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("PATCH", "https://api.directfreight.com/v1/end_user_authentications/passwords");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "new_password": "<ADD EXAMPLE VALUE>",
              "old_password": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"new_password": @"<ADD EXAMPLE VALUE>",
                                          @"old_password": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/passwords"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PATCH"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/passwords" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `PATCH uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("PATCH",
            "https://api.directfreight.com/v1/end_user_authentications/passwords");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"new_password":"<ADD EXAMPLE VALUE>","old_password":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/passwords",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PATCH",
              CURLOPT_POSTFIELDS => "{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('PATCH');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/passwords');
            $request->setMethod(HttpRequest::HTTP_METH_PATCH);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"new_password":"<ADD EXAMPLE VALUE>","old_password":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"new_password":"<ADD EXAMPLE VALUE>","old_password":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/passwords');
            $request->setRequestMethod('PATCH');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("PATCH", "/v1/end_user_authentications/passwords", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/passwords"

            payload = "{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("PATCH", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications/passwords")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Patch.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request PATCH \
              --url https://api.directfreight.com/v1/end_user_authentications/passwords \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"new_password":"<ADD EXAMPLE VALUE>","old_password":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"new_password":"<ADD EXAMPLE VALUE>","old_password":"<ADD EXAMPLE VALUE>"}' |  \
              http PATCH https://api.directfreight.com/v1/end_user_authentications/passwords \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method PATCH \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"new_password":"<ADD EXAMPLE VALUE>","old_password":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/passwords
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "new_password": "<ADD EXAMPLE VALUE>",
              "old_password": "<ADD EXAMPLE VALUE>"
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/passwords")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "PATCH"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      description: Creates a new password for a user with a recovery key
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              new_password:
                description: The new password they want it updated to.
                type: string
              recovery_key:
                description: The key we e-mailed to a user when they forgot their password. See the GET section.
                type: string
            type: object
      responses:
        '201':
          description: Their password was successfuly updated.
        '422':
          $ref: '#/responses/error_422'
      summary: STAGE=UNK Restore password.
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/passwords");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"recovery_key\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications/passwords");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"recovery_key\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/passwords\"\n\n\tpayload := strings.NewReader(\"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"recovery_key\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"recovery_key\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/passwords")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/end_user_authentications/passwords")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"recovery_key\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/passwords",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"recovery_key\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "new_password": "<ADD EXAMPLE VALUE>",
              "recovery_key": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/end_user_authentications/passwords");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/passwords",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ new_password: '<ADD EXAMPLE VALUE>',
              recovery_key: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/end_user_authentications/passwords',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { new_password: '<ADD EXAMPLE VALUE>',
                 recovery_key: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/end_user_authentications/passwords");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "new_password": "<ADD EXAMPLE VALUE>",
              "recovery_key": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"new_password": @"<ADD EXAMPLE VALUE>",
                                          @"recovery_key": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/passwords"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/passwords" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"recovery_key\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/end_user_authentications/passwords");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"new_password":"<ADD EXAMPLE VALUE>","recovery_key":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/passwords",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"recovery_key\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/passwords');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"new_password":"<ADD EXAMPLE VALUE>","recovery_key":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"new_password":"<ADD EXAMPLE VALUE>","recovery_key":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/passwords');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"recovery_key\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/end_user_authentications/passwords", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/passwords"

            payload = "{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"recovery_key\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications/passwords")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"recovery_key\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/end_user_authentications/passwords \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --data '{"new_password":"<ADD EXAMPLE VALUE>","recovery_key":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"new_password":"<ADD EXAMPLE VALUE>","recovery_key":"<ADD EXAMPLE VALUE>"}' |  \
              http POST https://api.directfreight.com/v1/end_user_authentications/passwords \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"new_password":"<ADD EXAMPLE VALUE>","recovery_key":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/passwords
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "new_password": "<ADD EXAMPLE VALUE>",
              "recovery_key": "<ADD EXAMPLE VALUE>"
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/passwords")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: END_USER_AUTHENTICATIONS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/passwords");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/passwords\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/passwords")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/end_user_authentications/passwords")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/passwords",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/passwords");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/passwords",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/end_user_authentications/passwords',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/passwords");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/passwords"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/passwords" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/end_user_authentications/passwords");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/passwords",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/passwords');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/passwords');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/end_user_authentications/passwords", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/passwords"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/end_user_authentications/passwords")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/end_user_authentications/passwords \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/passwords \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/passwords
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/passwords")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /end_user_authentications/social_login:
    post:
      description: 'Logs in or creates a new account for the user based on their email. "new_account" is what indicates if a new account was created, or if an existing account was used to login.'
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/social_login_credentials'
      responses:
        '201':
          description: successful operation
          schema:
            $ref: '#/definitions/social-login-end-user-token'
        '422':
          $ref: '#/responses/error_422'
      summary: STAGE=Private Social Login/Create Account
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/social_login");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"create_missing_account\":false,\"referrer\":\"<ADD EXAMPLE VALUE>\",\"search_term\":\"<ADD EXAMPLE VALUE>\",\"service\":\"google\",\"token\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications/social_login");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"create_missing_account\":false,\"referrer\":\"<ADD EXAMPLE VALUE>\",\"search_term\":\"<ADD EXAMPLE VALUE>\",\"service\":\"google\",\"token\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/social_login\"\n\n\tpayload := strings.NewReader(\"{\\\"create_missing_account\\\":false,\\\"referrer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"search_term\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"service\\\":\\\"google\\\",\\\"token\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"create_missing_account\":false,\"referrer\":\"<ADD EXAMPLE VALUE>\",\"search_term\":\"<ADD EXAMPLE VALUE>\",\"service\":\"google\",\"token\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/social_login")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/end_user_authentications/social_login")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"create_missing_account\":false,\"referrer\":\"<ADD EXAMPLE VALUE>\",\"search_term\":\"<ADD EXAMPLE VALUE>\",\"service\":\"google\",\"token\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/social_login",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"create_missing_account\":false,\"referrer\":\"<ADD EXAMPLE VALUE>\",\"search_term\":\"<ADD EXAMPLE VALUE>\",\"service\":\"google\",\"token\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "create_missing_account": false,
              "referrer": "<ADD EXAMPLE VALUE>",
              "search_term": "<ADD EXAMPLE VALUE>",
              "service": "google",
              "token": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/end_user_authentications/social_login");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/social_login",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ create_missing_account: false,
              referrer: '<ADD EXAMPLE VALUE>',
              search_term: '<ADD EXAMPLE VALUE>',
              service: 'google',
              token: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/end_user_authentications/social_login',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { create_missing_account: false,
                 referrer: '<ADD EXAMPLE VALUE>',
                 search_term: '<ADD EXAMPLE VALUE>',
                 service: 'google',
                 token: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/end_user_authentications/social_login");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "create_missing_account": false,
              "referrer": "<ADD EXAMPLE VALUE>",
              "search_term": "<ADD EXAMPLE VALUE>",
              "service": "google",
              "token": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"create_missing_account": @NO,
                                          @"referrer": @"<ADD EXAMPLE VALUE>",
                                          @"search_term": @"<ADD EXAMPLE VALUE>",
                                          @"service": @"google",
                                          @"token": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/social_login"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/social_login" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"create_missing_account\":false,\"referrer\":\"<ADD EXAMPLE VALUE>\",\"search_term\":\"<ADD EXAMPLE VALUE>\",\"service\":\"google\",\"token\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/end_user_authentications/social_login");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"create_missing_account":false,"referrer":"<ADD EXAMPLE VALUE>","search_term":"<ADD EXAMPLE VALUE>","service":"google","token":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/social_login",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"create_missing_account\":false,\"referrer\":\"<ADD EXAMPLE VALUE>\",\"search_term\":\"<ADD EXAMPLE VALUE>\",\"service\":\"google\",\"token\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/social_login');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"create_missing_account":false,"referrer":"<ADD EXAMPLE VALUE>","search_term":"<ADD EXAMPLE VALUE>","service":"google","token":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"create_missing_account":false,"referrer":"<ADD EXAMPLE VALUE>","search_term":"<ADD EXAMPLE VALUE>","service":"google","token":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/social_login');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"create_missing_account\":false,\"referrer\":\"<ADD EXAMPLE VALUE>\",\"search_term\":\"<ADD EXAMPLE VALUE>\",\"service\":\"google\",\"token\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/end_user_authentications/social_login", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/social_login"

            payload = "{\"create_missing_account\":false,\"referrer\":\"<ADD EXAMPLE VALUE>\",\"search_term\":\"<ADD EXAMPLE VALUE>\",\"service\":\"google\",\"token\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications/social_login")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"create_missing_account\":false,\"referrer\":\"<ADD EXAMPLE VALUE>\",\"search_term\":\"<ADD EXAMPLE VALUE>\",\"service\":\"google\",\"token\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/end_user_authentications/social_login \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --data '{"create_missing_account":false,"referrer":"<ADD EXAMPLE VALUE>","search_term":"<ADD EXAMPLE VALUE>","service":"google","token":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"create_missing_account":false,"referrer":"<ADD EXAMPLE VALUE>","search_term":"<ADD EXAMPLE VALUE>","service":"google","token":"<ADD EXAMPLE VALUE>"}' |  \
              http POST https://api.directfreight.com/v1/end_user_authentications/social_login \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"create_missing_account":false,"referrer":"<ADD EXAMPLE VALUE>","search_term":"<ADD EXAMPLE VALUE>","service":"google","token":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/social_login
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "create_missing_account": false,
              "referrer": "<ADD EXAMPLE VALUE>",
              "search_term": "<ADD EXAMPLE VALUE>",
              "service": "google",
              "token": "<ADD EXAMPLE VALUE>"
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/social_login")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: END_USER_AUTHENTICATIONS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/social_login");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/social_login\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/social_login")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/end_user_authentications/social_login")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/social_login",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/social_login");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/social_login",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/end_user_authentications/social_login',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/social_login");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/social_login"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/social_login" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/end_user_authentications/social_login");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/social_login",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/social_login');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/social_login');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/end_user_authentications/social_login", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/social_login"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/end_user_authentications/social_login")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/end_user_authentications/social_login \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/social_login \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/social_login
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/social_login")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /end_user_authentications/sub_accounts:
    delete:
      parameters:
        - description: The user_id to unlink from the sub_account.
          in: query
          name: user_id
          required: true
          type: integer
          x-example: '?user_id=1&user_id=2'
        - description: The email to unlink from the sub_account.
          in: query
          name: email
          required: true
          type: integer
          x-example: '?email=foo@bar.com&email=bar@foo.com'
      responses:
        '204':
          description: Will not return content on a successful deletion.
      summary: Unlink requested user_ids from sub account.
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE")
              .delete(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.delete("https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE",
              "method": "DELETE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("DELETE", "https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url: 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts',
              qs: { user_id: 'SOME_INTEGER_VALUE', email: 'SOME_INTEGER_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("DELETE", "https://api.directfreight.com/v1/end_user_authentications/sub_accounts");

            req.query({
              "user_id": "SOME_INTEGER_VALUE",
              "email": "SOME_INTEGER_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `DELETE uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("DELETE",
            "'https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts');
            $request->setMethod(HTTP_METH_DELETE);

            $request->setQueryData(array(
              'user_id' => 'SOME_INTEGER_VALUE',
              'email' => 'SOME_INTEGER_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts');
            $request->setRequestMethod('DELETE');
            $request->setQuery(new http\QueryString(array(
              'user_id' => 'SOME_INTEGER_VALUE',
              'email' => 'SOME_INTEGER_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("DELETE", "/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/sub_accounts"

            querystring = {"user_id":"SOME_INTEGER_VALUE","email":"SOME_INTEGER_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("DELETE", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http DELETE 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method DELETE \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    get:
      description: Get sub account users
      parameters: []
      responses:
        '200':
          description: Sub account users
          schema:
            $ref: '#/definitions/sub_account_response'
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/sub_accounts");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications/sub_accounts");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/sub_accounts")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/end_user_authentications/sub_accounts")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/sub_accounts",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/end_user_authentications/sub_accounts");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/sub_accounts",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/end_user_authentications/sub_accounts");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/sub_accounts"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/sub_accounts" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "https://api.directfreight.com/v1/end_user_authentications/sub_accounts");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/sub_accounts",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts');
            $request->setMethod(HTTP_METH_GET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts');
            $request->setRequestMethod('GET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/end_user_authentications/sub_accounts", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/sub_accounts"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications/sub_accounts")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.directfreight.com/v1/end_user_authentications/sub_accounts \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http GET https://api.directfreight.com/v1/end_user_authentications/sub_accounts \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/sub_accounts
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/sub_accounts")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      parameters:
        - description: The user_id to invite into the sub_account. You can use either user ID or Email to link.
          in: query
          name: user_id
          required: false
          type: integer
          x-example: '?user_id=1&user_id=2'
        - description: The email address to invite into the sub_account. You can use either user ID or Email to link.
          in: query
          name: email
          required: false
          type: integer
          x-example: '?email=user1@domain.com&email=user2@domain.com'
      responses:
        '201':
          description: successful operation
          schema:
            properties:
              message:
                description: Sub account users invited into primary account.
                type: string
            type: object
        '422':
          $ref: '#/responses/error_422'
      summary: Invite Sub Account User.
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE")
              .post(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts',
              qs: { user_id: 'SOME_INTEGER_VALUE', email: 'SOME_INTEGER_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/end_user_authentications/sub_accounts");

            req.query({
              "user_id": "SOME_INTEGER_VALUE",
              "email": "SOME_INTEGER_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "'https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts');
            $request->setMethod(HTTP_METH_POST);

            $request->setQueryData(array(
              'user_id' => 'SOME_INTEGER_VALUE',
              'email' => 'SOME_INTEGER_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts');
            $request->setRequestMethod('POST');
            $request->setQuery(new http\QueryString(array(
              'user_id' => 'SOME_INTEGER_VALUE',
              'email' => 'SOME_INTEGER_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/sub_accounts"

            querystring = {"user_id":"SOME_INTEGER_VALUE","email":"SOME_INTEGER_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http POST 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: END_USER_AUTHENTICATIONS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/sub_accounts");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/sub_accounts")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/end_user_authentications/sub_accounts")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/sub_accounts",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/sub_accounts");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/sub_accounts",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/sub_accounts");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/sub_accounts"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/sub_accounts" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/end_user_authentications/sub_accounts");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/sub_accounts",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/end_user_authentications/sub_accounts", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/sub_accounts"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/end_user_authentications/sub_accounts")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/end_user_authentications/sub_accounts \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/sub_accounts \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/sub_accounts
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/sub_accounts")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /end_user_authentications/sub_accounts/accept_invitation:
    get:
      description: Accept sub-account invitation
      parameters: []
      responses:
        '201':
          description: successful operation
          schema:
            properties:
              message:
                description: Sub-account invitation accepted successfully.
                type: string
            type: object
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/sub_accounts/accept_invitation",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation');
            $request->setMethod(HTTP_METH_GET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation');
            $request->setRequestMethod('GET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/end_user_authentications/sub_accounts/accept_invitation", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http GET https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: END_USER_AUTHENTICATIONS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/sub_accounts/accept_invitation",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/end_user_authentications/sub_accounts/accept_invitation", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /end_user_authentications/sub_accounts/decline_invitation:
    get:
      description: Decline sub-account invitation
      parameters: []
      responses:
        '201':
          description: successful operation
          schema:
            properties:
              message:
                description: Sub-account invitation declined successfully.
                type: string
            type: object
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/sub_accounts/decline_invitation",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation');
            $request->setMethod(HTTP_METH_GET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation');
            $request->setRequestMethod('GET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/end_user_authentications/sub_accounts/decline_invitation", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http GET https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: END_USER_AUTHENTICATIONS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/sub_accounts/decline_invitation",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/end_user_authentications/sub_accounts/decline_invitation", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /end_user_authentications/sub_accounts/pending_invitation:
    get:
      description: Check if current user has pending sub account invitations
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              primary_user_company:
                description: Company of the primary user who invited.
                type: string
              primary_user_email:
                description: Email of the primary user who invited.
                type: string
              primary_user_id:
                description: ID of the primary user who invited.
                type: number
              primary_user_name:
                description: Name of the primary user who invited.
                type: string
              status:
                description: The status of the invitation.
                type: string
            type: object
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/sub_accounts/pending_invitation",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation');
            $request->setMethod(HTTP_METH_GET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation');
            $request->setRequestMethod('GET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/end_user_authentications/sub_accounts/pending_invitation", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http GET https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: END_USER_AUTHENTICATIONS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/sub_accounts/pending_invitation",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/end_user_authentications/sub_accounts/pending_invitation", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /end_user_authentications/users:
    delete:
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '204':
          description: Will not return content on a successful logout.
      summary: Deletes Logged in User
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/users");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications/users");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/users\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/users")
              .delete(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.delete("https://api.directfreight.com/v1/end_user_authentications/users")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/users",
              "method": "DELETE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("DELETE", "https://api.directfreight.com/v1/end_user_authentications/users");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/users",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url: 'https://api.directfreight.com/v1/end_user_authentications/users',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("DELETE", "https://api.directfreight.com/v1/end_user_authentications/users");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/users"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/users" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `DELETE uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("DELETE",
            "https://api.directfreight.com/v1/end_user_authentications/users");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/users",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/users');
            $request->setMethod(HTTP_METH_DELETE);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/users');
            $request->setRequestMethod('DELETE');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("DELETE", "/v1/end_user_authentications/users", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/users"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications/users")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url https://api.directfreight.com/v1/end_user_authentications/users \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http DELETE https://api.directfreight.com/v1/end_user_authentications/users \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method DELETE \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/users
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/users")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/user'
      responses:
        '201':
          description: successful operation
          schema:
            properties:
              end-user-token:
                description: Auto logs in the new user and gives them a token.
                type: string
            required:
              - end-user-token
            type: object
        '422':
          $ref: '#/responses/error_422'
      summary: Create a new user.
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/users");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"email\":\"<ADD EXAMPLE VALUE>\",\"partner\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications/users");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"email\":\"<ADD EXAMPLE VALUE>\",\"partner\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/users\"\n\n\tpayload := strings.NewReader(\"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"partner\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"email\":\"<ADD EXAMPLE VALUE>\",\"partner\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/users")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/end_user_authentications/users")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"email\":\"<ADD EXAMPLE VALUE>\",\"partner\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/users",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"email\":\"<ADD EXAMPLE VALUE>\",\"partner\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "email": "<ADD EXAMPLE VALUE>",
              "partner": "<ADD EXAMPLE VALUE>",
              "password": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/end_user_authentications/users");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/users",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ email: '<ADD EXAMPLE VALUE>',
              partner: '<ADD EXAMPLE VALUE>',
              password: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/end_user_authentications/users',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { email: '<ADD EXAMPLE VALUE>',
                 partner: '<ADD EXAMPLE VALUE>',
                 password: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/end_user_authentications/users");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "email": "<ADD EXAMPLE VALUE>",
              "partner": "<ADD EXAMPLE VALUE>",
              "password": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"email": @"<ADD EXAMPLE VALUE>",
                                          @"partner": @"<ADD EXAMPLE VALUE>",
                                          @"password": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/users"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/users" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"email\":\"<ADD EXAMPLE VALUE>\",\"partner\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/end_user_authentications/users");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"email":"<ADD EXAMPLE VALUE>","partner":"<ADD EXAMPLE VALUE>","password":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/users",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"email\":\"<ADD EXAMPLE VALUE>\",\"partner\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/users');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"email":"<ADD EXAMPLE VALUE>","partner":"<ADD EXAMPLE VALUE>","password":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"email":"<ADD EXAMPLE VALUE>","partner":"<ADD EXAMPLE VALUE>","password":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/users');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"email\":\"<ADD EXAMPLE VALUE>\",\"partner\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/end_user_authentications/users", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/users"

            payload = "{\"email\":\"<ADD EXAMPLE VALUE>\",\"partner\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications/users")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"email\":\"<ADD EXAMPLE VALUE>\",\"partner\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/end_user_authentications/users \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --data '{"email":"<ADD EXAMPLE VALUE>","partner":"<ADD EXAMPLE VALUE>","password":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"email":"<ADD EXAMPLE VALUE>","partner":"<ADD EXAMPLE VALUE>","password":"<ADD EXAMPLE VALUE>"}' |  \
              http POST https://api.directfreight.com/v1/end_user_authentications/users \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"email":"<ADD EXAMPLE VALUE>","partner":"<ADD EXAMPLE VALUE>","password":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/users
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "email": "<ADD EXAMPLE VALUE>",
              "partner": "<ADD EXAMPLE VALUE>",
              "password": "<ADD EXAMPLE VALUE>"
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/users")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: END_USER_AUTHENTICATIONS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/users");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/users\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/users")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/end_user_authentications/users")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/users",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/users");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/users",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/end_user_authentications/users',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/users");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/users"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/users" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/end_user_authentications/users");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/users",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/users');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/users');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/end_user_authentications/users", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/users"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/end_user_authentications/users")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/end_user_authentications/users \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/users \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/users
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/users")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /end_user_authentications/uuids:
    get:
      description: Get or create a user specific UUID.
      parameters: []
      responses:
        '200':
          description: successful operation
          examples:
            application/json: |-
              {
                "uuid": "B542E92E-7359-4096-9382-0D5AD324808D"
              }
          schema:
            properties:
              uuid:
                description: The logged in users UUID.
                type: string
            type: object
      summary: Retrieve UUID
      tags:
        - end_user_authentications
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/uuids");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/end_user_authentications/uuids");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/uuids\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/uuids")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/end_user_authentications/uuids")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/uuids",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/end_user_authentications/uuids");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/uuids",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/end_user_authentications/uuids',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/end_user_authentications/uuids");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/uuids"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/uuids" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "https://api.directfreight.com/v1/end_user_authentications/uuids");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/uuids",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/uuids');
            $request->setMethod(HTTP_METH_GET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/uuids');
            $request->setRequestMethod('GET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/end_user_authentications/uuids", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/uuids"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/end_user_authentications/uuids")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.directfreight.com/v1/end_user_authentications/uuids \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http GET https://api.directfreight.com/v1/end_user_authentications/uuids \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/uuids
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/uuids")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: END_USER_AUTHENTICATIONS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/end_user_authentications/uuids");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/uuids\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/end_user_authentications/uuids")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/end_user_authentications/uuids")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/end_user_authentications/uuids",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/uuids");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/end_user_authentications/uuids",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/end_user_authentications/uuids',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/end_user_authentications/uuids");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/end_user_authentications/uuids"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/end_user_authentications/uuids" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/end_user_authentications/uuids");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/end_user_authentications/uuids",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/end_user_authentications/uuids');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/uuids');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/end_user_authentications/uuids", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/end_user_authentications/uuids"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/end_user_authentications/uuids")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/end_user_authentications/uuids \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/uuids \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/end_user_authentications/uuids
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/end_user_authentications/uuids")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /locations/autocomplete:
    get:
      description: 'Searches a string of a partial city or state name, and returns a list of possible matches.'
      parameters:
        - description: 'City or State or Postal code to search for.   It matches city name and state name and state abbreviation.  So for instance "MO" would return Missouri, Montana, and Montreal, QC  while  ME would return Maine, Mexico, and Memphis, TN'
          in: query
          name: searchtext
          required: true
          type: string
        - description: 'restricts the results return.  regions will only return states, provinces, and countries.  cities will only return cities and postals.  The default is to return both cities and regions in the results.'
          enum:
            - cities
            - regions
          in: query
          name: return_only
          required: false
          type: string
        - description: Specify the page that is calling this endpoint.
          enum:
            - mileage_calculator
            - freight_rates
          in: query
          name: requesting_page
          required: false
          type: string
        - default: 100
          description: The number of records to return.   Limit 1 has a special property where it will only return a high confidence match so it may return zero results if no match found.
          in: query
          maximum: 100
          minimum: 1
          name: limit
          required: false
          type: number
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/autocomplete_response'
      summary: autocomplete
      tags:
        - locations
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/locations/autocomplete',
              qs: 
               { searchtext: 'SOME_STRING_VALUE',
                 return_only: 'SOME_STRING_VALUE',
                 requesting_page: 'SOME_STRING_VALUE',
                 limit: '100' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/locations/autocomplete");

            req.query({
              "searchtext": "SOME_STRING_VALUE",
              "return_only": "SOME_STRING_VALUE",
              "requesting_page": "SOME_STRING_VALUE",
              "limit": "100"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/locations/autocomplete');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'searchtext' => 'SOME_STRING_VALUE',
              'return_only' => 'SOME_STRING_VALUE',
              'requesting_page' => 'SOME_STRING_VALUE',
              'limit' => '100'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/locations/autocomplete');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'searchtext' => 'SOME_STRING_VALUE',
              'return_only' => 'SOME_STRING_VALUE',
              'requesting_page' => 'SOME_STRING_VALUE',
              'limit' => '100'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/locations/autocomplete"

            querystring = {"searchtext":"SOME_STRING_VALUE","return_only":"SOME_STRING_VALUE","requesting_page":"SOME_STRING_VALUE","limit":"100"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: LOCATIONS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/locations/autocomplete");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/locations/autocomplete\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/locations/autocomplete")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/locations/autocomplete")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/locations/autocomplete",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/locations/autocomplete");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/locations/autocomplete",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/locations/autocomplete',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/locations/autocomplete");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/locations/autocomplete"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/locations/autocomplete" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/locations/autocomplete");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/locations/autocomplete",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/locations/autocomplete');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/locations/autocomplete');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/locations/autocomplete", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/locations/autocomplete"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/locations/autocomplete")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/locations/autocomplete \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/locations/autocomplete \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/locations/autocomplete
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/locations/autocomplete")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /locations/reverse_geocode:
    get:
      description: returns the nearest city to a lat/lon point. (reverse geocode)
      parameters:
        - format: float
          in: query
          name: latitude
          required: true
          type: number
        - format: float
          in: query
          name: longitude
          required: true
          type: number
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/reverse_geocode_response'
      summary: reverse_geocode
      tags:
        - locations
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/locations/reverse_geocode',
              qs: 
               { latitude: 'SOME_NUMBER_VALUE',
                 longitude: 'SOME_NUMBER_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/locations/reverse_geocode");

            req.query({
              "latitude": "SOME_NUMBER_VALUE",
              "longitude": "SOME_NUMBER_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/locations/reverse_geocode');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'latitude' => 'SOME_NUMBER_VALUE',
              'longitude' => 'SOME_NUMBER_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/locations/reverse_geocode');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'latitude' => 'SOME_NUMBER_VALUE',
              'longitude' => 'SOME_NUMBER_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/locations/reverse_geocode"

            querystring = {"latitude":"SOME_NUMBER_VALUE","longitude":"SOME_NUMBER_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: LOCATIONS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/locations/reverse_geocode");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/locations/reverse_geocode\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/locations/reverse_geocode")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/locations/reverse_geocode")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/locations/reverse_geocode",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/locations/reverse_geocode");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/locations/reverse_geocode",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/locations/reverse_geocode',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/locations/reverse_geocode");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/locations/reverse_geocode"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/locations/reverse_geocode" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/locations/reverse_geocode");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/locations/reverse_geocode",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/locations/reverse_geocode');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/locations/reverse_geocode');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/locations/reverse_geocode", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/locations/reverse_geocode"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/locations/reverse_geocode")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/locations/reverse_geocode \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/locations/reverse_geocode \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/locations/reverse_geocode
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/locations/reverse_geocode")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /mobile_updates:
    get:
      parameters:
        - in: query
          name: email_address
          required: false
          type: string
      responses:
        '200':
          description: Status 200
          schema:
            properties:
              bullet_points:
                items:
                  default: '[]'
                  type: string
                type: array
              information_url:
                default: 'null'
                type: string
              message:
                default: 'null'
                type: string
              title:
                default: 'null'
                type: string
              update_url:
                default: 'null'
                type: string
            required:
              - bullet_points
              - information_url
              - message
              - title
              - update_url
            type: object
      summary: STAGE=Private Get any available update information.
      tags:
        - mobile update
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/mobile_updates?email_address=SOME_STRING_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/mobile_updates',
              qs: { email_address: 'SOME_STRING_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/mobile_updates");

            req.query({
              "email_address": "SOME_STRING_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/mobile_updates');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'email_address' => 'SOME_STRING_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/mobile_updates');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'email_address' => 'SOME_STRING_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/mobile_updates?email_address=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/mobile_updates"

            querystring = {"email_address":"SOME_STRING_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: Mobile Update
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/mobile_updates");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/mobile_updates\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/mobile_updates")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/mobile_updates")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/mobile_updates",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/mobile_updates");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/mobile_updates",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/mobile_updates',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/mobile_updates");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/mobile_updates"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/mobile_updates" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/mobile_updates");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/mobile_updates",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/mobile_updates');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/mobile_updates');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/mobile_updates", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/mobile_updates"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/mobile_updates")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/mobile_updates \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/mobile_updates \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/mobile_updates
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/mobile_updates")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /optins:
    delete:
      description: By only sending in their EUA token you would be requesting to opt them out of everything.
      parameters:
        - enum:
            - email
            - text
            - push
          in: query
          name: notification_medium
          required: false
          type: string
        - default: all
          description: This would allow granular optouts. Currently ignored.
          enum:
            - all
            - alerts
          in: query
          name: notification_channel
          required: false
          type: string
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '204':
          description: Status 204
      summary: STAGE=UNK Opt someone out of one or more mediums and channels.
      tags:
        - optins
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all")
              .delete(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.delete("https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all",
              "method": "DELETE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("DELETE", "https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url: 'https://api.directfreight.com/v1/optins',
              qs: 
               { notification_medium: 'SOME_STRING_VALUE',
                 notification_channel: 'all' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("DELETE", "https://api.directfreight.com/v1/optins");

            req.query({
              "notification_medium": "SOME_STRING_VALUE",
              "notification_channel": "all"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `DELETE uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("DELETE",
            "'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/optins');
            $request->setMethod(HTTP_METH_DELETE);

            $request->setQueryData(array(
              'notification_medium' => 'SOME_STRING_VALUE',
              'notification_channel' => 'all'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/optins');
            $request->setRequestMethod('DELETE');
            $request->setQuery(new http\QueryString(array(
              'notification_medium' => 'SOME_STRING_VALUE',
              'notification_channel' => 'all'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("DELETE", "/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/optins"

            querystring = {"notification_medium":"SOME_STRING_VALUE","notification_channel":"all"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("DELETE", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url 'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http DELETE 'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method DELETE \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    get:
      parameters:
        - description: To limit your list to just one medium.
          enum:
            - email
            - text
            - push
          in: query
          name: notification_medium
          required: true
          type: string
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: Status 200
          schema:
            properties:
              list:
                items:
                  properties:
                    notification_channel:
                      default: all
                      type: string
                    notification_medium:
                      enum:
                        - email
                        - text
                        - push
                      type: string
                    status:
                      enum:
                        - optin
                        - optout
                        - no response
                        - no record
                      type: string
                  required:
                    - notification_channel
                    - notification_medium
                    - status
                  type: object
                type: array
            required:
              - list
            type: object
      summary: STAGE=UNK Get the optin status of a user.
      tags:
        - optins
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/optins?notification_medium=SOME_STRING_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/optins',
              qs: { notification_medium: 'SOME_STRING_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/optins");

            req.query({
              "notification_medium": "SOME_STRING_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/optins');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'notification_medium' => 'SOME_STRING_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/optins');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'notification_medium' => 'SOME_STRING_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/optins?notification_medium=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/optins"

            querystring = {"notification_medium":"SOME_STRING_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    patch:
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              notification_medium:
                enum:
                  - email
                  - text
                type: string
              verification_code:
                description: 'This code is generated on a POST, and will arrive via the same medium it was designated for.'
                type: string
            required:
              - notification_medium
              - verification_code
            type: object
      responses:
        '204':
          description: Status 204
      summary: STAGE=UNK Confirm an optin.
      tags:
        - optins
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/optins");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/optins");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins\"\n\n\tpayload := strings.NewReader(\"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/optins")
              .patch(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.patch("https://api.directfreight.com/v1/optins")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/optins",
              "method": "PATCH",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "notification_medium": "email",
              "verification_code": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("PATCH", "https://api.directfreight.com/v1/optins");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PATCH",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/optins",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ notification_medium: 'email',
              verification_code: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'PATCH',
              url: 'https://api.directfreight.com/v1/optins',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { notification_medium: 'email',
                 verification_code: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("PATCH", "https://api.directfreight.com/v1/optins");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "notification_medium": "email",
              "verification_code": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"notification_medium": @"email",
                                          @"verification_code": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/optins"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PATCH"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/optins" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `PATCH uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("PATCH",
            "https://api.directfreight.com/v1/optins");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"notification_medium":"email","verification_code":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/optins",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PATCH",
              CURLOPT_POSTFIELDS => "{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('PATCH');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/optins');
            $request->setMethod(HttpRequest::HTTP_METH_PATCH);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"notification_medium":"email","verification_code":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"notification_medium":"email","verification_code":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/optins');
            $request->setRequestMethod('PATCH');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("PATCH", "/v1/optins", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/optins"

            payload = "{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("PATCH", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/optins")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Patch.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request PATCH \
              --url https://api.directfreight.com/v1/optins \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"notification_medium":"email","verification_code":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"notification_medium":"email","verification_code":"<ADD EXAMPLE VALUE>"}' |  \
              http PATCH https://api.directfreight.com/v1/optins \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method PATCH \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"notification_medium":"email","verification_code":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/optins
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "notification_medium": "email",
              "verification_code": "<ADD EXAMPLE VALUE>"
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/optins")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "PATCH"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      description: 'Currently only Push notifications are implemented. With them a post creates and approves the optin. Later on when text/email is ported post will create the optin with the status of ''no response'' meaning they haven''t replied with the propper code, or clicked an authorization link.'
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              notification_channel:
                default: all
                description: 'Currently defaults to all, and is ignored. When we start using it it will be for opting people out or in one list like alerts, or messages, but not others.'
                type: string
              notification_medium:
                description: We currently only accept push
                enum:
                  - email
                  - text
                  - push
                type: string
              tokens:
                description: 'This is how you can add multiple push notifications at once, or for systems that have multiple tokens required.'
                example: '"tokens": { "ios": "12345678", "android": "5432344" } '
                properties:
                  $SERVICE_OR_KEY_NAME:
                    description: 'Fill in the key in the value, and the service in the name. Look at our examples for clarification.'
                    type: string
                required:
                  - $SERVICE_OR_KEY_NAME
                type: object
            required:
              - notification_medium
            type: object
      responses:
        '201':
          description: Status 201
      summary: STAGE=UNK Submit a request to be opted in.
      tags:
        - optins
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/optins");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/optins");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins\"\n\n\tpayload := strings.NewReader(\"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/optins")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/optins")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/optins",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "notification_channel": "<ADD EXAMPLE VALUE>",
              "notification_medium": "email",
              "tokens": {
                "$SERVICE_OR_KEY_NAME": "<ADD EXAMPLE VALUE>"
              }
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/optins");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/optins",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ notification_channel: '<ADD EXAMPLE VALUE>',
              notification_medium: 'email',
              tokens: { '$SERVICE_OR_KEY_NAME': '<ADD EXAMPLE VALUE>' } }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/optins',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { notification_channel: '<ADD EXAMPLE VALUE>',
                 notification_medium: 'email',
                 tokens: { '$SERVICE_OR_KEY_NAME': '<ADD EXAMPLE VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/optins");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "notification_channel": "<ADD EXAMPLE VALUE>",
              "notification_medium": "email",
              "tokens": {
                "$SERVICE_OR_KEY_NAME": "<ADD EXAMPLE VALUE>"
              }
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"notification_channel": @"<ADD EXAMPLE VALUE>",
                                          @"notification_medium": @"email",
                                          @"tokens": @{ @"$SERVICE_OR_KEY_NAME": @"<ADD EXAMPLE VALUE>" } };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/optins"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/optins" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/optins");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"notification_channel":"<ADD EXAMPLE VALUE>","notification_medium":"email","tokens":{"$SERVICE_OR_KEY_NAME":"<ADD EXAMPLE VALUE>"}}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/optins",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/optins');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"notification_channel":"<ADD EXAMPLE VALUE>","notification_medium":"email","tokens":{"$SERVICE_OR_KEY_NAME":"<ADD EXAMPLE VALUE>"}}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"notification_channel":"<ADD EXAMPLE VALUE>","notification_medium":"email","tokens":{"$SERVICE_OR_KEY_NAME":"<ADD EXAMPLE VALUE>"}}');

            $request->setRequestUrl('https://api.directfreight.com/v1/optins');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/optins", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/optins"

            payload = "{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/optins")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/optins \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"notification_channel":"<ADD EXAMPLE VALUE>","notification_medium":"email","tokens":{"$SERVICE_OR_KEY_NAME":"<ADD EXAMPLE VALUE>"}}'
        - lang: Shell_httpie
          source: |-
            echo '{"notification_channel":"<ADD EXAMPLE VALUE>","notification_medium":"email","tokens":{"$SERVICE_OR_KEY_NAME":"<ADD EXAMPLE VALUE>"}}' |  \
              http POST https://api.directfreight.com/v1/optins \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"notification_channel":"<ADD EXAMPLE VALUE>","notification_medium":"email","tokens":{"$SERVICE_OR_KEY_NAME":"<ADD EXAMPLE VALUE>"}}' \
              --output-document \
              - https://api.directfreight.com/v1/optins
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "notification_channel": "<ADD EXAMPLE VALUE>",
              "notification_medium": "email",
              "tokens": ["$SERVICE_OR_KEY_NAME": "<ADD EXAMPLE VALUE>"]
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/optins")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: Optins
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/optins");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/optins")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/optins")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/optins",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/optins");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/optins",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/optins',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/optins");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/optins"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/optins" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/optins");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/optins",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/optins');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/optins');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/optins", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/optins"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/optins")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/optins \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/optins \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/optins
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/optins")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /optins/load_alert_sound:
    get:
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: Status 200
          schema:
            properties:
              enabled:
                type: boolean
            type: object
      summary: STAGE=UNK Check if a user has enabled audio notifications on the web for new load alerts.
      tags:
        - optins
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/optins/load_alert_sound");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/optins/load_alert_sound");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins/load_alert_sound\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/optins/load_alert_sound")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/optins/load_alert_sound")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/optins/load_alert_sound",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/optins/load_alert_sound");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/optins/load_alert_sound",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/optins/load_alert_sound',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/optins/load_alert_sound");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/optins/load_alert_sound"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/optins/load_alert_sound" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "https://api.directfreight.com/v1/optins/load_alert_sound");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/optins/load_alert_sound",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/optins/load_alert_sound');
            $request->setMethod(HTTP_METH_GET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/optins/load_alert_sound');
            $request->setRequestMethod('GET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/optins/load_alert_sound", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/optins/load_alert_sound"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/optins/load_alert_sound")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.directfreight.com/v1/optins/load_alert_sound \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET https://api.directfreight.com/v1/optins/load_alert_sound \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/optins/load_alert_sound
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/optins/load_alert_sound")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    patch:
      description: Toggle audio notifications.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              enabled:
                description: true/false
                type: boolean
            required:
              - enabled
            type: object
      responses:
        '204':
          description: Status 204
      summary: STAGE=UNK Toggles audio notifications for web new load load alerts.
      tags:
        - optins
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/optins/load_alert_sound");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"enabled\":false}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/optins/load_alert_sound");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"enabled\":false}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins/load_alert_sound\"\n\n\tpayload := strings.NewReader(\"{\\\"enabled\\\":false}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"enabled\":false}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/optins/load_alert_sound")
              .patch(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.patch("https://api.directfreight.com/v1/optins/load_alert_sound")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"enabled\":false}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/optins/load_alert_sound",
              "method": "PATCH",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"enabled\":false}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "enabled": false
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("PATCH", "https://api.directfreight.com/v1/optins/load_alert_sound");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PATCH",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/optins/load_alert_sound",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ enabled: false }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'PATCH',
              url: 'https://api.directfreight.com/v1/optins/load_alert_sound',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: { enabled: false },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("PATCH", "https://api.directfreight.com/v1/optins/load_alert_sound");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "enabled": false
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"enabled": @NO };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/optins/load_alert_sound"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PATCH"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/optins/load_alert_sound" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"enabled\":false}" in

            Client.call ~headers ~body `PATCH uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("PATCH",
            "https://api.directfreight.com/v1/optins/load_alert_sound");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"enabled":false}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/optins/load_alert_sound",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PATCH",
              CURLOPT_POSTFIELDS => "{\"enabled\":false}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('PATCH');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/optins/load_alert_sound');
            $request->setMethod(HttpRequest::HTTP_METH_PATCH);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"enabled":false}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"enabled":false}');

            $request->setRequestUrl('https://api.directfreight.com/v1/optins/load_alert_sound');
            $request->setRequestMethod('PATCH');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"enabled\":false}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("PATCH", "/v1/optins/load_alert_sound", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/optins/load_alert_sound"

            payload = "{\"enabled\":false}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("PATCH", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/optins/load_alert_sound")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Patch.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"enabled\":false}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request PATCH \
              --url https://api.directfreight.com/v1/optins/load_alert_sound \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"enabled":false}'
        - lang: Shell_httpie
          source: |-
            echo '{"enabled":false}' |  \
              http PATCH https://api.directfreight.com/v1/optins/load_alert_sound \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method PATCH \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"enabled":false}' \
              --output-document \
              - https://api.directfreight.com/v1/optins/load_alert_sound
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = ["enabled": false]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/optins/load_alert_sound")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "PATCH"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: Optins
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/optins/load_alert_sound");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins/load_alert_sound\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/optins/load_alert_sound")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/optins/load_alert_sound")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/optins/load_alert_sound",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/optins/load_alert_sound");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/optins/load_alert_sound",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/optins/load_alert_sound',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/optins/load_alert_sound");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/optins/load_alert_sound"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/optins/load_alert_sound" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/optins/load_alert_sound");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/optins/load_alert_sound",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/optins/load_alert_sound');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/optins/load_alert_sound');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/optins/load_alert_sound", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/optins/load_alert_sound"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/optins/load_alert_sound")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/optins/load_alert_sound \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/optins/load_alert_sound \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/optins/load_alert_sound
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/optins/load_alert_sound")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /optins/search_data:
    get:
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: Status 200
          schema:
            properties:
              enabled:
                type: boolean
            type: object
      summary: STAGE=UNK Check if a user has enabled search data opt in.
      tags:
        - optins
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/optins/search_data");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/optins/search_data");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins/search_data\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/optins/search_data")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/optins/search_data")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/optins/search_data",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/optins/search_data");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/optins/search_data",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/optins/search_data',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/optins/search_data");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/optins/search_data"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/optins/search_data" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "https://api.directfreight.com/v1/optins/search_data");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/optins/search_data",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/optins/search_data');
            $request->setMethod(HTTP_METH_GET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/optins/search_data');
            $request->setRequestMethod('GET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/optins/search_data", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/optins/search_data"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/optins/search_data")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.directfreight.com/v1/optins/search_data \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET https://api.directfreight.com/v1/optins/search_data \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/optins/search_data
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/optins/search_data")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    patch:
      description: Toggle search data opt in.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              enabled:
                description: true/false
                type: boolean
            required:
              - enabled
            type: object
      responses:
        '204':
          description: Status 204
      summary: STAGE=UNK Toggle search data opt in.
      tags:
        - optins
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/optins/search_data");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"enabled\":false}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/optins/search_data");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"enabled\":false}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins/search_data\"\n\n\tpayload := strings.NewReader(\"{\\\"enabled\\\":false}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"enabled\":false}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/optins/search_data")
              .patch(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.patch("https://api.directfreight.com/v1/optins/search_data")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"enabled\":false}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/optins/search_data",
              "method": "PATCH",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"enabled\":false}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "enabled": false
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("PATCH", "https://api.directfreight.com/v1/optins/search_data");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PATCH",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/optins/search_data",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ enabled: false }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'PATCH',
              url: 'https://api.directfreight.com/v1/optins/search_data',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: { enabled: false },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("PATCH", "https://api.directfreight.com/v1/optins/search_data");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "enabled": false
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"enabled": @NO };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/optins/search_data"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PATCH"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/optins/search_data" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"enabled\":false}" in

            Client.call ~headers ~body `PATCH uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("PATCH",
            "https://api.directfreight.com/v1/optins/search_data");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"enabled":false}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/optins/search_data",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PATCH",
              CURLOPT_POSTFIELDS => "{\"enabled\":false}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('PATCH');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/optins/search_data');
            $request->setMethod(HttpRequest::HTTP_METH_PATCH);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"enabled":false}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"enabled":false}');

            $request->setRequestUrl('https://api.directfreight.com/v1/optins/search_data');
            $request->setRequestMethod('PATCH');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"enabled\":false}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("PATCH", "/v1/optins/search_data", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/optins/search_data"

            payload = "{\"enabled\":false}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("PATCH", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/optins/search_data")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Patch.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"enabled\":false}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request PATCH \
              --url https://api.directfreight.com/v1/optins/search_data \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"enabled":false}'
        - lang: Shell_httpie
          source: |-
            echo '{"enabled":false}' |  \
              http PATCH https://api.directfreight.com/v1/optins/search_data \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method PATCH \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"enabled":false}' \
              --output-document \
              - https://api.directfreight.com/v1/optins/search_data
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = ["enabled": false]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/optins/search_data")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "PATCH"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: Optins
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/optins/search_data");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins/search_data\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/optins/search_data")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/optins/search_data")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/optins/search_data",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/optins/search_data");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/optins/search_data",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/optins/search_data',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/optins/search_data");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/optins/search_data"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/optins/search_data" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/optins/search_data");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/optins/search_data",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/optins/search_data');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/optins/search_data');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/optins/search_data", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/optins/search_data"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/optins/search_data")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/optins/search_data \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/optins/search_data \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/optins/search_data
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/optins/search_data")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /optins/web_push:
    delete:
      description: Opt Out of web push notifications.
      parameters:
        - description: the onesignal player_id as returned by them when a user subscribes.
          in: query
          name: player_id
          required: true
          type: string
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '204':
          description: Status 204
      summary: STAGE=UNK Opt someone out of web push notifications.
      tags:
        - optins
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE")
              .delete(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.delete("https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE",
              "method": "DELETE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("DELETE", "https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/optins/web_push?player_id=SOME_STRING_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url: 'https://api.directfreight.com/v1/optins/web_push',
              qs: { player_id: 'SOME_STRING_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("DELETE", "https://api.directfreight.com/v1/optins/web_push");

            req.query({
              "player_id": "SOME_STRING_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `DELETE uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("DELETE",
            "'https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/optins/web_push');
            $request->setMethod(HTTP_METH_DELETE);

            $request->setQueryData(array(
              'player_id' => 'SOME_STRING_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/optins/web_push');
            $request->setRequestMethod('DELETE');
            $request->setQuery(new http\QueryString(array(
              'player_id' => 'SOME_STRING_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("DELETE", "/v1/optins/web_push?player_id=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/optins/web_push"

            querystring = {"player_id":"SOME_STRING_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("DELETE", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url 'https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http DELETE 'https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method DELETE \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    get:
      parameters:
        - description: The OneSignal player_id as returned by them when a user subscribes. If this parameter is not provided the API will return true if the User has any player_id subscribed.
          in: query
          name: player_id
          required: false
          type: string
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: Status 200
          schema:
            properties:
              subscribed:
                type: boolean
            type: object
      summary: STAGE=UNK Check if a users player_id is subscribed to web push notifications.
      tags:
        - optins
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/optins/web_push?player_id=SOME_STRING_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/optins/web_push',
              qs: { player_id: 'SOME_STRING_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/optins/web_push");

            req.query({
              "player_id": "SOME_STRING_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/optins/web_push');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'player_id' => 'SOME_STRING_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/optins/web_push');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'player_id' => 'SOME_STRING_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/optins/web_push?player_id=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/optins/web_push"

            querystring = {"player_id":"SOME_STRING_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      description: Register a OneSignal player_id in DirectFreight for web push notifications.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              player_id:
                default: all
                description: The OneSignal player_id as returned by them when a user subscribes.
                type: string
            required:
              - player_id
            type: object
      responses:
        '202':
          description: Accepted
          schema:
            properties:
              subscribed:
                type: boolean
            type: object
      summary: STAGE=UNK Register a OneSignal player_id in the DirectFreight database.
      tags:
        - optins
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/optins/web_push");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"player_id\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/optins/web_push");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"player_id\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins/web_push\"\n\n\tpayload := strings.NewReader(\"{\\\"player_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"player_id\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/optins/web_push")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/optins/web_push")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"player_id\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/optins/web_push",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"player_id\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "player_id": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/optins/web_push");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/optins/web_push",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ player_id: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/optins/web_push',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: { player_id: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/optins/web_push");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "player_id": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"player_id": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/optins/web_push"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/optins/web_push" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"player_id\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/optins/web_push");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"player_id":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/optins/web_push",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"player_id\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/optins/web_push');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"player_id":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"player_id":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/optins/web_push');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"player_id\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/optins/web_push", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/optins/web_push"

            payload = "{\"player_id\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/optins/web_push")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"player_id\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/optins/web_push \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"player_id":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"player_id":"<ADD EXAMPLE VALUE>"}' |  \
              http POST https://api.directfreight.com/v1/optins/web_push \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"player_id":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/optins/web_push
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = ["player_id": "<ADD EXAMPLE VALUE>"]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/optins/web_push")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: Optins
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/optins/web_push");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins/web_push\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/optins/web_push")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/optins/web_push")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/optins/web_push",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/optins/web_push");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/optins/web_push",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/optins/web_push',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/optins/web_push");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/optins/web_push"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/optins/web_push" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/optins/web_push");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/optins/web_push",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/optins/web_push');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/optins/web_push');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/optins/web_push", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/optins/web_push"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/optins/web_push")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/optins/web_push \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/optins/web_push \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/optins/web_push
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/optins/web_push")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  '/postings/{posting_type}':
    delete:
      description: 'Will delete one or more entries. Unless the delete_all parameter is set, only 100 entries can be removed per request.'
      parameters:
        - description: Specifies board you are posting to.
          enum:
            - loads
            - trucks
            - private_loads
            - private_trucks
            - test_loads
            - test_trucks
          in: path
          name: posting_type
          required: true
          type: string
          x-example: test_loads
        - description: 'This parameter will be ignored if delete_all is specified, otherwise posting_id or custom_id must be specified. The 100 maximum is split between posting_id & custom_id.'
          in: query
          name: posting_id
          required: false
          type: integer
          x-example: '?posting_id=22&posting_id=23&posting_id=24'
        - description: 'You must specify which entry to remove. Will be ignored if delete_all is specified, otherwise it or posting_id must be specified. The 100 maximum is split between posting_id & custom_id.'
          in: query
          name: custom_id
          required: false
          type: string
          x-example: '?custom_id=cats&custom_id=dogs&custom_id=parrots'
        - description: 'If included and true, will delete all loads for the logged in user.'
          in: query
          name: delete_all
          required: false
          type: boolean
          x-example: '?delete_all=true'
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '204':
          description: success operation
      summary: Remove multiple postings
      tags:
        - postings
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE")
              .delete(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.delete("https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE",
              "method": "DELETE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("DELETE", "https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url: 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D',
              qs: 
               { posting_id: 'SOME_INTEGER_VALUE',
                 custom_id: 'SOME_STRING_VALUE',
                 delete_all: 'SOME_BOOLEAN_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("DELETE", "https://api.directfreight.com/v1/postings/%7Bposting_type%7D");

            req.query({
              "posting_id": "SOME_INTEGER_VALUE",
              "custom_id": "SOME_STRING_VALUE",
              "delete_all": "SOME_BOOLEAN_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `DELETE uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("DELETE",
            "'https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D');
            $request->setMethod(HTTP_METH_DELETE);

            $request->setQueryData(array(
              'posting_id' => 'SOME_INTEGER_VALUE',
              'custom_id' => 'SOME_STRING_VALUE',
              'delete_all' => 'SOME_BOOLEAN_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D');
            $request->setRequestMethod('DELETE');
            $request->setQuery(new http\QueryString(array(
              'posting_id' => 'SOME_INTEGER_VALUE',
              'custom_id' => 'SOME_STRING_VALUE',
              'delete_all' => 'SOME_BOOLEAN_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("DELETE", "/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/%7Bposting_type%7D"

            querystring = {"posting_id":"SOME_INTEGER_VALUE","custom_id":"SOME_STRING_VALUE","delete_all":"SOME_BOOLEAN_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("DELETE", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http DELETE 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method DELETE \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    get:
      description: 'Retrieves a list of the users posted loads or trucks. By default it retrieves all of their entries. If you specifiy multiple ids, only 100 entries can be retrieved per request.'
      parameters:
        - description: Specifies board you are posting to.
          enum:
            - loads
            - trucks
            - private_loads
            - private_trucks
            - test_loads
            - test_trucks
          in: path
          name: posting_type
          required: true
          type: string
          x-example: test_loads
        - collectionFormat: multi
          description: To retrieve only a subset of entries owned by the user specify one or more posting_id(s) or custom_id(s).
          in: query
          items:
            type: integer
          name: posting_id
          required: false
          type: array
          x-example: '?posting_id=22&posting_id=23&posting_id=24'
        - collectionFormat: multi
          description: To retrieve only a subset of entries owned by the user specify one or more posting_id(s) or custom_id(s).
          in: query
          items:
            type: string
          name: custom_id
          required: false
          type: array
          x-example: '?custom_id=cats&custom_id=dogs&custom_id=parrots'
        - collectionFormat: multi
          description: 'Only get loads from these department IDs. department_id can also be "all", to get loads of all departments under your main account. If no deparment_id is specified, the default is to return just the logged in users'' postings.'
          in: query
          items:
            type: integer
          name: department_id
          required: false
          type: array
          x-example: '?department_id=22&department_id=23&department_id=24 or department_id=all'
        - description: STAGE=PRIVATE Internal use only.  Retrieves all postings that match the specified whoentered.
          in: query
          name: whoentered
          required: false
          type: string
          x-example: '?whoentered=ZZZ'
        - description: Sort results by a certain field.
          enum:
            - origin_city
            - origin_state
            - destination_city
            - destination_state
            - trailer_type
            - load_size
            - ship_date
            - receive_date
            - comment
          in: query
          name: sort_parameter
          required: false
          type: string
          x-example: '?sort_parameter=origin_city'
        - description: The page you want to return. Will return an empty board on an invalid page.
          in: query
          name: page_number
          required: false
          type: integer
          x-example: '?page_number=2'
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/posting_post_response'
      summary: Retrieve multiple postings
      tags:
        - postings
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D',
              qs: 
               { posting_id: 'SOME_ARRAY_VALUE',
                 custom_id: 'SOME_ARRAY_VALUE',
                 department_id: 'SOME_ARRAY_VALUE',
                 whoentered: 'SOME_STRING_VALUE',
                 sort_parameter: 'SOME_STRING_VALUE',
                 page_number: 'SOME_INTEGER_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/postings/%7Bposting_type%7D");

            req.query({
              "posting_id": "SOME_ARRAY_VALUE",
              "custom_id": "SOME_ARRAY_VALUE",
              "department_id": "SOME_ARRAY_VALUE",
              "whoentered": "SOME_STRING_VALUE",
              "sort_parameter": "SOME_STRING_VALUE",
              "page_number": "SOME_INTEGER_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'posting_id' => 'SOME_ARRAY_VALUE',
              'custom_id' => 'SOME_ARRAY_VALUE',
              'department_id' => 'SOME_ARRAY_VALUE',
              'whoentered' => 'SOME_STRING_VALUE',
              'sort_parameter' => 'SOME_STRING_VALUE',
              'page_number' => 'SOME_INTEGER_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'posting_id' => 'SOME_ARRAY_VALUE',
              'custom_id' => 'SOME_ARRAY_VALUE',
              'department_id' => 'SOME_ARRAY_VALUE',
              'whoentered' => 'SOME_STRING_VALUE',
              'sort_parameter' => 'SOME_STRING_VALUE',
              'page_number' => 'SOME_INTEGER_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/%7Bposting_type%7D"

            querystring = {"posting_id":"SOME_ARRAY_VALUE","custom_id":"SOME_ARRAY_VALUE","department_id":"SOME_ARRAY_VALUE","whoentered":"SOME_STRING_VALUE","sort_parameter":"SOME_STRING_VALUE","page_number":"SOME_INTEGER_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    patch:
      description: Update one or more entries. Only 100 entries can be updated per request.
      parameters:
        - description: Specifies board you are posting to.
          enum:
            - loads
            - trucks
            - private_loads
            - private_trucks
            - test_loads
            - test_trucks
          in: path
          name: posting_type
          required: true
          type: string
          x-example: test_loads
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              list:
                items:
                  $ref: '#/definitions/postings_patch_object'
                maxItems: 100
                type: array
            required:
              - list
            type: object
      responses:
        '202':
          description: Status 202
          schema:
            properties:
              list:
                $ref: '#/definitions/postings-post_or_patch_response'
            required:
              - list
            type: object
      summary: Update multiple postings
      tags:
        - postings
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/%7Bposting_type%7D");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/postings/%7Bposting_type%7D");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\"\n\n\tpayload := strings.NewReader(\"{}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/%7Bposting_type%7D")
              .patch(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.patch("https://api.directfreight.com/v1/postings/%7Bposting_type%7D")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/%7Bposting_type%7D",
              "method": "PATCH",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({});

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("PATCH", "https://api.directfreight.com/v1/postings/%7Bposting_type%7D");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PATCH",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/%7Bposting_type%7D",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({}));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'PATCH',
              url: 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: {},
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("PATCH", "https://api.directfreight.com/v1/postings/%7Bposting_type%7D");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({});

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{  };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/%7Bposting_type%7D"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PATCH"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/%7Bposting_type%7D" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{}" in

            Client.call ~headers ~body `PATCH uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("PATCH",
            "https://api.directfreight.com/v1/postings/%7Bposting_type%7D");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/%7Bposting_type%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PATCH",
              CURLOPT_POSTFIELDS => "{}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('PATCH');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D');
            $request->setMethod(HttpRequest::HTTP_METH_PATCH);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{}');

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D');
            $request->setRequestMethod('PATCH');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("PATCH", "/v1/postings/%7Bposting_type%7D", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/%7Bposting_type%7D"

            payload = "{}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("PATCH", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/postings/%7Bposting_type%7D")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Patch.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request PATCH \
              --url https://api.directfreight.com/v1/postings/%7Bposting_type%7D \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{}'
        - lang: Shell_httpie
          source: |-
            echo '{}' |  \
              http PATCH https://api.directfreight.com/v1/postings/%7Bposting_type%7D \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method PATCH \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{}' \
              --output-document \
              - https://api.directfreight.com/v1/postings/%7Bposting_type%7D
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = []

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/%7Bposting_type%7D")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "PATCH"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      description: Only 100 entries can be created per request.
      parameters:
        - description: Specifies board you are posting to.
          enum:
            - loads
            - trucks
            - private_loads
            - private_trucks
            - test_loads
            - test_trucks
          in: path
          name: posting_type
          required: true
          type: string
          x-example: test_loads
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              list:
                items:
                  $ref: '#/definitions/postings_entry_object'
                maxItems: 100
                type: array
            required:
              - list
            type: object
      responses:
        '202':
          description: Loads accepted. Check the response for an ordered list of response.
          schema:
            $ref: '#/definitions/postings-post_or_patch_response'
      summary: Create multiple postings
      tags:
        - postings
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/%7Bposting_type%7D");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/postings/%7Bposting_type%7D");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\"\n\n\tpayload := strings.NewReader(\"{}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/%7Bposting_type%7D")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/postings/%7Bposting_type%7D")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/%7Bposting_type%7D",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({});

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/postings/%7Bposting_type%7D");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/%7Bposting_type%7D",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({}));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: {},
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/postings/%7Bposting_type%7D");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({});

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{  };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/%7Bposting_type%7D"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/%7Bposting_type%7D" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/postings/%7Bposting_type%7D");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/%7Bposting_type%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{}');

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/postings/%7Bposting_type%7D", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/%7Bposting_type%7D"

            payload = "{}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/postings/%7Bposting_type%7D")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/postings/%7Bposting_type%7D \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{}'
        - lang: Shell_httpie
          source: |-
            echo '{}' |  \
              http POST https://api.directfreight.com/v1/postings/%7Bposting_type%7D \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{}' \
              --output-document \
              - https://api.directfreight.com/v1/postings/%7Bposting_type%7D
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = []

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/%7Bposting_type%7D")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: POSTINGS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/%7Bposting_type%7D");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/%7Bposting_type%7D")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/postings/%7Bposting_type%7D")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/%7Bposting_type%7D",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/postings/%7Bposting_type%7D");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/%7Bposting_type%7D",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/postings/%7Bposting_type%7D");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/%7Bposting_type%7D"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/%7Bposting_type%7D" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/postings/%7Bposting_type%7D");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/%7Bposting_type%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/postings/%7Bposting_type%7D", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/%7Bposting_type%7D"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/postings/%7Bposting_type%7D")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/postings/%7Bposting_type%7D \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/postings/%7Bposting_type%7D \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/postings/%7Bposting_type%7D
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/%7Bposting_type%7D")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  '/postings/{posting_type}/{action}':
    post:
      parameters:
        - description: Where items are being moved or copied to.
          enum:
            - loads
            - trucks
            - private_loads
            - private_trucks
            - test_loads
            - test_trucks
            - olp_network
          in: path
          name: posting_type
          required: true
          type: string
        - description: Specified in the url.
          enum:
            - copy
            - move
          in: path
          name: action
          required: true
          type: string
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/post_posting_type_action_body'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/postings-copy_or_move_response'
      summary: STAGE=PRIVATE Copy or Move a posting.
      tags:
        - postings
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"new_load_custom_id\":\"<ADD EXAMPLE VALUE>\",\"source_id\":0,\"source_posting\":\"loads\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"new_load_custom_id\":\"<ADD EXAMPLE VALUE>\",\"source_id\":0,\"source_posting\":\"loads\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"new_load_custom_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"source_id\\\":0,\\\"source_posting\\\":\\\"loads\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"new_load_custom_id\":\"<ADD EXAMPLE VALUE>\",\"source_id\":0,\"source_posting\":\"loads\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"new_load_custom_id\":\"<ADD EXAMPLE VALUE>\",\"source_id\":0,\"source_posting\":\"loads\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"new_load_custom_id\":\"<ADD EXAMPLE VALUE>\",\"source_id\":0,\"source_posting\":\"loads\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "new_load_custom_id": "<ADD EXAMPLE VALUE>",
              "source_id": 0,
              "source_posting": "loads"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/%7Bposting_type%7D/%7Baction%7D",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ new_load_custom_id: '<ADD EXAMPLE VALUE>',
              source_id: 0,
              source_posting: 'loads' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { new_load_custom_id: '<ADD EXAMPLE VALUE>',
                 source_id: 0,
                 source_posting: 'loads' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "new_load_custom_id": "<ADD EXAMPLE VALUE>",
              "source_id": 0,
              "source_posting": "loads"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"new_load_custom_id": @"<ADD EXAMPLE VALUE>",
                                          @"source_id": @0,
                                          @"source_posting": @"loads" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"new_load_custom_id\":\"<ADD EXAMPLE VALUE>\",\"source_id\":0,\"source_posting\":\"loads\"}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"new_load_custom_id":"<ADD EXAMPLE VALUE>","source_id":0,"source_posting":"loads"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"new_load_custom_id\":\"<ADD EXAMPLE VALUE>\",\"source_id\":0,\"source_posting\":\"loads\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"new_load_custom_id":"<ADD EXAMPLE VALUE>","source_id":0,"source_posting":"loads"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"new_load_custom_id":"<ADD EXAMPLE VALUE>","source_id":0,"source_posting":"loads"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"new_load_custom_id\":\"<ADD EXAMPLE VALUE>\",\"source_id\":0,\"source_posting\":\"loads\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/postings/%7Bposting_type%7D/%7Baction%7D", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D"

            payload = "{\"new_load_custom_id\":\"<ADD EXAMPLE VALUE>\",\"source_id\":0,\"source_posting\":\"loads\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"new_load_custom_id\":\"<ADD EXAMPLE VALUE>\",\"source_id\":0,\"source_posting\":\"loads\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"new_load_custom_id":"<ADD EXAMPLE VALUE>","source_id":0,"source_posting":"loads"}'
        - lang: Shell_httpie
          source: |-
            echo '{"new_load_custom_id":"<ADD EXAMPLE VALUE>","source_id":0,"source_posting":"loads"}' |  \
              http POST https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"new_load_custom_id":"<ADD EXAMPLE VALUE>","source_id":0,"source_posting":"loads"}' \
              --output-document \
              - https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "new_load_custom_id": "<ADD EXAMPLE VALUE>",
              "source_id": 0,
              "source_posting": "loads"
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: POSTINGS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/%7Bposting_type%7D/%7Baction%7D",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/postings/%7Bposting_type%7D/%7Baction%7D", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  '/postings/{posting_type}/replace_all':
    post:
      description: 'delete and replace all entries in posting_type with the entries in {posting_type}_temp.  For example, if posting_type=loads, then source posting_type is loads_temp.'
      parameters:
        - enum:
            - loads
            - trucks
            - test_loads
            - test_trucks
          in: path
          name: posting_type
          required: true
          type: string
        - in: header
          name: end-user-token
          required: true
          type: string
        - description: 'If this option is specified and its value is positive, this endpoint will additionaly return the total count of items inserted and deleted, it will also return an erray of the md5sums that were moved.'
          in: query
          name: return_details
          required: false
          type: boolean
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/postings-replace_all_response'
      summary: replace_all
      tags:
        - postings
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE")
              .post(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all',
              qs: { return_details: 'SOME_BOOLEAN_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all");

            req.query({
              "return_details": "SOME_BOOLEAN_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "'https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all');
            $request->setMethod(HTTP_METH_POST);

            $request->setQueryData(array(
              'return_details' => 'SOME_BOOLEAN_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all');
            $request->setRequestMethod('POST');
            $request->setQuery(new http\QueryString(array(
              'return_details' => 'SOME_BOOLEAN_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all"

            querystring = {"return_details":"SOME_BOOLEAN_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http POST 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: POSTINGS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/%7Bposting_type%7D/replace_all",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/postings/%7Bposting_type%7D/replace_all", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  '/postings/custom_fields/data/{posting_type}':
    delete:
      parameters:
        - description: the field_name associated with the data you want deleted.
          in: query
          name: field_name
          required: true
          type: string
        - description: the posting_id associated with the data you want deleted.
          in: query
          name: posting_id
          required: true
          type: string
        - in: header
          name: end-user-token
          required: true
          type: string
        - description: 'Valid types are "loads", "trucks", "private_loads", "private_trucks", "test_loads", and "test_trucks"'
          enum:
            - test_loads
            - test_trucks
            - private_loads
            - private_trucks
            - loads
            - trucks
          in: path
          name: posting_type
          required: true
          type: string
          x-example: test_loads
      responses:
        '204':
          description: No Content
      summary: STAGE=UNK Delete data from a custom field.
      tags:
        - postings/custom_fields
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE")
              .delete(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.delete("https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE",
              "method": "DELETE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("DELETE", "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url: 'https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D',
              qs: 
               { field_name: 'SOME_STRING_VALUE',
                 posting_id: 'SOME_STRING_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("DELETE", "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D");

            req.query({
              "field_name": "SOME_STRING_VALUE",
              "posting_id": "SOME_STRING_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `DELETE uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("DELETE",
            "'https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D');
            $request->setMethod(HTTP_METH_DELETE);

            $request->setQueryData(array(
              'field_name' => 'SOME_STRING_VALUE',
              'posting_id' => 'SOME_STRING_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D');
            $request->setRequestMethod('DELETE');
            $request->setQuery(new http\QueryString(array(
              'field_name' => 'SOME_STRING_VALUE',
              'posting_id' => 'SOME_STRING_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("DELETE", "/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D"

            querystring = {"field_name":"SOME_STRING_VALUE","posting_id":"SOME_STRING_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("DELETE", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url 'https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http DELETE 'https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method DELETE \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    get:
      parameters:
        - collectionFormat: multi
          description: the posting_ids associated with the data you want to get.
          in: query
          items:
            type: string
          name: posting_id
          required: false
          type: array
          x-example: '?posting_id=22&posting_id=23&posting_id=24'
        - in: header
          name: end-user-token
          required: true
          type: string
        - description: 'Valid types are "loads", "trucks", "private_loads", "private_trucks", "test_loads", and "test_trucks"'
          enum:
            - test_loads
            - test_trucks
            - private_loads
            - private_trucks
            - loads
            - trucks
          in: path
          name: posting_type
          required: true
          type: string
          x-example: test_loads
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/get_custom_fields_data_response'
      summary: STAGE=UNK Get data for a custom field.
      tags:
        - postings/custom_fields
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D',
              qs: { posting_id: 'SOME_ARRAY_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D");

            req.query({
              "posting_id": "SOME_ARRAY_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'posting_id' => 'SOME_ARRAY_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'posting_id' => 'SOME_ARRAY_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D"

            querystring = {"posting_id":"SOME_ARRAY_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    patch:
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/create_custom_field_data'
        - description: 'Valid types are "loads", "trucks", "private_loads", "private_trucks", "test_loads", and "test_trucks"'
          enum:
            - test_loads
            - test_trucks
            - private_loads
            - private_trucks
            - loads
            - trucks
          in: path
          name: posting_type
          required: true
          type: string
          x-example: test_loads
      responses:
        '204':
          description: successful operation
      summary: STAGE=UNK Update custom field data.
      tags:
        - postings/custom_fields
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"field_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"posting_id\\\":0,\\\"value\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D")
              .patch(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.patch("https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D",
              "method": "PATCH",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "field_name": "<ADD EXAMPLE VALUE>",
              "posting_id": 0,
              "value": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("PATCH", "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PATCH",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/custom_fields/data/%7Bposting_type%7D",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ field_name: '<ADD EXAMPLE VALUE>',
              posting_id: 0,
              value: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'PATCH',
              url: 'https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { field_name: '<ADD EXAMPLE VALUE>',
                 posting_id: 0,
                 value: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("PATCH", "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "field_name": "<ADD EXAMPLE VALUE>",
              "posting_id": 0,
              "value": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"field_name": @"<ADD EXAMPLE VALUE>",
                                          @"posting_id": @0,
                                          @"value": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PATCH"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `PATCH uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("PATCH",
            "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"field_name":"<ADD EXAMPLE VALUE>","posting_id":0,"value":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PATCH",
              CURLOPT_POSTFIELDS => "{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('PATCH');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D');
            $request->setMethod(HttpRequest::HTTP_METH_PATCH);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"field_name":"<ADD EXAMPLE VALUE>","posting_id":0,"value":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"field_name":"<ADD EXAMPLE VALUE>","posting_id":0,"value":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D');
            $request->setRequestMethod('PATCH');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("PATCH", "/v1/postings/custom_fields/data/%7Bposting_type%7D", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D"

            payload = "{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("PATCH", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Patch.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request PATCH \
              --url https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"field_name":"<ADD EXAMPLE VALUE>","posting_id":0,"value":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"field_name":"<ADD EXAMPLE VALUE>","posting_id":0,"value":"<ADD EXAMPLE VALUE>"}' |  \
              http PATCH https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method PATCH \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"field_name":"<ADD EXAMPLE VALUE>","posting_id":0,"value":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "field_name": "<ADD EXAMPLE VALUE>",
              "posting_id": 0,
              "value": "<ADD EXAMPLE VALUE>"
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "PATCH"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/create_custom_field_data'
        - description: 'Valid types are "loads", "trucks", "private_loads", "private_trucks", "test_loads", and "test_trucks"'
          enum:
            - test_loads
            - test_trucks
            - private_loads
            - private_trucks
            - loads
            - trucks
          in: path
          name: posting_type
          required: true
          type: string
          x-example: test_loads
      responses:
        '201':
          $ref: '#/responses/object_created'
      summary: STAGE=UNK add new data.
      tags:
        - postings/custom_fields
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"field_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"posting_id\\\":0,\\\"value\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "field_name": "<ADD EXAMPLE VALUE>",
              "posting_id": 0,
              "value": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/custom_fields/data/%7Bposting_type%7D",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ field_name: '<ADD EXAMPLE VALUE>',
              posting_id: 0,
              value: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { field_name: '<ADD EXAMPLE VALUE>',
                 posting_id: 0,
                 value: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "field_name": "<ADD EXAMPLE VALUE>",
              "posting_id": 0,
              "value": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"field_name": @"<ADD EXAMPLE VALUE>",
                                          @"posting_id": @0,
                                          @"value": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"field_name":"<ADD EXAMPLE VALUE>","posting_id":0,"value":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"field_name":"<ADD EXAMPLE VALUE>","posting_id":0,"value":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"field_name":"<ADD EXAMPLE VALUE>","posting_id":0,"value":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/postings/custom_fields/data/%7Bposting_type%7D", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D"

            payload = "{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"field_name":"<ADD EXAMPLE VALUE>","posting_id":0,"value":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"field_name":"<ADD EXAMPLE VALUE>","posting_id":0,"value":"<ADD EXAMPLE VALUE>"}' |  \
              http POST https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"field_name":"<ADD EXAMPLE VALUE>","posting_id":0,"value":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "field_name": "<ADD EXAMPLE VALUE>",
              "posting_id": 0,
              "value": "<ADD EXAMPLE VALUE>"
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: POSTINGS/CUSTOM_FIELDS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/custom_fields/data/%7Bposting_type%7D",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/postings/custom_fields/data/%7Bposting_type%7D", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /postings/custom_fields/names/:
    delete:
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - description: column/field that you want deleted
          in: query
          name: field_name
          required: true
          type: string
      responses:
        '204':
          description: No Content
      summary: STAGE=UNK Delete a custom column/field
      tags:
        - postings/custom_fields
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE")
              .delete(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.delete("https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE",
              "method": "DELETE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("DELETE", "https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url: 'https://api.directfreight.com/v1/postings/custom_fields/names/',
              qs: { field_name: 'SOME_STRING_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("DELETE", "https://api.directfreight.com/v1/postings/custom_fields/names/");

            req.query({
              "field_name": "SOME_STRING_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `DELETE uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("DELETE",
            "'https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/custom_fields/names/');
            $request->setMethod(HTTP_METH_DELETE);

            $request->setQueryData(array(
              'field_name' => 'SOME_STRING_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/custom_fields/names/');
            $request->setRequestMethod('DELETE');
            $request->setQuery(new http\QueryString(array(
              'field_name' => 'SOME_STRING_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("DELETE", "/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/custom_fields/names/"

            querystring = {"field_name":"SOME_STRING_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("DELETE", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url 'https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http DELETE 'https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method DELETE \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    get:
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/get_custom_fields_name_response'
      summary: STAGE=UNK Get a list of all defined custom fields/columns.
      tags:
        - postings/custom_fields
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/custom_fields/names/");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/postings/custom_fields/names/");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/custom_fields/names/\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/custom_fields/names/")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/postings/custom_fields/names/")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/custom_fields/names/",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/postings/custom_fields/names/");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/custom_fields/names/",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/postings/custom_fields/names/',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/postings/custom_fields/names/");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/custom_fields/names/"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/custom_fields/names/" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "https://api.directfreight.com/v1/postings/custom_fields/names/");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/custom_fields/names/",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/custom_fields/names/');
            $request->setMethod(HTTP_METH_GET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/custom_fields/names/');
            $request->setRequestMethod('GET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/postings/custom_fields/names/", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/custom_fields/names/"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/postings/custom_fields/names/")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.directfreight.com/v1/postings/custom_fields/names/ \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET https://api.directfreight.com/v1/postings/custom_fields/names/ \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/postings/custom_fields/names/
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/custom_fields/names/")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    patch:
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/rename_custom_field'
      responses:
        '204':
          description: successful operation
      summary: STAGE=UNK Rename a custom field/column.
      tags:
        - postings/custom_fields
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/custom_fields/names/");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/postings/custom_fields/names/");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/custom_fields/names/\"\n\n\tpayload := strings.NewReader(\"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/custom_fields/names/")
              .patch(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.patch("https://api.directfreight.com/v1/postings/custom_fields/names/")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/custom_fields/names/",
              "method": "PATCH",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "current_name": "<ADD EXAMPLE VALUE>",
              "new_name": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("PATCH", "https://api.directfreight.com/v1/postings/custom_fields/names/");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PATCH",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/custom_fields/names/",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ current_name: '<ADD EXAMPLE VALUE>',
              new_name: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'PATCH',
              url: 'https://api.directfreight.com/v1/postings/custom_fields/names/',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { current_name: '<ADD EXAMPLE VALUE>',
                 new_name: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("PATCH", "https://api.directfreight.com/v1/postings/custom_fields/names/");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "current_name": "<ADD EXAMPLE VALUE>",
              "new_name": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"current_name": @"<ADD EXAMPLE VALUE>",
                                          @"new_name": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/custom_fields/names/"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PATCH"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/custom_fields/names/" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `PATCH uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("PATCH",
            "https://api.directfreight.com/v1/postings/custom_fields/names/");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"current_name":"<ADD EXAMPLE VALUE>","new_name":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/custom_fields/names/",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PATCH",
              CURLOPT_POSTFIELDS => "{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('PATCH');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/custom_fields/names/');
            $request->setMethod(HttpRequest::HTTP_METH_PATCH);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"current_name":"<ADD EXAMPLE VALUE>","new_name":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"current_name":"<ADD EXAMPLE VALUE>","new_name":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/custom_fields/names/');
            $request->setRequestMethod('PATCH');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("PATCH", "/v1/postings/custom_fields/names/", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/custom_fields/names/"

            payload = "{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("PATCH", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/postings/custom_fields/names/")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Patch.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request PATCH \
              --url https://api.directfreight.com/v1/postings/custom_fields/names/ \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"current_name":"<ADD EXAMPLE VALUE>","new_name":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"current_name":"<ADD EXAMPLE VALUE>","new_name":"<ADD EXAMPLE VALUE>"}' |  \
              http PATCH https://api.directfreight.com/v1/postings/custom_fields/names/ \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method PATCH \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"current_name":"<ADD EXAMPLE VALUE>","new_name":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/postings/custom_fields/names/
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "current_name": "<ADD EXAMPLE VALUE>",
              "new_name": "<ADD EXAMPLE VALUE>"
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/custom_fields/names/")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "PATCH"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/create_custom_field'
      responses:
        '201':
          $ref: '#/responses/object_created'
      summary: STAGE=UNK Create new custom field/column.
      tags:
        - postings/custom_fields
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/custom_fields/names/");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"name\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/postings/custom_fields/names/");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"name\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/custom_fields/names/\"\n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"name\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/custom_fields/names/")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/postings/custom_fields/names/")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"name\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/custom_fields/names/",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"name\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "name": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/postings/custom_fields/names/");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/custom_fields/names/",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ name: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/postings/custom_fields/names/',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: { name: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/postings/custom_fields/names/");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "name": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"name": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/custom_fields/names/"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/custom_fields/names/" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"name\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/postings/custom_fields/names/");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"name":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/custom_fields/names/",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"name\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/custom_fields/names/');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"name":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"name":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/custom_fields/names/');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"name\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/postings/custom_fields/names/", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/custom_fields/names/"

            payload = "{\"name\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/postings/custom_fields/names/")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"name\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/postings/custom_fields/names/ \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"name":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"name":"<ADD EXAMPLE VALUE>"}' |  \
              http POST https://api.directfreight.com/v1/postings/custom_fields/names/ \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"name":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/postings/custom_fields/names/
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = ["name": "<ADD EXAMPLE VALUE>"]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/custom_fields/names/")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: POSTINGS/CUSTOM_FIELDS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/postings/custom_fields/names/");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/custom_fields/names/\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/postings/custom_fields/names/")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/postings/custom_fields/names/")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/postings/custom_fields/names/",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/postings/custom_fields/names/");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/postings/custom_fields/names/",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/postings/custom_fields/names/',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/postings/custom_fields/names/");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/postings/custom_fields/names/"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/postings/custom_fields/names/" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/postings/custom_fields/names/");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/postings/custom_fields/names/",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/postings/custom_fields/names/');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/postings/custom_fields/names/');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/postings/custom_fields/names/", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/postings/custom_fields/names/"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/postings/custom_fields/names/")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/postings/custom_fields/names/ \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/postings/custom_fields/names/ \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/postings/custom_fields/names/
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/postings/custom_fields/names/")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /profiles:
    delete:
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '204':
          description: success operation
      summary: STAGE=UNK Delete the profile.
      tags:
        - profiles
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/profiles");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/profiles");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/profiles")
              .delete(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.delete("https://api.directfreight.com/v1/profiles")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/profiles",
              "method": "DELETE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("DELETE", "https://api.directfreight.com/v1/profiles");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/profiles",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url: 'https://api.directfreight.com/v1/profiles',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("DELETE", "https://api.directfreight.com/v1/profiles");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/profiles"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/profiles" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `DELETE uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("DELETE",
            "https://api.directfreight.com/v1/profiles");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/profiles",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/profiles');
            $request->setMethod(HTTP_METH_DELETE);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/profiles');
            $request->setRequestMethod('DELETE');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("DELETE", "/v1/profiles", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/profiles"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/profiles")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url https://api.directfreight.com/v1/profiles \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http DELETE https://api.directfreight.com/v1/profiles \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method DELETE \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/profiles
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/profiles")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    get:
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/profile_object'
      summary: Request the logged in user's profile.
      tags:
        - profiles
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/profiles");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/profiles");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/profiles")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/profiles")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/profiles",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/profiles");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/profiles",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/profiles',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/profiles");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/profiles"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/profiles" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "https://api.directfreight.com/v1/profiles");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/profiles",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/profiles');
            $request->setMethod(HTTP_METH_GET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/profiles');
            $request->setRequestMethod('GET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/profiles", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/profiles"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/profiles")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.directfreight.com/v1/profiles \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET https://api.directfreight.com/v1/profiles \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/profiles
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/profiles")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    patch:
      description: Please send in at least one field to be updated.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/profile_object_patch'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/profile_object_patch'
      summary: Update profile information.
      tags:
        - profiles
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/profiles");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"email\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/profiles");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"email\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles\"\n\n\tpayload := strings.NewReader(\"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_onboard_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_terms_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":0,\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"email\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/profiles")
              .patch(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.patch("https://api.directfreight.com/v1/profiles")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"email\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/profiles",
              "method": "PATCH",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"email\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "address": "<ADD EXAMPLE VALUE>",
              "carrier_onboard_url": "<ADD EXAMPLE VALUE>",
              "carrier_terms_url": "<ADD EXAMPLE VALUE>",
              "city": "<ADD EXAMPLE VALUE>",
              "company": "<ADD EXAMPLE VALUE>",
              "contact_extension": 0,
              "contact_name": "<ADD EXAMPLE VALUE>",
              "contact_number": 0,
              "dispatch_extension": 0,
              "dispatch_number": 0,
              "dot_number": 0,
              "email": "<ADD EXAMPLE VALUE>",
              "fax_number": 0,
              "mc_number": "<ADD EXAMPLE VALUE>",
              "mobile_carrier": "Other/Unknown",
              "mobile_number": 0,
              "state": "<ADD EXAMPLE VALUE>",
              "web_page": "<ADD EXAMPLE VALUE>",
              "zip": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("PATCH", "https://api.directfreight.com/v1/profiles");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PATCH",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/profiles",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ address: '<ADD EXAMPLE VALUE>',
              carrier_onboard_url: '<ADD EXAMPLE VALUE>',
              carrier_terms_url: '<ADD EXAMPLE VALUE>',
              city: '<ADD EXAMPLE VALUE>',
              company: '<ADD EXAMPLE VALUE>',
              contact_extension: 0,
              contact_name: '<ADD EXAMPLE VALUE>',
              contact_number: 0,
              dispatch_extension: 0,
              dispatch_number: 0,
              dot_number: 0,
              email: '<ADD EXAMPLE VALUE>',
              fax_number: 0,
              mc_number: '<ADD EXAMPLE VALUE>',
              mobile_carrier: 'Other/Unknown',
              mobile_number: 0,
              state: '<ADD EXAMPLE VALUE>',
              web_page: '<ADD EXAMPLE VALUE>',
              zip: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'PATCH',
              url: 'https://api.directfreight.com/v1/profiles',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { address: '<ADD EXAMPLE VALUE>',
                 carrier_onboard_url: '<ADD EXAMPLE VALUE>',
                 carrier_terms_url: '<ADD EXAMPLE VALUE>',
                 city: '<ADD EXAMPLE VALUE>',
                 company: '<ADD EXAMPLE VALUE>',
                 contact_extension: 0,
                 contact_name: '<ADD EXAMPLE VALUE>',
                 contact_number: 0,
                 dispatch_extension: 0,
                 dispatch_number: 0,
                 dot_number: 0,
                 email: '<ADD EXAMPLE VALUE>',
                 fax_number: 0,
                 mc_number: '<ADD EXAMPLE VALUE>',
                 mobile_carrier: 'Other/Unknown',
                 mobile_number: 0,
                 state: '<ADD EXAMPLE VALUE>',
                 web_page: '<ADD EXAMPLE VALUE>',
                 zip: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("PATCH", "https://api.directfreight.com/v1/profiles");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "address": "<ADD EXAMPLE VALUE>",
              "carrier_onboard_url": "<ADD EXAMPLE VALUE>",
              "carrier_terms_url": "<ADD EXAMPLE VALUE>",
              "city": "<ADD EXAMPLE VALUE>",
              "company": "<ADD EXAMPLE VALUE>",
              "contact_extension": 0,
              "contact_name": "<ADD EXAMPLE VALUE>",
              "contact_number": 0,
              "dispatch_extension": 0,
              "dispatch_number": 0,
              "dot_number": 0,
              "email": "<ADD EXAMPLE VALUE>",
              "fax_number": 0,
              "mc_number": "<ADD EXAMPLE VALUE>",
              "mobile_carrier": "Other/Unknown",
              "mobile_number": 0,
              "state": "<ADD EXAMPLE VALUE>",
              "web_page": "<ADD EXAMPLE VALUE>",
              "zip": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"address": @"<ADD EXAMPLE VALUE>",
                                          @"carrier_onboard_url": @"<ADD EXAMPLE VALUE>",
                                          @"carrier_terms_url": @"<ADD EXAMPLE VALUE>",
                                          @"city": @"<ADD EXAMPLE VALUE>",
                                          @"company": @"<ADD EXAMPLE VALUE>",
                                          @"contact_extension": @0,
                                          @"contact_name": @"<ADD EXAMPLE VALUE>",
                                          @"contact_number": @0,
                                          @"dispatch_extension": @0,
                                          @"dispatch_number": @0,
                                          @"dot_number": @0,
                                          @"email": @"<ADD EXAMPLE VALUE>",
                                          @"fax_number": @0,
                                          @"mc_number": @"<ADD EXAMPLE VALUE>",
                                          @"mobile_carrier": @"Other/Unknown",
                                          @"mobile_number": @0,
                                          @"state": @"<ADD EXAMPLE VALUE>",
                                          @"web_page": @"<ADD EXAMPLE VALUE>",
                                          @"zip": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/profiles"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PATCH"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/profiles" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"email\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `PATCH uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("PATCH",
            "https://api.directfreight.com/v1/profiles");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"address":"<ADD EXAMPLE VALUE>","carrier_onboard_url":"<ADD EXAMPLE VALUE>","carrier_terms_url":"<ADD EXAMPLE VALUE>","city":"<ADD EXAMPLE VALUE>","company":"<ADD EXAMPLE VALUE>","contact_extension":0,"contact_name":"<ADD EXAMPLE VALUE>","contact_number":0,"dispatch_extension":0,"dispatch_number":0,"dot_number":0,"email":"<ADD EXAMPLE VALUE>","fax_number":0,"mc_number":"<ADD EXAMPLE VALUE>","mobile_carrier":"Other/Unknown","mobile_number":0,"state":"<ADD EXAMPLE VALUE>","web_page":"<ADD EXAMPLE VALUE>","zip":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/profiles",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PATCH",
              CURLOPT_POSTFIELDS => "{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"email\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('PATCH');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/profiles');
            $request->setMethod(HttpRequest::HTTP_METH_PATCH);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"address":"<ADD EXAMPLE VALUE>","carrier_onboard_url":"<ADD EXAMPLE VALUE>","carrier_terms_url":"<ADD EXAMPLE VALUE>","city":"<ADD EXAMPLE VALUE>","company":"<ADD EXAMPLE VALUE>","contact_extension":0,"contact_name":"<ADD EXAMPLE VALUE>","contact_number":0,"dispatch_extension":0,"dispatch_number":0,"dot_number":0,"email":"<ADD EXAMPLE VALUE>","fax_number":0,"mc_number":"<ADD EXAMPLE VALUE>","mobile_carrier":"Other/Unknown","mobile_number":0,"state":"<ADD EXAMPLE VALUE>","web_page":"<ADD EXAMPLE VALUE>","zip":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"address":"<ADD EXAMPLE VALUE>","carrier_onboard_url":"<ADD EXAMPLE VALUE>","carrier_terms_url":"<ADD EXAMPLE VALUE>","city":"<ADD EXAMPLE VALUE>","company":"<ADD EXAMPLE VALUE>","contact_extension":0,"contact_name":"<ADD EXAMPLE VALUE>","contact_number":0,"dispatch_extension":0,"dispatch_number":0,"dot_number":0,"email":"<ADD EXAMPLE VALUE>","fax_number":0,"mc_number":"<ADD EXAMPLE VALUE>","mobile_carrier":"Other/Unknown","mobile_number":0,"state":"<ADD EXAMPLE VALUE>","web_page":"<ADD EXAMPLE VALUE>","zip":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/profiles');
            $request->setRequestMethod('PATCH');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"email\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("PATCH", "/v1/profiles", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/profiles"

            payload = "{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"email\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("PATCH", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/profiles")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Patch.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"email\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request PATCH \
              --url https://api.directfreight.com/v1/profiles \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"address":"<ADD EXAMPLE VALUE>","carrier_onboard_url":"<ADD EXAMPLE VALUE>","carrier_terms_url":"<ADD EXAMPLE VALUE>","city":"<ADD EXAMPLE VALUE>","company":"<ADD EXAMPLE VALUE>","contact_extension":0,"contact_name":"<ADD EXAMPLE VALUE>","contact_number":0,"dispatch_extension":0,"dispatch_number":0,"dot_number":0,"email":"<ADD EXAMPLE VALUE>","fax_number":0,"mc_number":"<ADD EXAMPLE VALUE>","mobile_carrier":"Other/Unknown","mobile_number":0,"state":"<ADD EXAMPLE VALUE>","web_page":"<ADD EXAMPLE VALUE>","zip":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"address":"<ADD EXAMPLE VALUE>","carrier_onboard_url":"<ADD EXAMPLE VALUE>","carrier_terms_url":"<ADD EXAMPLE VALUE>","city":"<ADD EXAMPLE VALUE>","company":"<ADD EXAMPLE VALUE>","contact_extension":0,"contact_name":"<ADD EXAMPLE VALUE>","contact_number":0,"dispatch_extension":0,"dispatch_number":0,"dot_number":0,"email":"<ADD EXAMPLE VALUE>","fax_number":0,"mc_number":"<ADD EXAMPLE VALUE>","mobile_carrier":"Other/Unknown","mobile_number":0,"state":"<ADD EXAMPLE VALUE>","web_page":"<ADD EXAMPLE VALUE>","zip":"<ADD EXAMPLE VALUE>"}' |  \
              http PATCH https://api.directfreight.com/v1/profiles \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method PATCH \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"address":"<ADD EXAMPLE VALUE>","carrier_onboard_url":"<ADD EXAMPLE VALUE>","carrier_terms_url":"<ADD EXAMPLE VALUE>","city":"<ADD EXAMPLE VALUE>","company":"<ADD EXAMPLE VALUE>","contact_extension":0,"contact_name":"<ADD EXAMPLE VALUE>","contact_number":0,"dispatch_extension":0,"dispatch_number":0,"dot_number":0,"email":"<ADD EXAMPLE VALUE>","fax_number":0,"mc_number":"<ADD EXAMPLE VALUE>","mobile_carrier":"Other/Unknown","mobile_number":0,"state":"<ADD EXAMPLE VALUE>","web_page":"<ADD EXAMPLE VALUE>","zip":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/profiles
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "address": "<ADD EXAMPLE VALUE>",
              "carrier_onboard_url": "<ADD EXAMPLE VALUE>",
              "carrier_terms_url": "<ADD EXAMPLE VALUE>",
              "city": "<ADD EXAMPLE VALUE>",
              "company": "<ADD EXAMPLE VALUE>",
              "contact_extension": 0,
              "contact_name": "<ADD EXAMPLE VALUE>",
              "contact_number": 0,
              "dispatch_extension": 0,
              "dispatch_number": 0,
              "dot_number": 0,
              "email": "<ADD EXAMPLE VALUE>",
              "fax_number": 0,
              "mc_number": "<ADD EXAMPLE VALUE>",
              "mobile_carrier": "Other/Unknown",
              "mobile_number": 0,
              "state": "<ADD EXAMPLE VALUE>",
              "web_page": "<ADD EXAMPLE VALUE>",
              "zip": "<ADD EXAMPLE VALUE>"
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/profiles")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "PATCH"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/profile_object'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/profile_object_patch'
      summary: Create a new profile.
      tags:
        - profiles
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/profiles");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"driver_per_mile\":0,\"fax_number\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"mc_number\":0,\"miles_per_gal\":0,\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"truck_ownership_per_mile\":0,\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/profiles");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"driver_per_mile\":0,\"fax_number\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"mc_number\":0,\"miles_per_gal\":0,\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"truck_ownership_per_mile\":0,\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles\"\n\n\tpayload := strings.NewReader(\"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_onboard_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_terms_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":0,\\\"driver_per_mile\\\":0,\\\"fax_number\\\":0,\\\"fuel_capacity\\\":0,\\\"ins_permits_per_mile\\\":0,\\\"maint_per_mile\\\":0,\\\"mc_number\\\":0,\\\"miles_per_gal\\\":0,\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"truck_ownership_per_mile\\\":0,\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"driver_per_mile\":0,\"fax_number\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"mc_number\":0,\"miles_per_gal\":0,\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"truck_ownership_per_mile\":0,\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/profiles")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/profiles")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"driver_per_mile\":0,\"fax_number\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"mc_number\":0,\"miles_per_gal\":0,\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"truck_ownership_per_mile\":0,\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/profiles",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"driver_per_mile\":0,\"fax_number\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"mc_number\":0,\"miles_per_gal\":0,\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"truck_ownership_per_mile\":0,\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "address": "<ADD EXAMPLE VALUE>",
              "carrier_onboard_url": "<ADD EXAMPLE VALUE>",
              "carrier_terms_url": "<ADD EXAMPLE VALUE>",
              "city": "<ADD EXAMPLE VALUE>",
              "company": "<ADD EXAMPLE VALUE>",
              "contact_extension": 0,
              "contact_name": "<ADD EXAMPLE VALUE>",
              "contact_number": 0,
              "dispatch_extension": 0,
              "dispatch_number": 0,
              "dot_number": 0,
              "driver_per_mile": 0,
              "fax_number": 0,
              "fuel_capacity": 0,
              "ins_permits_per_mile": 0,
              "maint_per_mile": 0,
              "mc_number": 0,
              "miles_per_gal": 0,
              "mobile_carrier": "Other/Unknown",
              "mobile_number": 0,
              "state": "<ADD EXAMPLE VALUE>",
              "truck_ownership_per_mile": 0,
              "web_page": "<ADD EXAMPLE VALUE>",
              "zip": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/profiles");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/profiles",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ address: '<ADD EXAMPLE VALUE>',
              carrier_onboard_url: '<ADD EXAMPLE VALUE>',
              carrier_terms_url: '<ADD EXAMPLE VALUE>',
              city: '<ADD EXAMPLE VALUE>',
              company: '<ADD EXAMPLE VALUE>',
              contact_extension: 0,
              contact_name: '<ADD EXAMPLE VALUE>',
              contact_number: 0,
              dispatch_extension: 0,
              dispatch_number: 0,
              dot_number: 0,
              driver_per_mile: 0,
              fax_number: 0,
              fuel_capacity: 0,
              ins_permits_per_mile: 0,
              maint_per_mile: 0,
              mc_number: 0,
              miles_per_gal: 0,
              mobile_carrier: 'Other/Unknown',
              mobile_number: 0,
              state: '<ADD EXAMPLE VALUE>',
              truck_ownership_per_mile: 0,
              web_page: '<ADD EXAMPLE VALUE>',
              zip: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/profiles',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { address: '<ADD EXAMPLE VALUE>',
                 carrier_onboard_url: '<ADD EXAMPLE VALUE>',
                 carrier_terms_url: '<ADD EXAMPLE VALUE>',
                 city: '<ADD EXAMPLE VALUE>',
                 company: '<ADD EXAMPLE VALUE>',
                 contact_extension: 0,
                 contact_name: '<ADD EXAMPLE VALUE>',
                 contact_number: 0,
                 dispatch_extension: 0,
                 dispatch_number: 0,
                 dot_number: 0,
                 driver_per_mile: 0,
                 fax_number: 0,
                 fuel_capacity: 0,
                 ins_permits_per_mile: 0,
                 maint_per_mile: 0,
                 mc_number: 0,
                 miles_per_gal: 0,
                 mobile_carrier: 'Other/Unknown',
                 mobile_number: 0,
                 state: '<ADD EXAMPLE VALUE>',
                 truck_ownership_per_mile: 0,
                 web_page: '<ADD EXAMPLE VALUE>',
                 zip: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/profiles");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "address": "<ADD EXAMPLE VALUE>",
              "carrier_onboard_url": "<ADD EXAMPLE VALUE>",
              "carrier_terms_url": "<ADD EXAMPLE VALUE>",
              "city": "<ADD EXAMPLE VALUE>",
              "company": "<ADD EXAMPLE VALUE>",
              "contact_extension": 0,
              "contact_name": "<ADD EXAMPLE VALUE>",
              "contact_number": 0,
              "dispatch_extension": 0,
              "dispatch_number": 0,
              "dot_number": 0,
              "driver_per_mile": 0,
              "fax_number": 0,
              "fuel_capacity": 0,
              "ins_permits_per_mile": 0,
              "maint_per_mile": 0,
              "mc_number": 0,
              "miles_per_gal": 0,
              "mobile_carrier": "Other/Unknown",
              "mobile_number": 0,
              "state": "<ADD EXAMPLE VALUE>",
              "truck_ownership_per_mile": 0,
              "web_page": "<ADD EXAMPLE VALUE>",
              "zip": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"address": @"<ADD EXAMPLE VALUE>",
                                          @"carrier_onboard_url": @"<ADD EXAMPLE VALUE>",
                                          @"carrier_terms_url": @"<ADD EXAMPLE VALUE>",
                                          @"city": @"<ADD EXAMPLE VALUE>",
                                          @"company": @"<ADD EXAMPLE VALUE>",
                                          @"contact_extension": @0,
                                          @"contact_name": @"<ADD EXAMPLE VALUE>",
                                          @"contact_number": @0,
                                          @"dispatch_extension": @0,
                                          @"dispatch_number": @0,
                                          @"dot_number": @0,
                                          @"driver_per_mile": @0,
                                          @"fax_number": @0,
                                          @"fuel_capacity": @0,
                                          @"ins_permits_per_mile": @0,
                                          @"maint_per_mile": @0,
                                          @"mc_number": @0,
                                          @"miles_per_gal": @0,
                                          @"mobile_carrier": @"Other/Unknown",
                                          @"mobile_number": @0,
                                          @"state": @"<ADD EXAMPLE VALUE>",
                                          @"truck_ownership_per_mile": @0,
                                          @"web_page": @"<ADD EXAMPLE VALUE>",
                                          @"zip": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/profiles"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/profiles" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"driver_per_mile\":0,\"fax_number\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"mc_number\":0,\"miles_per_gal\":0,\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"truck_ownership_per_mile\":0,\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/profiles");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"address":"<ADD EXAMPLE VALUE>","carrier_onboard_url":"<ADD EXAMPLE VALUE>","carrier_terms_url":"<ADD EXAMPLE VALUE>","city":"<ADD EXAMPLE VALUE>","company":"<ADD EXAMPLE VALUE>","contact_extension":0,"contact_name":"<ADD EXAMPLE VALUE>","contact_number":0,"dispatch_extension":0,"dispatch_number":0,"dot_number":0,"driver_per_mile":0,"fax_number":0,"fuel_capacity":0,"ins_permits_per_mile":0,"maint_per_mile":0,"mc_number":0,"miles_per_gal":0,"mobile_carrier":"Other/Unknown","mobile_number":0,"state":"<ADD EXAMPLE VALUE>","truck_ownership_per_mile":0,"web_page":"<ADD EXAMPLE VALUE>","zip":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/profiles",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"driver_per_mile\":0,\"fax_number\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"mc_number\":0,\"miles_per_gal\":0,\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"truck_ownership_per_mile\":0,\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/profiles');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"address":"<ADD EXAMPLE VALUE>","carrier_onboard_url":"<ADD EXAMPLE VALUE>","carrier_terms_url":"<ADD EXAMPLE VALUE>","city":"<ADD EXAMPLE VALUE>","company":"<ADD EXAMPLE VALUE>","contact_extension":0,"contact_name":"<ADD EXAMPLE VALUE>","contact_number":0,"dispatch_extension":0,"dispatch_number":0,"dot_number":0,"driver_per_mile":0,"fax_number":0,"fuel_capacity":0,"ins_permits_per_mile":0,"maint_per_mile":0,"mc_number":0,"miles_per_gal":0,"mobile_carrier":"Other/Unknown","mobile_number":0,"state":"<ADD EXAMPLE VALUE>","truck_ownership_per_mile":0,"web_page":"<ADD EXAMPLE VALUE>","zip":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"address":"<ADD EXAMPLE VALUE>","carrier_onboard_url":"<ADD EXAMPLE VALUE>","carrier_terms_url":"<ADD EXAMPLE VALUE>","city":"<ADD EXAMPLE VALUE>","company":"<ADD EXAMPLE VALUE>","contact_extension":0,"contact_name":"<ADD EXAMPLE VALUE>","contact_number":0,"dispatch_extension":0,"dispatch_number":0,"dot_number":0,"driver_per_mile":0,"fax_number":0,"fuel_capacity":0,"ins_permits_per_mile":0,"maint_per_mile":0,"mc_number":0,"miles_per_gal":0,"mobile_carrier":"Other/Unknown","mobile_number":0,"state":"<ADD EXAMPLE VALUE>","truck_ownership_per_mile":0,"web_page":"<ADD EXAMPLE VALUE>","zip":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/profiles');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"driver_per_mile\":0,\"fax_number\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"mc_number\":0,\"miles_per_gal\":0,\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"truck_ownership_per_mile\":0,\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/profiles", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/profiles"

            payload = "{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"driver_per_mile\":0,\"fax_number\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"mc_number\":0,\"miles_per_gal\":0,\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"truck_ownership_per_mile\":0,\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/profiles")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"driver_per_mile\":0,\"fax_number\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"mc_number\":0,\"miles_per_gal\":0,\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"truck_ownership_per_mile\":0,\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/profiles \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"address":"<ADD EXAMPLE VALUE>","carrier_onboard_url":"<ADD EXAMPLE VALUE>","carrier_terms_url":"<ADD EXAMPLE VALUE>","city":"<ADD EXAMPLE VALUE>","company":"<ADD EXAMPLE VALUE>","contact_extension":0,"contact_name":"<ADD EXAMPLE VALUE>","contact_number":0,"dispatch_extension":0,"dispatch_number":0,"dot_number":0,"driver_per_mile":0,"fax_number":0,"fuel_capacity":0,"ins_permits_per_mile":0,"maint_per_mile":0,"mc_number":0,"miles_per_gal":0,"mobile_carrier":"Other/Unknown","mobile_number":0,"state":"<ADD EXAMPLE VALUE>","truck_ownership_per_mile":0,"web_page":"<ADD EXAMPLE VALUE>","zip":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"address":"<ADD EXAMPLE VALUE>","carrier_onboard_url":"<ADD EXAMPLE VALUE>","carrier_terms_url":"<ADD EXAMPLE VALUE>","city":"<ADD EXAMPLE VALUE>","company":"<ADD EXAMPLE VALUE>","contact_extension":0,"contact_name":"<ADD EXAMPLE VALUE>","contact_number":0,"dispatch_extension":0,"dispatch_number":0,"dot_number":0,"driver_per_mile":0,"fax_number":0,"fuel_capacity":0,"ins_permits_per_mile":0,"maint_per_mile":0,"mc_number":0,"miles_per_gal":0,"mobile_carrier":"Other/Unknown","mobile_number":0,"state":"<ADD EXAMPLE VALUE>","truck_ownership_per_mile":0,"web_page":"<ADD EXAMPLE VALUE>","zip":"<ADD EXAMPLE VALUE>"}' |  \
              http POST https://api.directfreight.com/v1/profiles \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"address":"<ADD EXAMPLE VALUE>","carrier_onboard_url":"<ADD EXAMPLE VALUE>","carrier_terms_url":"<ADD EXAMPLE VALUE>","city":"<ADD EXAMPLE VALUE>","company":"<ADD EXAMPLE VALUE>","contact_extension":0,"contact_name":"<ADD EXAMPLE VALUE>","contact_number":0,"dispatch_extension":0,"dispatch_number":0,"dot_number":0,"driver_per_mile":0,"fax_number":0,"fuel_capacity":0,"ins_permits_per_mile":0,"maint_per_mile":0,"mc_number":0,"miles_per_gal":0,"mobile_carrier":"Other/Unknown","mobile_number":0,"state":"<ADD EXAMPLE VALUE>","truck_ownership_per_mile":0,"web_page":"<ADD EXAMPLE VALUE>","zip":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/profiles
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "address": "<ADD EXAMPLE VALUE>",
              "carrier_onboard_url": "<ADD EXAMPLE VALUE>",
              "carrier_terms_url": "<ADD EXAMPLE VALUE>",
              "city": "<ADD EXAMPLE VALUE>",
              "company": "<ADD EXAMPLE VALUE>",
              "contact_extension": 0,
              "contact_name": "<ADD EXAMPLE VALUE>",
              "contact_number": 0,
              "dispatch_extension": 0,
              "dispatch_number": 0,
              "dot_number": 0,
              "driver_per_mile": 0,
              "fax_number": 0,
              "fuel_capacity": 0,
              "ins_permits_per_mile": 0,
              "maint_per_mile": 0,
              "mc_number": 0,
              "miles_per_gal": 0,
              "mobile_carrier": "Other/Unknown",
              "mobile_number": 0,
              "state": "<ADD EXAMPLE VALUE>",
              "truck_ownership_per_mile": 0,
              "web_page": "<ADD EXAMPLE VALUE>",
              "zip": "<ADD EXAMPLE VALUE>"
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/profiles")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: PROFILES
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/profiles");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/profiles")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/profiles")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/profiles",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/profiles");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/profiles",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/profiles',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/profiles");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/profiles"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/profiles" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/profiles");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/profiles",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/profiles');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/profiles');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/profiles", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/profiles"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/profiles")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/profiles \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/profiles \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/profiles
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/profiles")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /profiles/documents:
    delete:
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '204':
          description: success operation
      summary: STAGE=UNK Delete the document.
      tags:
        - profiles
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/profiles/documents");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/profiles/documents");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/documents\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/profiles/documents")
              .delete(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.delete("https://api.directfreight.com/v1/profiles/documents")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/profiles/documents",
              "method": "DELETE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("DELETE", "https://api.directfreight.com/v1/profiles/documents");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "DELETE",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/profiles/documents",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url: 'https://api.directfreight.com/v1/profiles/documents',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("DELETE", "https://api.directfreight.com/v1/profiles/documents");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/profiles/documents"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/profiles/documents" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `DELETE uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("DELETE",
            "https://api.directfreight.com/v1/profiles/documents");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/profiles/documents",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/profiles/documents');
            $request->setMethod(HTTP_METH_DELETE);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/profiles/documents');
            $request->setRequestMethod('DELETE');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("DELETE", "/v1/profiles/documents", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/profiles/documents"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/profiles/documents")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request DELETE \
              --url https://api.directfreight.com/v1/profiles/documents \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http DELETE https://api.directfreight.com/v1/profiles/documents \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method DELETE \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/profiles/documents
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/profiles/documents")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    get:
      description: Retrieve documents
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: success
      summary: STAGE=UNK Retrieve documents
      tags:
        - profiles
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/profiles/documents");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/profiles/documents");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/documents\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/profiles/documents")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/profiles/documents")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/profiles/documents",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/profiles/documents");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/profiles/documents",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/profiles/documents',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/profiles/documents");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/profiles/documents"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/profiles/documents" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "https://api.directfreight.com/v1/profiles/documents");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/profiles/documents",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/profiles/documents');
            $request->setMethod(HTTP_METH_GET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/profiles/documents');
            $request->setRequestMethod('GET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/profiles/documents", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/profiles/documents"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/profiles/documents")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.directfreight.com/v1/profiles/documents \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET https://api.directfreight.com/v1/profiles/documents \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/profiles/documents
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/profiles/documents")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    patch:
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/rename_document'
      responses:
        '204':
          description: success
      summary: STAGE=UNK Rename a document.
      tags:
        - profiles
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/profiles/documents");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/profiles/documents");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/documents\"\n\n\tpayload := strings.NewReader(\"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/profiles/documents")
              .patch(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.patch("https://api.directfreight.com/v1/profiles/documents")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/profiles/documents",
              "method": "PATCH",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "current_name": "<ADD EXAMPLE VALUE>",
              "new_name": "<ADD EXAMPLE VALUE>"
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("PATCH", "https://api.directfreight.com/v1/profiles/documents");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PATCH",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/profiles/documents",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ current_name: '<ADD EXAMPLE VALUE>',
              new_name: '<ADD EXAMPLE VALUE>' }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'PATCH',
              url: 'https://api.directfreight.com/v1/profiles/documents',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { current_name: '<ADD EXAMPLE VALUE>',
                 new_name: '<ADD EXAMPLE VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("PATCH", "https://api.directfreight.com/v1/profiles/documents");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "current_name": "<ADD EXAMPLE VALUE>",
              "new_name": "<ADD EXAMPLE VALUE>"
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"current_name": @"<ADD EXAMPLE VALUE>",
                                          @"new_name": @"<ADD EXAMPLE VALUE>" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/profiles/documents"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PATCH"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/profiles/documents" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}" in

            Client.call ~headers ~body `PATCH uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("PATCH",
            "https://api.directfreight.com/v1/profiles/documents");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"current_name":"<ADD EXAMPLE VALUE>","new_name":"<ADD EXAMPLE VALUE>"}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/profiles/documents",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PATCH",
              CURLOPT_POSTFIELDS => "{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('PATCH');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/profiles/documents');
            $request->setMethod(HttpRequest::HTTP_METH_PATCH);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"current_name":"<ADD EXAMPLE VALUE>","new_name":"<ADD EXAMPLE VALUE>"}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"current_name":"<ADD EXAMPLE VALUE>","new_name":"<ADD EXAMPLE VALUE>"}');

            $request->setRequestUrl('https://api.directfreight.com/v1/profiles/documents');
            $request->setRequestMethod('PATCH');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("PATCH", "/v1/profiles/documents", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/profiles/documents"

            payload = "{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("PATCH", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/profiles/documents")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Patch.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request PATCH \
              --url https://api.directfreight.com/v1/profiles/documents \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"current_name":"<ADD EXAMPLE VALUE>","new_name":"<ADD EXAMPLE VALUE>"}'
        - lang: Shell_httpie
          source: |-
            echo '{"current_name":"<ADD EXAMPLE VALUE>","new_name":"<ADD EXAMPLE VALUE>"}' |  \
              http PATCH https://api.directfreight.com/v1/profiles/documents \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method PATCH \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"current_name":"<ADD EXAMPLE VALUE>","new_name":"<ADD EXAMPLE VALUE>"}' \
              --output-document \
              - https://api.directfreight.com/v1/profiles/documents
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "current_name": "<ADD EXAMPLE VALUE>",
              "new_name": "<ADD EXAMPLE VALUE>"
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/profiles/documents")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "PATCH"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    post:
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/upload_document'
      responses:
        '201':
          $ref: '#/responses/object_created'
      summary: STAGE=UNK Upload a new document.
      tags:
        - profiles
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/profiles/documents");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"filename\":{}}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/profiles/documents");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"filename\":{}}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/documents\"\n\n\tpayload := strings.NewReader(\"{\\\"filename\\\":{}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"filename\":{}}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/profiles/documents")
              .post(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/profiles/documents")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"filename\":{}}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/profiles/documents",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"filename\":{}}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "filename": {}
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/profiles/documents");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/profiles/documents",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ filename: {} }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/profiles/documents',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: { filename: {} },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/profiles/documents");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "filename": {}
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"filename": @{  } };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/profiles/documents"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/profiles/documents" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"filename\":{}}" in

            Client.call ~headers ~body `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/profiles/documents");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"filename":{}}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/profiles/documents",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"filename\":{}}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/profiles/documents');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"filename":{}}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"filename":{}}');

            $request->setRequestUrl('https://api.directfreight.com/v1/profiles/documents');
            $request->setRequestMethod('POST');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"filename\":{}}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/profiles/documents", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/profiles/documents"

            payload = "{\"filename\":{}}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/profiles/documents")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"filename\":{}}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/profiles/documents \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"filename":{}}'
        - lang: Shell_httpie
          source: |-
            echo '{"filename":{}}' |  \
              http POST https://api.directfreight.com/v1/profiles/documents \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"filename":{}}' \
              --output-document \
              - https://api.directfreight.com/v1/profiles/documents
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = ["filename": []]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/profiles/documents")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: PROFILES
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/profiles/documents");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/documents\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/profiles/documents")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/profiles/documents")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/profiles/documents",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/profiles/documents");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/profiles/documents",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/profiles/documents',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/profiles/documents");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/profiles/documents"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/profiles/documents" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/profiles/documents");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/profiles/documents",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/profiles/documents');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/profiles/documents');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/profiles/documents", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/profiles/documents"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/profiles/documents")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/profiles/documents \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/profiles/documents \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/profiles/documents
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/profiles/documents")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /profiles/fmcsa:
    get:
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/fmcsa_profile_object'
      summary: STAGE=PRIVATE Returns the FMCSA information of this profiles' DOT number.
      tags:
        - profiles
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/profiles/fmcsa");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/profiles/fmcsa");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/fmcsa\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/profiles/fmcsa")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/profiles/fmcsa")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/profiles/fmcsa",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/profiles/fmcsa");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/profiles/fmcsa",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/profiles/fmcsa',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/profiles/fmcsa");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/profiles/fmcsa"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/profiles/fmcsa" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "https://api.directfreight.com/v1/profiles/fmcsa");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/profiles/fmcsa",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/profiles/fmcsa');
            $request->setMethod(HTTP_METH_GET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/profiles/fmcsa');
            $request->setRequestMethod('GET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/profiles/fmcsa", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/profiles/fmcsa"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/profiles/fmcsa")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.directfreight.com/v1/profiles/fmcsa \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET https://api.directfreight.com/v1/profiles/fmcsa \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/profiles/fmcsa
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/profiles/fmcsa")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: PROFILES
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/profiles/fmcsa");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/fmcsa\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/profiles/fmcsa")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/profiles/fmcsa")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/profiles/fmcsa",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/profiles/fmcsa");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/profiles/fmcsa",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/profiles/fmcsa',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/profiles/fmcsa");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/profiles/fmcsa"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/profiles/fmcsa" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/profiles/fmcsa");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/profiles/fmcsa",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/profiles/fmcsa');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/profiles/fmcsa');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/profiles/fmcsa", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/profiles/fmcsa"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/profiles/fmcsa")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/profiles/fmcsa \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/profiles/fmcsa \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/profiles/fmcsa
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/profiles/fmcsa")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /profiles/fmcsa/verification:
    get:
      description: STAGE=PRIVATE Checks if the logged in user is FMCSA verified.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              last_verification_date:
                type: string
              status:
                type: boolean
              verified_via:
                type: string
      summary: STAGE=PRIVATE Checks if the logged in user is FMCSA verified.
      tags:
        - profiles
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/profiles/fmcsa/verification");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/profiles/fmcsa/verification");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/fmcsa/verification\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/profiles/fmcsa/verification")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/profiles/fmcsa/verification")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/profiles/fmcsa/verification",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/profiles/fmcsa/verification");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/profiles/fmcsa/verification",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/profiles/fmcsa/verification',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/profiles/fmcsa/verification");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/profiles/fmcsa/verification"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/profiles/fmcsa/verification" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "https://api.directfreight.com/v1/profiles/fmcsa/verification");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/profiles/fmcsa/verification",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/profiles/fmcsa/verification');
            $request->setMethod(HTTP_METH_GET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/profiles/fmcsa/verification');
            $request->setRequestMethod('GET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/profiles/fmcsa/verification", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/profiles/fmcsa/verification"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/profiles/fmcsa/verification")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.directfreight.com/v1/profiles/fmcsa/verification \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET https://api.directfreight.com/v1/profiles/fmcsa/verification \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/profiles/fmcsa/verification
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/profiles/fmcsa/verification")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: PROFILES
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/profiles/fmcsa/verification");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/fmcsa/verification\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/profiles/fmcsa/verification")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/profiles/fmcsa/verification")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/profiles/fmcsa/verification",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/profiles/fmcsa/verification");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/profiles/fmcsa/verification",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/profiles/fmcsa/verification',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/profiles/fmcsa/verification");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/profiles/fmcsa/verification"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/profiles/fmcsa/verification" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/profiles/fmcsa/verification");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/profiles/fmcsa/verification",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/profiles/fmcsa/verification');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/profiles/fmcsa/verification');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/profiles/fmcsa/verification", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/profiles/fmcsa/verification"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/profiles/fmcsa/verification")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/profiles/fmcsa/verification \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/profiles/fmcsa/verification \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/profiles/fmcsa/verification
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/profiles/fmcsa/verification")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /profiles/fmcsa/verification/check:
    get:
      description: STAGE=PRIVATE Checks a verification code challenge.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - description: 6 Digit verification code.
          in: query
          name: code
          required: true
          type: number
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              message:
                type: string
      summary: STAGE=PRIVATE Checks FMCSA verification challenge
      tags:
        - profiles
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/profiles/fmcsa/verification/check',
              qs: { code: 'SOME_NUMBER_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/profiles/fmcsa/verification/check");

            req.query({
              "code": "SOME_NUMBER_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/profiles/fmcsa/verification/check');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'code' => 'SOME_NUMBER_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/profiles/fmcsa/verification/check');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'code' => 'SOME_NUMBER_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/profiles/fmcsa/verification/check"

            querystring = {"code":"SOME_NUMBER_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: PROFILES
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/profiles/fmcsa/verification/check");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/fmcsa/verification/check\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/profiles/fmcsa/verification/check")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/profiles/fmcsa/verification/check")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/profiles/fmcsa/verification/check",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/profiles/fmcsa/verification/check");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/profiles/fmcsa/verification/check",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/profiles/fmcsa/verification/check',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/profiles/fmcsa/verification/check");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/profiles/fmcsa/verification/check"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/profiles/fmcsa/verification/check" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/profiles/fmcsa/verification/check");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/profiles/fmcsa/verification/check",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/profiles/fmcsa/verification/check');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/profiles/fmcsa/verification/check');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/profiles/fmcsa/verification/check", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/profiles/fmcsa/verification/check"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/profiles/fmcsa/verification/check")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/profiles/fmcsa/verification/check \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/profiles/fmcsa/verification/check \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/profiles/fmcsa/verification/check
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/profiles/fmcsa/verification/check")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /profiles/fmcsa/verification/send:
    get:
      description: STAGE=PRIVATE Sends a verification challenge to the email or phone number associated with this FMCSA Dot number.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - description: 'Must be one of: email, call or text.'
          in: query
          name: method
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              message:
                type: string
      summary: STAGE=PRIVATE Sends FMCSA verification challenge
      tags:
        - profiles
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/profiles/fmcsa/verification/send',
              qs: { method: 'SOME_STRING_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/profiles/fmcsa/verification/send");

            req.query({
              "method": "SOME_STRING_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/profiles/fmcsa/verification/send');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'method' => 'SOME_STRING_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/profiles/fmcsa/verification/send');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'method' => 'SOME_STRING_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/profiles/fmcsa/verification/send"

            querystring = {"method":"SOME_STRING_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: PROFILES
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/profiles/fmcsa/verification/send");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/fmcsa/verification/send\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/profiles/fmcsa/verification/send")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/profiles/fmcsa/verification/send")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/profiles/fmcsa/verification/send",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/profiles/fmcsa/verification/send");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/profiles/fmcsa/verification/send",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/profiles/fmcsa/verification/send',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/profiles/fmcsa/verification/send");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/profiles/fmcsa/verification/send"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/profiles/fmcsa/verification/send" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/profiles/fmcsa/verification/send");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/profiles/fmcsa/verification/send",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/profiles/fmcsa/verification/send');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/profiles/fmcsa/verification/send');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/profiles/fmcsa/verification/send", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/profiles/fmcsa/verification/send"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/profiles/fmcsa/verification/send")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/profiles/fmcsa/verification/send \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/profiles/fmcsa/verification/send \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/profiles/fmcsa/verification/send
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/profiles/fmcsa/verification/send")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /profiles/truck_info:
    get:
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/truck_info_object'
      summary: Request the logged in user's truck info. STAGE=Private
      tags:
        - profiles
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/profiles/truck_info");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/profiles/truck_info");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/truck_info\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/profiles/truck_info")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/profiles/truck_info")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/profiles/truck_info",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/profiles/truck_info");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/profiles/truck_info",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/profiles/truck_info',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/profiles/truck_info");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/profiles/truck_info"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/profiles/truck_info" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "https://api.directfreight.com/v1/profiles/truck_info");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/profiles/truck_info",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/profiles/truck_info');
            $request->setMethod(HTTP_METH_GET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/profiles/truck_info');
            $request->setRequestMethod('GET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/profiles/truck_info", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/profiles/truck_info"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/profiles/truck_info")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url https://api.directfreight.com/v1/profiles/truck_info \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET https://api.directfreight.com/v1/profiles/truck_info \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/profiles/truck_info
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/profiles/truck_info")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    patch:
      description: Please send in at least one field to be updated.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/truck_info_object'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/truck_info_object'
      summary: Update truck information. STAGE=Private
      tags:
        - profiles
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PATCH");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/profiles/truck_info");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"deadhead_per_mile\":0,\"driver_per_mile\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"miles_per_gal\":0,\"truck_ownership_per_mile\":0}");

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/profiles/truck_info");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            request.AddParameter("undefined", "{\"deadhead_per_mile\":0,\"driver_per_mile\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"miles_per_gal\":0,\"truck_ownership_per_mile\":0}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/truck_info\"\n\n\tpayload := strings.NewReader(\"{\\\"deadhead_per_mile\\\":0,\\\"driver_per_mile\\\":0,\\\"fuel_capacity\\\":0,\\\"ins_permits_per_mile\\\":0,\\\"maint_per_mile\\\":0,\\\"miles_per_gal\\\":0,\\\"truck_ownership_per_mile\\\":0}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\"deadhead_per_mile\":0,\"driver_per_mile\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"miles_per_gal\":0,\"truck_ownership_per_mile\":0}");
            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/profiles/truck_info")
              .patch(body)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.patch("https://api.directfreight.com/v1/profiles/truck_info")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .body("{\"deadhead_per_mile\":0,\"driver_per_mile\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"miles_per_gal\":0,\"truck_ownership_per_mile\":0}")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/profiles/truck_info",
              "method": "PATCH",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              },
              "processData": false,
              "data": "{\"deadhead_per_mile\":0,\"driver_per_mile\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"miles_per_gal\":0,\"truck_ownership_per_mile\":0}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = JSON.stringify({
              "deadhead_per_mile": 0,
              "driver_per_mile": 0,
              "fuel_capacity": 0,
              "ins_permits_per_mile": 0,
              "maint_per_mile": 0,
              "miles_per_gal": 0,
              "truck_ownership_per_mile": 0
            });

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("PATCH", "https://api.directfreight.com/v1/profiles/truck_info");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "PATCH",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/profiles/truck_info",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ deadhead_per_mile: 0,
              driver_per_mile: 0,
              fuel_capacity: 0,
              ins_permits_per_mile: 0,
              maint_per_mile: 0,
              miles_per_gal: 0,
              truck_ownership_per_mile: 0 }));
            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'PATCH',
              url: 'https://api.directfreight.com/v1/profiles/truck_info',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' },
              body: 
               { deadhead_per_mile: 0,
                 driver_per_mile: 0,
                 fuel_capacity: 0,
                 ins_permits_per_mile: 0,
                 maint_per_mile: 0,
                 miles_per_gal: 0,
                 truck_ownership_per_mile: 0 },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("PATCH", "https://api.directfreight.com/v1/profiles/truck_info");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });

            req.type("json");
            req.send({
              "deadhead_per_mile": 0,
              "driver_per_mile": 0,
              "fuel_capacity": 0,
              "ins_permits_per_mile": 0,
              "maint_per_mile": 0,
              "miles_per_gal": 0,
              "truck_ownership_per_mile": 0
            });

            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };
            NSDictionary *parameters = @{ @"deadhead_per_mile": @0,
                                          @"driver_per_mile": @0,
                                          @"fuel_capacity": @0,
                                          @"ins_permits_per_mile": @0,
                                          @"maint_per_mile": @0,
                                          @"miles_per_gal": @0,
                                          @"truck_ownership_per_mile": @0 };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/profiles/truck_info"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PATCH"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/profiles/truck_info" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in
            let body = Cohttp_lwt_body.of_string "{\"deadhead_per_mile\":0,\"driver_per_mile\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"miles_per_gal\":0,\"truck_ownership_per_mile\":0}" in

            Client.call ~headers ~body `PATCH uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("PATCH",
            "https://api.directfreight.com/v1/profiles/truck_info");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            $request->content('{"deadhead_per_mile":0,"driver_per_mile":0,"fuel_capacity":0,"ins_permits_per_mile":0,"maint_per_mile":0,"miles_per_gal":0,"truck_ownership_per_mile":0}');
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/profiles/truck_info",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PATCH",
              CURLOPT_POSTFIELDS => "{\"deadhead_per_mile\":0,\"driver_per_mile\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"miles_per_gal\":0,\"truck_ownership_per_mile\":0}",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('PATCH');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/profiles/truck_info');
            $request->setMethod(HttpRequest::HTTP_METH_PATCH);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $request->setBody('{"deadhead_per_mile":0,"driver_per_mile":0,"fuel_capacity":0,"ins_permits_per_mile":0,"maint_per_mile":0,"miles_per_gal":0,"truck_ownership_per_mile":0}');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $body = new http\Message\Body;
            $body->append('{"deadhead_per_mile":0,"driver_per_mile":0,"fuel_capacity":0,"ins_permits_per_mile":0,"maint_per_mile":0,"miles_per_gal":0,"truck_ownership_per_mile":0}');

            $request->setRequestUrl('https://api.directfreight.com/v1/profiles/truck_info');
            $request->setRequestMethod('PATCH');
            $request->setBody($body);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            payload = "{\"deadhead_per_mile\":0,\"driver_per_mile\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"miles_per_gal\":0,\"truck_ownership_per_mile\":0}"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("PATCH", "/v1/profiles/truck_info", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/profiles/truck_info"

            payload = "{\"deadhead_per_mile\":0,\"driver_per_mile\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"miles_per_gal\":0,\"truck_ownership_per_mile\":0}"
            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("PATCH", url, data=payload, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/profiles/truck_info")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Patch.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'
            request.body = "{\"deadhead_per_mile\":0,\"driver_per_mile\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"miles_per_gal\":0,\"truck_ownership_per_mile\":0}"

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request PATCH \
              --url https://api.directfreight.com/v1/profiles/truck_info \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT' \
              --data '{"deadhead_per_mile":0,"driver_per_mile":0,"fuel_capacity":0,"ins_permits_per_mile":0,"maint_per_mile":0,"miles_per_gal":0,"truck_ownership_per_mile":0}'
        - lang: Shell_httpie
          source: |-
            echo '{"deadhead_per_mile":0,"driver_per_mile":0,"fuel_capacity":0,"ins_permits_per_mile":0,"maint_per_mile":0,"miles_per_gal":0,"truck_ownership_per_mile":0}' |  \
              http PATCH https://api.directfreight.com/v1/profiles/truck_info \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method PATCH \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --body-data '{"deadhead_per_mile":0,"driver_per_mile":0,"fuel_capacity":0,"ins_permits_per_mile":0,"maint_per_mile":0,"miles_per_gal":0,"truck_ownership_per_mile":0}' \
              --output-document \
              - https://api.directfreight.com/v1/profiles/truck_info
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]
            let parameters = [
              "deadhead_per_mile": 0,
              "driver_per_mile": 0,
              "fuel_capacity": 0,
              "ins_permits_per_mile": 0,
              "maint_per_mile": 0,
              "miles_per_gal": 0,
              "truck_ownership_per_mile": 0
            ]

            let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/profiles/truck_info")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "PATCH"
            request.allHTTPHeaderFields = headers
            request.HTTPBody = postData

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: PROFILES
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/profiles/truck_info");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/truck_info\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/profiles/truck_info")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/profiles/truck_info")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/profiles/truck_info",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/profiles/truck_info");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/profiles/truck_info",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/profiles/truck_info',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/profiles/truck_info");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/profiles/truck_info"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/profiles/truck_info" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/profiles/truck_info");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/profiles/truck_info",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/profiles/truck_info');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/profiles/truck_info');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/profiles/truck_info", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/profiles/truck_info"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/profiles/truck_info")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/profiles/truck_info \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/profiles/truck_info \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/profiles/truck_info
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/profiles/truck_info")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /validations/email_exists:
    get:
      description: Enter an e-mail to see if it is available. Can be used as ?email=xxx or as a JSON request.
      parameters:
        - in: query
          name: email
          required: true
          type: string
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/get_email_exists_response'
      summary: STAGE=UNK Check if an e-mail exists.
      tags:
        - validations
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/validations/email_exists?email=SOME_STRING_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/validations/email_exists',
              qs: { email: 'SOME_STRING_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/validations/email_exists");

            req.query({
              "email": "SOME_STRING_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/validations/email_exists');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'email' => 'SOME_STRING_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/validations/email_exists');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'email' => 'SOME_STRING_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/validations/email_exists?email=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/validations/email_exists"

            querystring = {"email":"SOME_STRING_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: VALIDATIONS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/validations/email_exists");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/validations/email_exists\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/validations/email_exists")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/validations/email_exists")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/validations/email_exists",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/validations/email_exists");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/validations/email_exists",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/validations/email_exists',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/validations/email_exists");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/validations/email_exists"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/validations/email_exists" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/validations/email_exists");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/validations/email_exists",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/validations/email_exists');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/validations/email_exists');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/validations/email_exists", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/validations/email_exists"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/validations/email_exists")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/validations/email_exists \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/validations/email_exists \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/validations/email_exists
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/validations/email_exists")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /validations/trailers:
    get:
      parameters:
        - description: The custom type that the poster is trying to submit.
          in: query
          name: customer_type
          required: true
          type: string
          x-example: FLAT53
        - in: query
          name: partner
          required: false
          type: string
          x-example: parade
        - description: 'We assume only posters will be using this endpoint. We will use their end-user-token to match for a customer specific match first, and fall back to a general one if it doesn''t exist.'
          in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: Status 200
          schema:
            properties:
              comment:
                description: the public comment that should be attached to the load being entered.
                type: string
              other_trailer_type:
                description: what should be put in the other_trailer_types field when posting the load.
                type: string
              trailer_type:
                $ref: '#/definitions/trailer_type'
            required:
              - trailer_type
            type: object
      summary: STAGE=PRIVATE-LIVE Find an official type to match to the customer submitted one.
      tags:
        - validations
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "end-user-token: NO DEFAULT");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("end-user-token", "NO DEFAULT");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE")
              .get()
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("end-user-token", "NO DEFAULT")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.get("https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("end-user-token", "NO DEFAULT")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE",
              "method": "GET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("end-user-token", "NO DEFAULT");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "GET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "end-user-token": "NO DEFAULT",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://api.directfreight.com/v1/validations/trailers',
              qs: 
               { customer_type: 'SOME_STRING_VALUE',
                 partner: 'SOME_STRING_VALUE' },
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'end-user-token': 'NO DEFAULT',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("GET", "https://api.directfreight.com/v1/validations/trailers");

            req.query({
              "customer_type": "SOME_STRING_VALUE",
              "partner": "SOME_STRING_VALUE"
            });

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "end-user-token": "NO DEFAULT",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"end-user-token": @"NO DEFAULT",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("end-user-token", "NO DEFAULT");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `GET uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("GET",
            "'https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE'");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "end-user-token" => "NO DEFAULT" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE",
                "end-user-token: NO DEFAULT"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/validations/trailers');
            $request->setMethod(HTTP_METH_GET);

            $request->setQueryData(array(
              'customer_type' => 'SOME_STRING_VALUE',
              'partner' => 'SOME_STRING_VALUE'
            ));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/validations/trailers');
            $request->setRequestMethod('GET');
            $request->setQuery(new http\QueryString(array(
              'customer_type' => 'SOME_STRING_VALUE',
              'partner' => 'SOME_STRING_VALUE'
            )));

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'end-user-token' => 'NO DEFAULT',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("GET", "/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/validations/trailers"

            querystring = {"customer_type":"SOME_STRING_VALUE","partner":"SOME_STRING_VALUE"}

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'end-user-token': "NO DEFAULT",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["end-user-token"] = 'NO DEFAULT'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request GET \
              --url 'https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE' \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --header 'end-user-token: NO DEFAULT'
        - lang: Shell_httpie
          source: |-
            http GET 'https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE' \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE \
              end-user-token:'NO DEFAULT'
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method GET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'end-user-token: NO DEFAULT' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - 'https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE'
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "end-user-token": "NO DEFAULT",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: VALIDATIONS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/validations/trailers");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/validations/trailers\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/validations/trailers")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/validations/trailers")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/validations/trailers",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/validations/trailers");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/validations/trailers",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/validations/trailers',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/validations/trailers");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/validations/trailers"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/validations/trailers" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/validations/trailers");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/validations/trailers",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/validations/trailers');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/validations/trailers');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/validations/trailers", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/validations/trailers"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/validations/trailers")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/validations/trailers \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/validations/trailers \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/validations/trailers
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/validations/trailers")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /webhooks/apple_appstore_notification:
    post:
      description: Save the apple notification to mysql  STAGE=private
      parameters: []
      responses:
        '200':
          description: successful operation
      summary: Save the apple notification to mysql  STAGE=private
      tags:
        - webhooks
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/webhooks/apple_appstore_notification");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/webhooks/apple_appstore_notification");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/webhooks/apple_appstore_notification")
              .post(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/webhooks/apple_appstore_notification")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/webhooks/apple_appstore_notification",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/webhooks/apple_appstore_notification");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/webhooks/apple_appstore_notification",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/webhooks/apple_appstore_notification',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/webhooks/apple_appstore_notification");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/webhooks/apple_appstore_notification"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/webhooks/apple_appstore_notification" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/webhooks/apple_appstore_notification");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/webhooks/apple_appstore_notification",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/webhooks/apple_appstore_notification');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/webhooks/apple_appstore_notification');
            $request->setRequestMethod('POST');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/webhooks/apple_appstore_notification", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/webhooks/apple_appstore_notification"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/webhooks/apple_appstore_notification")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/webhooks/apple_appstore_notification \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http POST https://api.directfreight.com/v1/webhooks/apple_appstore_notification \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/webhooks/apple_appstore_notification
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/webhooks/apple_appstore_notification")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: WEBHOOKS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/webhooks/apple_appstore_notification");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/webhooks/apple_appstore_notification")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/webhooks/apple_appstore_notification")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/webhooks/apple_appstore_notification",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/webhooks/apple_appstore_notification");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/webhooks/apple_appstore_notification",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/webhooks/apple_appstore_notification',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/webhooks/apple_appstore_notification");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/webhooks/apple_appstore_notification"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/webhooks/apple_appstore_notification" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/webhooks/apple_appstore_notification");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/webhooks/apple_appstore_notification",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/webhooks/apple_appstore_notification');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/webhooks/apple_appstore_notification');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/webhooks/apple_appstore_notification", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/webhooks/apple_appstore_notification"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/webhooks/apple_appstore_notification")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/webhooks/apple_appstore_notification \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/webhooks/apple_appstore_notification \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/webhooks/apple_appstore_notification
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/webhooks/apple_appstore_notification")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
  /webhooks/google_playstore_notification:
    post:
      description: Save the google notification to mysql  STAGE=private
      parameters: []
      responses:
        '200':
          description: successful operation
      summary: Save the google notification to mysql  STAGE=private
      tags:
        - webhooks
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/webhooks/google_playstore_notification");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: |-
            var client = new RestClient("https://api.directfreight.com/v1/webhooks/google_playstore_notification");
            var request = new RestRequest(Method.POST);
            request.AddHeader("api-token", "REPLACE_KEY_VALUE");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Accept", "application/json");
            IRestResponse response = client.Execute(request);
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/webhooks/google_playstore_notification\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/webhooks/google_playstore_notification")
              .post(null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.post("https://api.directfreight.com/v1/webhooks/google_playstore_notification")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/webhooks/google_playstore_notification",
              "method": "POST",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("POST", "https://api.directfreight.com/v1/webhooks/google_playstore_notification");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "POST",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/webhooks/google_playstore_notification",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://api.directfreight.com/v1/webhooks/google_playstore_notification',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("POST", "https://api.directfreight.com/v1/webhooks/google_playstore_notification");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/webhooks/google_playstore_notification"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/webhooks/google_playstore_notification" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers `POST uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("POST",
            "https://api.directfreight.com/v1/webhooks/google_playstore_notification");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/webhooks/google_playstore_notification",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/webhooks/google_playstore_notification');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/webhooks/google_playstore_notification');
            $request->setRequestMethod('POST');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("POST", "/v1/webhooks/google_playstore_notification", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/webhooks/google_playstore_notification"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://api.directfreight.com/v1/webhooks/google_playstore_notification")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request POST \
              --url https://api.directfreight.com/v1/webhooks/google_playstore_notification \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http POST https://api.directfreight.com/v1/webhooks/google_playstore_notification \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method POST \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/webhooks/google_playstore_notification
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/webhooks/google_playstore_notification")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "POST"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
    x-restlet:
      section: WEBHOOKS
      x-code-samples:
        - lang: C_libcurl
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "X-RESTLET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://api.directfreight.com/v1/webhooks/google_playstore_notification");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "api-token: REPLACE_KEY_VALUE");
            headers = curl_slist_append(headers, "Content-Type: application/json");
            headers = curl_slist_append(headers, "Accept: application/json");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: Csharp_restsharp
          source: Method not supported
        - lang: Go_native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/webhooks/google_playstore_notification\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java_okhttp
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://api.directfreight.com/v1/webhooks/google_playstore_notification")
              .method("X-RESTLET", null)
              .addHeader("Accept", "application/json")
              .addHeader("Content-Type", "application/json")
              .addHeader("api-token", "REPLACE_KEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Java_unirest
          source: |-
            HttpResponse<String> response = Unirest.customMethod("X-RESTLET","https://api.directfreight.com/v1/webhooks/google_playstore_notification")
              .header("Accept", "application/json")
              .header("Content-Type", "application/json")
              .header("api-token", "REPLACE_KEY_VALUE")
              .asString();
        - lang: Javascript_jquery
          source: |-
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "https://api.directfreight.com/v1/webhooks/google_playstore_notification",
              "method": "X-RESTLET",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });
        - lang: Javascript_xhr
          source: |-
            var data = null;

            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("X-RESTLET", "https://api.directfreight.com/v1/webhooks/google_playstore_notification");
            xhr.setRequestHeader("Accept", "application/json");
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.setRequestHeader("api-token", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node_native
          source: |-
            var http = require("https");

            var options = {
              "method": "X-RESTLET",
              "hostname": "api.directfreight.com",
              "port": null,
              "path": "/v1/webhooks/google_playstore_notification",
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "api-token": "REPLACE_KEY_VALUE"
              }
            };

            var req = http.request(options, function (res) {
              var chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                var body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Node_request
          source: |
            var request = require("request");

            var options = { method: 'X-RESTLET',
              url: 'https://api.directfreight.com/v1/webhooks/google_playstore_notification',
              headers: 
               { 'api-token': 'REPLACE_KEY_VALUE',
                 'Content-Type': 'application/json',
                 Accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: Node_unirest
          source: |
            var unirest = require("unirest");

            var req = unirest("X-RESTLET", "https://api.directfreight.com/v1/webhooks/google_playstore_notification");

            req.headers({
              "api-token": "REPLACE_KEY_VALUE",
              "Content-Type": "application/json",
              "Accept": "application/json"
            });


            req.end(function (res) {
              if (res.error) throw new Error(res.error);

              console.log(res.body);
            });
        - lang: Objc_nsurlsession
          source: |-
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Accept": @"application/json",
                                       @"Content-Type": @"application/json",
                                       @"api-token": @"REPLACE_KEY_VALUE" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.directfreight.com/v1/webhooks/google_playstore_notification"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"X-RESTLET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];
        - lang: Ocaml_cohttp
          source: |-
            open Cohttp_lwt_unix
            open Cohttp
            open Lwt

            let uri = Uri.of_string "https://api.directfreight.com/v1/webhooks/google_playstore_notification" in
            let headers = Header.add_list (Header.init ()) [
              ("Accept", "application/json");
              ("Content-Type", "application/json");
              ("api-token", "REPLACE_KEY_VALUE");
            ] in

            Client.call ~headers (Code.method_of_string "X-RESTLET") uri
            >>= fun (res, body_stream) ->
              (* Do stuff with the result *)
        - lang: Perl_perl5
          source: |-
            #!/usr/bin/perl
            use Modern::Perl;
            use Data::Dumper;
            use HTTP::Request::JSON;
            use LWP::UserAgent::JSON;
            my $request = HTTP::Request::JSON->new("X-RESTLET",
            "https://api.directfreight.com/v1/webhooks/google_playstore_notification");
            $request->header( "Accept" => "application/json" );
            $request->header( "Content-Type" => "application/json" );
            $request->header( "api-token" => "REPLACE_KEY_VALUE" );
            my $browser = LWP::UserAgent::JSON->new();
            my $response = $browser->request($request);
            print Dumper($response->json_content);
        - lang: Php_curl
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://api.directfreight.com/v1/webhooks/google_playstore_notification",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "X-RESTLET",
              CURLOPT_HTTPHEADER => array(
                "Accept: application/json",
                "Content-Type: application/json",
                "api-token: REPLACE_KEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Php_http1
          source: |-
            <?php

            HttpRequest::methodRegister('X-RESTLET');
            $request = new HttpRequest();
            $request->setUrl('https://api.directfreight.com/v1/webhooks/google_playstore_notification');
            $request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);

            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }
        - lang: Php_http2
          source: |-
            <?php

            $client = new http\Client;
            $request = new http\Client\Request;

            $request->setRequestUrl('https://api.directfreight.com/v1/webhooks/google_playstore_notification');
            $request->setRequestMethod('X-RESTLET');
            $request->setHeaders(array(
              'api-token' => 'REPLACE_KEY_VALUE',
              'Content-Type' => 'application/json',
              'Accept' => 'application/json'
            ));

            $client->enqueue($request)->send();
            $response = $client->getResponse();

            echo $response->getBody();
        - lang: Python_python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.directfreight.com")

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            conn.request("X-RESTLET", "/v1/webhooks/google_playstore_notification", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Python_requests
          source: |-
            import requests

            url = "https://api.directfreight.com/v1/webhooks/google_playstore_notification"

            headers = {
                'Accept': "application/json",
                'Content-Type': "application/json",
                'api-token': "REPLACE_KEY_VALUE"
                }

            response = requests.request("X-RESTLET", url, headers=headers)

            print(response.text)
        - lang: Ruby_native
          source: |-
            require 'uri'
            require 'net/http'

            class Net::HTTP::X-restlet < Net::HTTPRequest
              METHOD = 'X-RESTLET'
              REQUEST_HAS_BODY = 'false'
              RESPONSE_HAS_BODY = true
            end

            url = URI("https://api.directfreight.com/v1/webhooks/google_playstore_notification")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::X-restlet.new(url)
            request["Accept"] = 'application/json'
            request["Content-Type"] = 'application/json'
            request["api-token"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Shell_curl
          source: |-
            curl --request X-RESTLET \
              --url https://api.directfreight.com/v1/webhooks/google_playstore_notification \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE'
        - lang: Shell_httpie
          source: |-
            http X-RESTLET https://api.directfreight.com/v1/webhooks/google_playstore_notification \
              Accept:application/json \
              Content-Type:application/json \
              api-token:REPLACE_KEY_VALUE
        - lang: Shell_wget
          source: |-
            wget --verbose \
              --method X-RESTLET \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --header 'api-token: REPLACE_KEY_VALUE' \
              --output-document \
              - https://api.directfreight.com/v1/webhooks/google_playstore_notification
        - lang: Swift_nsurlsession
          source: |-
            import Foundation

            let headers = [
              "Accept": "application/json",
              "Content-Type": "application/json",
              "api-token": "REPLACE_KEY_VALUE"
            ]

            var request = NSMutableURLRequest(URL: NSURL(string: "https://api.directfreight.com/v1/webhooks/google_playstore_notification")!,
                                                    cachePolicy: .UseProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.HTTPMethod = "X-RESTLET"
            request.allHTTPHeaderFields = headers

            let session = NSURLSession.sharedSession()
            let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                println(error)
              } else {
                let httpResponse = response as? NSHTTPURLResponse
                println(httpResponse)
              }
            })

            dataTask.resume()
definitions:
  alert_list:
    description: 'A hash containing a list of objects. Each entry should have 1 alert object, and 1 search object, and 2 integer counts. One for the number of new loads, and one for the number of total loads that match the search critera.'
    example: |-
      {
        "alerts": [
          "{}",
          "{}"
        ]
      }
    properties:
      alerts:
        items:
          $ref: '#/definitions/alert_response_item'
        type: array
    type: object
    x-restlet:
      section: ALERTS
  alert_response_item:
    properties:
      alert_active:
        description: Identifies whether an alert meets the criteria to send notifications by one of the notification methods.  Alert activation is  primarily controlled by the datetime field expires_after.  This field is a convenience method to eliminate the need to determine the users time zone and verify server time.
        type: boolean
      alert_id:
        description: The ID of the alert
        type: integer
      days_of_week:
        description: Limit the days that alerts are sent to the days listed.
        items:
          enum:
            - Sun
            - Mon
            - Tue
            - Wed
            - Thu
            - Fri
            - Sat
          type: string
        type: array
      end_hour:
        description: A  corresponding to the hour of the day.
        maximum: 21
        minimum: 3
        type: integer
      expires_after:
        description: The last day the alert will be valid. Valid time frames are from today until one year into the future.
        example: 2019-12-30T00:00:00.000Z
        format: date
        type: string
      last_modified:
        description: The last time this alert was modified.
        example: 2019-11-20T10:05:35.000Z
        format: datetime
        type: string
      last_search:
        description: The last time this alert was used in a boards request.
        example: 2019-11-20T10:05:35.000Z
        format: datetime
        type: string
      last_sent:
        description: The last time this alert was sent.
        example: 2019-11-20T10:05:35.000Z
        format: datetime
        type: string
      list_type:
        description: 'This specify the type of list that is returned, including disabling the list from being sent at all. Valid values are ''complete-list'',''only-new'', ''only-new-free'' and ''not-active''.'
        enum:
          - complete-list
          - only-new
          - only-new-free
          - not-active
        type: string
      minute_frequency:
        description: 'How many minutes to wait before sending another alert. Valid values are ''15'',''30'',''60'',''120'',''240'',''480'', and ''1440''.'
        type: integer
      previous_search:
        description: The second to last time this alert was used in a boards request.
        example: 2019-11-20T10:05:35.000Z
        format: datetime
        type: string
      search:
        description: Refer to the boards documentation for the full list of restrictions for each field.
        properties:
          destination_city:
            type: string
          destination_radius:
            type: integer
          destination_state:
            items:
              type: string
            type: array
          full_load:
            type: boolean
          origin_city:
            type: string
          origin_radius:
            type: integer
          origin_state:
            items:
              type: string
            type: array
          search_id:
            type: integer
          search_type:
            type: string
          ship_date:
            items:
              format: date
              type: string
            type: array
          sort_parameter:
            type: string
          trailer_type:
            items:
              type: string
            type: array
        type: object
      send_type:
        description: What method to send the alert list.
        enum:
          - email
          - text
          - push
          - desktop
        type: string
      start_hour:
        description: A  corresponding to the hour of the day.
        maximum: 21
        minimum: 3
        type: integer
      time_zone:
        description: 'A number between -1 and 2. -1 = EST, 0 = CST, 1 = MST, 2 = PST'
        maximum: 2
        minimum: -1
        type: integer
      user_id:
        description: The ID of the user
        type: integer
    required:
      - days_of_week
      - end_hour
      - expires_after
      - list_type
      - minute_frequency
      - search
      - send_type
      - start_hour
      - time_zone
    type: object
    x-restlet:
      section: ALERTS
  alert_search_response:
    properties:
      alert_id:
        description: Alert ID.
        type: integer
    type: object
  alert:
    properties:
      alert_id:
        description: 'Allowed as a convenience to create consistency with a boards request, but is ignored during alert creation.'
        type: integer
      days_of_week:
        description: Limit the days that alerts are sent to the days listed.
        items:
          enum:
            - Sun
            - Mon
            - Tue
            - Wed
            - Thu
            - Fri
            - Sat
          type: string
        type: array
      end_hour:
        description: A  corresponding to the hour of the day. (This field will accept 23 however there is a known logic issue for values over 21 with time zone set to 2)
        maximum: 23
        minimum: 3
        type: integer
      expires_after:
        description: 'The last day and time the alert will be valid. Valid time frames are from today until one year into the future.  This field will accept date only or a date and time.  If the date only is submitted the time will default to 23:59:59'
        example: 2020-01-01T14:30:24.000Z
        format: date time
        type: string
      item_count:
        description: 'Allowed as a convenience to create consistency with a boards request, but is ignored during alert creation.'
        example: 25
        maximum: 100
        minimum: 1
        type: integer
      list_type:
        description: 'This specify the type of list that is returned, including disabling the list from being sent at all. Valid values are ''complete-list'',''only-new'', ''only-new-free'' and ''not-active''.'
        enum:
          - complete-list
          - only-new
          - only-new-free
          - not-active
        type: string
      minute_frequency:
        description: 'How many minutes to wait before sending another alert. Valid values are ''15'',''30'',''60'',''120'',''240'',''480'', and ''1440''.'
        type: integer
      page_number:
        description: 'Allowed as a convenience to create consistency with a boards request, but is ignored during alert creation.'
        minimum: 1
        type: integer
      return_count:
        description: 'Allowed as a convenience to create consistency with a boards request, but is ignored during alert creation. '
        type: boolean
      search:
        description: Refer to the boards documentation for the full list of restrictions for each field.
        properties:
          destination_city:
            type: string
          destination_radius:
            type: integer
          destination_state:
            items:
              type: string
            type: array
          full_load:
            type: boolean
          origin_city:
            type: string
          origin_radius:
            type: integer
          origin_state:
            items:
              type: string
            type: array
          return_only:
            description: 'Allowed as a convenience to create consistency with a boards request, but is ignored during alert creation. '
            type: string
          ship_date:
            items:
              format: date
              type: string
            type: array
          sort_parameter:
            type: string
          tier:
            description: 'Allowed as a convenience to create consistency with a boards request, but is ignored during alert creation. '
            type: string
          trailer_type:
            items:
              type: string
            type: array
        type: object
      send_type:
        description: What method to send the alert list.
        enum:
          - email
          - text
          - push
          - desktop
        type: string
      start_hour:
        description: A  corresponding to the hour of the day.  (This field will accept 23 however there is a known logic issue for values over 21 with time zone set to 2)
        maximum: 23
        minimum: 3
        type: integer
      time_zone:
        description: 'A number between -1 and 2. -1 = EST, 0 = CST, 1 = MST, 2 = PST'
        maximum: 2
        minimum: -1
        type: integer
    required:
      - days_of_week
      - end_hour
      - expires_after
      - list_type
      - minute_frequency
      - search
      - send_type
      - start_hour
      - time_zone
    type: object
    x-restlet:
      section: ALERTS
  autocomplete_response:
    example: |-
      {
        "city": "city",
        "state_abbreviation": "{}",
        "state_name": "{}"
      }
    properties:
      city:
        description: The name of the city.  Only returned if record_type is city or postal
        type: string
      postal_code:
        description: The postal code of the city.  Only returned if match type is postal.
        type: string
      record_type:
        enum:
          - country
          - state
          - province
          - city
          - postal
        type: string
      region_code:
        type: string
      region_name:
        type: string
    required:
      - record_type
      - region_code
      - region_name
    type: object
    x-restlet:
      section: LOCATIONS
  board_request:
    example:
      destination_city: chicago
      destination_radius: 300
      destination_state:
        - IL
      full_load: true
      google_recaptcha_score: 0.7
      max_age: 2000
      max_length: 300
      max_pay_rate: 200
      max_weight: 40000
      min_age: 50
      min_length: 15
      min_pay_rate: 50
      min_weight: 1000
      origin_city: Kansas City
      origin_radius: 300
      origin_state:
        - MO
      page_number: 1
      ship_date:
        - 2020-05-06T00:00:00.000Z
      sort_direction: asc
      sort_parameter: age
      trailer_type:
        - V
        - R
    properties:
      alert_id:
        description: 'By specifying an alert_id we will record the loads or trucks seen by this user, and associate it with their alert.   See /alerts documentation for more information on setting up alerts.'
        example: 1155
        type: integer
        x-example: undefined
      company_name:
        description: Search only for loads posted by this company. STAGE=Private
        type: string
      destination_city:
        description: 'If used, this field must be accompanied by a destination_state.'
        example: chicago
        minLength: 2
        type: string
      destination_radius:
        description: 'If both the destination city and state are specified, this field will limit the search to results to within # miles of the specified destination city.   If this field is omitted during a search that includes a destination city a default value of 30 miles will be used.'
        example: 100
        maximum: 300
        minimum: 1
        type: integer
      destination_state:
        description: 'If the destination_city field is is used, this field should contain the state for that city.  For searches without a specified destination_city this field may contain an array list of state abbreviations.'
        example:
          - IL
          - HI
          - NY
          - KS
          - TX
          - MO
          - AL
        items:
          maxLength: 2
          minLength: 2
          type: string
        type: array
      full_load:
        description: This is only valid when requesting a loads board. Omitting this field will return both full and partial loads. A true value will limit results to full loads only.  False will return partial loads only.
        example: true
        type: boolean
      google_recaptcha_score:
        description: 'STAGE=PRIVATE Google ReCAPTCHA score, for logging purposes. This field is optional. Should be a decimal number between 0 and 1.'
        type: number
      item_count:
        description: This argument adjusts how many items per page will be returned.  Omitting this field will return the default of 50 items per page
        example: 25
        maximum: 100
        minimum: 1
        type: integer
      max_age:
        description: Return items that are at most this many minutes old.
        example: 300
        type: integer
      max_length:
        description: Return items no longer than this.
        example: 300
        type: integer
      max_pay_rate:
        description: Return items that pay at most this amount.
        example: 300
        type: integer
      max_weight:
        description: Return items that weight less than this.
        example: 40000
        type: integer
      md5:
        description: Return only this specific MD5 ID. STAGE=Private  DEPRECATED DO NOT USE
        example: 850FBE52A5345119FD9C79FDE4E27308
        type: string
      min_age:
        description: Return items that are at least this many minutes old.
        example: 50
        type: integer
      min_length:
        description: Return items at least this long.
        example: 15
        type: integer
      min_pay_rate:
        description: Return items that pay at least this amount.
        example: 50
        type: integer
      min_weight:
        description: Return items that weight at least this much.
        example: 1000
        type: integer
      origin_city:
        description: 'If used, this field must be accompanied by an origin_state.'
        example: Kansas City
        minLength: 2
        type: string
      origin_radius:
        description: 'If both the origin city and state are specified, this field will limit the search to results to within # miles of the specified origin city. If this field is omitted during a search that includes an origin city a default value of 25 miles will be used.'
        example: 150
        maximum: 300
        minimum: 1
        type: integer
      origin_state:
        description: 'If the origin_city field is is used, this field should contain the state for that city. For searches without a specified origin_city this field may contain an array list of state abbreviations.'
        example:
          - MO
          - IL
          - TX
          - CA
        items:
          maxLength: 2
          minLength: 2
          type: string
        type: array
      page_number:
        description: The page you want to return. Will return an empty board on an invalid page.
        minimum: 1
        type: integer
      partner:
        description: Used to customize API response for integration partners. This field should only be used in coordination with developers at Direct Freight Services
        type: string
      return_count:
        description: If included this will return a total count instead of a list.
        type: boolean
      return_only:
        description: |-
          STAGE=PRIVATE  This field is an additional filter that limits the boards response for attributes that are not defined by the load record. Currently the following attributes are valid for this field.

          unviewed-loads that have not been viewed by the user (Loads will continue to be returned by boards as unviewed until a GET is requested from the alerts endpoint.  Requesting the alerts resets the timestamp for determining when a load is new to the time of the last search).

          unsent-Loads that have not been sent to or viewed by a user.

          newtag- Loads that are given a new tag.  The new tag is only given to loads that are new since the previous search if the 2 searches are both done in the same day.
        enum:
          - unviewed
          - unsent
          - newtag
        type: string
      return_web_url:
        description: If included this will return a "search_url" property that has a URL that can be used to perform this same search on the DirectFreight Website.
        type: boolean
      ship_date:
        description: Limits results to specified ship date(s).
        items:
          description: Please use the YYYY-MM-DD format.
          format: date
          type: string
        type: array
      sort_direction:
        default: asc
        description: The system automatically chooses the most common order based on the parameter chosen. Use this option if you want a specific sort direction.
        enum:
          - asc
          - desc
        example: asc
        type: string
      sort_parameter:
        default: age
        description: The system automatically chooses the most common order based on the parameter chosen.  Sort order can be specified by using the "sort_direction" parameter.
        enum:
          - origin_city
          - origin_state
          - destination_city
          - destination_state
          - trailer_type
          - load_size
          - pay_rate
          - rate_per_mile_est
          - credit_score
          - age
          - trip_miles
          - dead_head
          - length
          - weight
          - company_name
          - ship_date
          - receive_date
          - tia_user
          - green_light
          - new
          - book_now
          - avg_market_rate
          - posting_type
        example: age
        type: string
      tier:
        description: |-
          STAGE=PRIVATE  DEPRECATED  This field is an optional filter that limits board response to 'free' or 'premium' loads. If this field is not specified it defaults to 'all' loads.
          free loads - are loads that are more than 2 hours old. contact information and comments are visible even if this request comes from an unsubscribed account.
          premium loads - loads that are less than 2 hours old. contact information and comments are only visible for premium accounts.   
        enum:
          - all
          - free
          - premium
        type: string
      trailer_type:
        description: 'A string array of valid trailer types to limit the search. '
        example:
          - F
          - F+T
          - F+S
          - V
        items:
          enum:
            - V
            - VINT
            - SD
            - MX
            - HS
            - AC
            - LB
            - F+T
            - F
            - FINT
            - DD
            - V+V
            - V+A
            - CRG
            - HB
            - LA
            - PO
            - R
            - RINT
            - RGN
            - CV
            - DT
            - TNK
            - F+S
            - PNEU
            - CONT
            - OTHER
          type: string
        type: array
    type: object
    x-restlet:
      section: BOARDS
  board_response_item:
    properties:
      age:
        description: Time in minutes since load/truck was first posted. NULL is returned for values less than 1 minute.
        example: 15
        type: integer
      avg_market_rate:
        description: Average rate for this type of load during the last 28 days.  Returns either "$X.XX" or "Upgrade" or "Sign Up"
        type: string
      booking_info:
        description: Information about booking this load online.  Currently only returned by the single load endpoint.
        properties:
          book_button_action: {}
          book_button_data:
            description: 'data associated with the action. For example a url or a phone number. Only returned if book_button_action is call, external_browser, or internal_browser'
            example: 'https://www.truckersearch.com'
            type: string
          book_button_label:
            example: Book Now
            type: string
          book_header_label:
            example: Book Now
            type: string
          book_message:
            example: You must call 888-894-4198 before booking online
            type: string
          df_reference_code:
            example: tJJB-cQQDh19nkmyOn5xzjfdGSQao3bskaRDzc5r2IaX3_EBROT34pQ~
            type: string
          quote_button_action: {}
          quote_button_data:
            description: 'data associated with the action. For example a url or a phone number. Only returned if quote_button_action is call, external_browser, or internal_browser'
            example: 'https://www.truckersearch.com'
            type: string
          quote_button_label:
            example: Send Quote
            type: string
          quote_header_label:
            example: Quote this Load
            type: string
          quote_message:
            example: Please enter the dollar amount you are willing to book this load at
            type: string
          show_book_rate:
            example: true
            type: boolean
          show_or_label:
            example: true
            type: boolean
          show_quote_input:
            example: true
            type: boolean
        type: object
      comment:
        description: This field is only returned for an end_user_token that has the subscribed access level.
        example: Test Load
        type: string
      commodity:
        description: the type of cargo.  Currently only returned by the single load endpoint.
        type: string
      company_name:
        description: This field is only returned for an end_user_token that has the subscribed access level.
        example: ABC Company
        type: string
      credit_report_key:
        description: |-
          This field is only returned for an end_user_token that has access to credit reports.

          To access the credit report associated with the company for this item, use the key returned with the following url. https://www.directfreight.com/home/credit_report?refid=$credit_report_key
        type: string
      credit_score:
        description: The credit score for the company associated with this item.  Returns "XX" or "Upgrade" or "Signup"
        example: '99'
        type: string
      dead_head:
        description: 'Distance between request body origin_city, and response item origin_city. This field will be undefined if no origin_city is specified in the request body or if distance cannot be calculated.'
        example: 87
        type: integer
      destination_city:
        description: This field may be returned as null.
        minLength: 2
        type: string
      destination_state:
        description: This field may be returned as null.
        example: MO
        type: string
      entry_id:
        description: unique identifier for this item.
        example: '55555555'
        type: string
      full_load:
        description: Specifies whether load is full or partial.  Will always return true for trucks.
        example: true
        type: boolean
      green_light:
        description: Indicates whether broker/shipper for item is pre-approved for Rivera Finance factoring program.
        example: true
        type: boolean
      height:
        description: Height in feet.  Will be null if empty.
        type: number
      length:
        description: Length in feet.  Will be null if empty.
        type: number
      origin_city:
        description: Origin city of item.
        example: Chicago
        minLength: 2
        type: string
      origin_state:
        description: Origin state of item
        example: IL
        type: string
      pay_rate:
        description: Will be null if empty.
        type: number
      phone_extension:
        description: This field is only returned for an end_user_token that has the subscribed access level.   Will return null if empty.
        example: 123
        type: integer
      phone_number:
        description: This field is only returned for an end_user_token that has the subscribed access level.
        example: 555-555-5555
        type: string
      rate_per_mile_est:
        description: Rate per mile estimate
        example: 1.5
        type: number
      receive_date:
        example: 2018-09-24T00:00:00.000Z
        format: date
        type: string
      results_book_button_color:
        type: string
      results_book_button_label:
        type: string
      ship_date:
        description: The date the load is scheduled to be picked up.  For trucks this is the date the truck is available.
        example: 2018-09-20T00:00:00.000Z
        format: date
        type: string
      stops:
        description: a summary of the stops.  Currently only returned by the single load endpoint.
        items:
          $ref: '#/definitions/stop_item'
        type: array
      tags:
        description: 'Indicates special characteristics of a load record.  This field may be returned as a blank array.  Tags=  new, book_now_or_quote, unviewed'
        example: new
        items:
          type: string
        type: array
      trade_orgs:
        description: Approved Trade Organizations
        properties:
          tia_approved:
            description: TIA Approved (yes/no)
            type: string
        type: object
      trailer_type:
        description: A string array of valid trailer types.
        example: V
        items:
          type: string
        type: array
      trailer_type_details:
        description: A description of the trailer type.  This might also be a custom trailer type or a customer specified trailer type.
      trip_miles:
        description: Distance between origin and destination.  This field will be null if distance cannot be calculated.
        example: 523
        type: integer
      user_hid:
        description: This field is only returned for an end_user_token that has the subscribed or posting access level. The value when true represents that the user wishes the entry hidden. Refer to boards/hidden_entries/ documentation for more information on how to set and update this value.
        example: false
        type: boolean
      weight:
        description: Weight in pounds.  Will be null if empty.
        type: integer
      width:
        description: Width in feet.  Will be null if empty.
        type: number
    required:
      - age
      - credit_score
      - dead_head
      - destination_city
      - destination_state
      - entry_id
      - full_load
      - green_light
      - height
      - length
      - origin_city
      - origin_state
      - pay_rate
      - receive_date
      - ship_date
      - trailer_type
      - trip_miles
      - weight
      - width
    type: object
  board_response:
    example: |-
      {
        "list": "{}",
        "page_number": "{}",
        "total_items": "{}",
        "total_pages": 0,
        "total_new": 0,
        "search_url": "https://www.directfreight.com/..."
      }
    properties:
      list:
        description: A list of entries for this board.
        items:
          $ref: '#/definitions/board_response_item'
        type: array
      page_number:
        description: The page you are on.
        type: integer
      search_url:
        description: URL that can be used to perform this same search on the DirectFreight Website. Will only be returned if return_web_url is requested.
        type: string
      total_items:
        description: A count of all the entry objects for the specified search.
        type: integer
      total_pages:
        description: 'A count of the # of pages based on the search parameters.'
        type: integer
      total_unviewed_plus_viewed:
        description: STAGE=PRIVATE  This is the total number of loads that would be returned by this boards request if the boards request ignored the return_only "unviewed" attribute. The return_only field is an advanced field that allows for additional filter options.  Please contact Direct Freight for more information on gaining access to this field
        type: integer
    required:
      - list
    type: object
    x-restlet:
      section: BOARDS
  boards_accept_offer_response:
    properties:
      header:
        type: string
      message:
        type: string
      status:
        type: string
      success:
        type: boolean
    type: object
    x-restlet:
      section: BOARDS
  boards_freight_rate_response:
    description: There is some debug trailer types. They are formatted as TRAILER_TYPE_$subsection. They will most likely be removed at the same time as the below mentioned debug variables.
    properties:
      TRAILER_TYPE:
        description: Currently there is some debug keys that alos exist. Don't rely on these. They will most likely be removed in before Winter 2024.
        properties:
          payrate:
            description: 'This will return a list of dates, single key of newest_payrate'
            properties:
              CURRENT_DATE:
                format: date
                type: string
            type: object
          payrates_25th:
            description: 'This will return a list of dates, single key of newest_payrate'
            properties:
              CURRENT_DATE:
                format: date
                type: string
            type: object
          payrates_75th:
            description: 'This will return a list of dates, single key of newest_payrate'
            properties:
              CURRENT_DATE:
                format: date
                type: string
            type: object
          payrates_max:
            description: 'This will return a list of dates, single key of newest_payrate'
            properties:
              CURRENT_DATE:
                format: date
                type: string
            type: object
          payrates_min:
            description: 'This will return a list of dates, single key of newest_payrate'
            properties:
              CURRENT_DATE:
                format: date
                type: string
            type: object
          total_rates:
            description: 'This will return a list of dates, single key of total rates found for this day'
            properties:
              CURRENT_DATE:
                type: number
            type: object
        type: object
    x-restlet:
      section: BOARDS
  boards_offer_driver_list_response:
    properties:
      item_count:
        type: integer
      list:
        items:
          properties: {}
          type: object
        type: array
    type: object
    x-restlet:
      section: BOARDS
  boards_offer_driver_response:
    properties:
      driver_contact_info:
        type: string
      load_info_when_quoted:
        properties:
          age:
            format: int32
            type: integer
          allowed_actions:
            type: string
          booking_info:
            properties:
              book_button_action:
                type: string
              book_button_label:
                type: string
              book_header_label:
                type: string
              book_message:
                type: string
              df_reference_code:
                type: string
              quote_button_action:
                type: string
              quote_button_label:
                type: string
              quote_header_label:
                type: string
              quote_message:
                type: string
              show_book_rate:
                format: int32
                type: integer
              show_or_label:
                format: int32
                type: integer
              show_quote_input:
                format: int32
                type: integer
            type: object
          booking_partner:
            type: string
          broker_user_id:
            format: int32
            type: integer
          comment:
            format: nullable
            type: string
          company_name:
            type: string
          credit_report_key:
            type: string
          credit_score:
            format: nullable
            type: string
          custom_id:
            type: string
          destination_city:
            type: string
          destination_state:
            type: string
          details_url:
            format: nullable
            type: string
          entry_id:
            type: string
          full_load:
            type: boolean
          green_light:
            type: boolean
          height:
            format: nullable
            type: string
          length:
            format: nullable
            type: string
          origin_city:
            type: string
          origin_state:
            type: string
          other_trailer_types:
            format: nullable
            type: string
          pay_rate:
            format: int32
            type: integer
          phone_extension:
            format: int32
            type: integer
          phone_number:
            format: int64
            type: integer
          rate_per_mile_est:
            type: number
          receive_date:
            format: nullable
            type: string
          ship_date:
            format: date
            type: string
          tags:
            items:
              type: string
            type: array
          trade_orgs:
            properties:
              tia_approved:
                type: string
            type: object
          trailer_type:
            items:
              type: string
            type: array
          trip_miles:
            format: int32
            type: integer
          user_hid:
            type: boolean
          weight:
            format: nullable
            type: string
          width:
            format: nullable
            type: string
        type: object
      quote_amount:
        format: int32
        type: integer
    type: object
    x-restlet:
      section: BOARDS
  boards_profit_response:
    example:
      executive_summary: 'Based on all of the information we have about your truck and this load we believe this load would have a net profit of $-736.27 after you paid the driver(yourself) and all of the expenses. Fuel costs vary across your route you might consider buying fuel in MO, where fuel costs are $0.458 lower than the average fuel price along this route. '
      load_info:
        destination_city: New York
        destination_state: NY
        driver_cost: 2011.68
        fuel_cost: 7275.58
        fuel_per_gallon: '2.55'
        fuel_used: '429.85'
        gross_profit: -6892.52
        ins_permits: 363.22
        maint_cost: 474.98
        net_profit: -4482.25
        origin_city: San Diego
        origin_state: CA
        other_trip_costs_total: 555.22
        pay_rate: '6000'
        rate_per_mile_est: 2.15
        toll_cost: 1
        total_trip_cost: 12892.52
        trip_miles: 2794
        truck_ownership: 2766.06
      route_info:
        avg_fuel_price_trip: 2.604
        fuel_by_state:
          - avg_fuel_price: 2.625
            miles: 544
            state: AZ
          - avg_fuel_price: 3.218
            miles: 166
            state: CA
          - avg_fuel_price: 2.452
            miles: 465
            state: CO
          - avg_fuel_price: 2.454
            miles: 155
            state: IL
          - avg_fuel_price: 2.558
            miles: 156
            state: IN
          - avg_fuel_price: 2.351
            miles: 479
            state: KS
          - avg_fuel_price: 2.146
            miles: 247
            state: MO
          - avg_fuel_price: 2.725
            miles: 70
            state: NJ
          - avg_fuel_price: 2.809
            miles: 4
            state: NY
          - avg_fuel_price: 2.531
            miles: 225
            state: OH
          - avg_fuel_price: 2.831
            miles: 336
            state: PA
          - avg_fuel_price: 2.544
            miles: 14
            state: WV
      truck_info:
        deadhead_per_mile: 1.29
        driver_per_mile: 0.72
        fuel_capacity: 200
        ins_permits_per_mile: 0.13
        maint_per_mile: 0.17
        miles_per_gal: 6.5
        truck_ownership_per_mile: 0.27
    properties:
      executive_summary:
        description: Executive summary of trip profitability.
        type: string
      load_info:
        properties:
          destination_city:
            description: 'Origin City, returned as a convinience.'
            type: string
          destination_state:
            description: 'Two letter origin state abbreviation, returned as a convinience.'
            type: string
          driver_cost:
            description: Estimated driver costs.
            type: integer
          fuel_cost:
            description: Estimated cost of fuel.  fuel_used x avg_fuel_price_trip
            type: integer
          fuel_used:
            description: Estimated fuel needed for trip.
            type: integer
          gross_profit:
            description: Pay Rate - total_trip_cost
            type: number
          ins_permits:
            description: Estimated INS permit cost.
            type: integer
          maint_cost:
            description: Estimated maintenance costs.
            type: integer
          net_profit:
            description: Pay Rate - total_trip_cost - driver_cost
            type: number
          origin_city:
            description: 'Origin City, returned as a convinience.'
            type: string
          origin_state:
            description: 'Two letter origin state abbreviation, returned as a convinience.'
            type: string
          other_trip_costs_total:
            description: Tolls + Maintenance + Truck Ownership + INS/Permits.
            type: integer
          pay_rate:
            description: Returned as a convenience or "N/A" if value was not submitted.
            type: number
          rate_per_mile_est:
            description: Calculated using the same method as a boards load request.
            type: integer
          toll_cost:
            description: Estimated cost of tolls.
            type: number
          total_trip_cost:
            description: Total trip cost.
            type: integer
          trip_miles:
            description: 'Calculated distance, same value as when load was posted.'
            type: integer
          truck_ownership_per_mile:
            description: Estimated truck ownership costs.
            type: integer
        type: object
      route_info:
        properties:
          avg_dest_rate:
            type: integer
          avg_fuel_price_trip:
            description: Simple avgerage of all state average fuel prices for trip.  Does not account for miles traveled in each state.
            type: integer
          avg_lane_rate_30:
            type: integer
          avg_lane_rate_7:
            type: integer
          avg_lane_rate_90:
            type: integer
        type: object
      truck_info:
        properties:
          deadhead_per_mile:
            description: Retrieved from user profile.
            type: integer
          driver_per_mile:
            description: Retrieved from user profile.
            type: integer
          fuel_capacity:
            description: Retrieved from user profile.
            type: integer
          ins_permits_per_mile:
            description: Retrieved from user profile.
            type: integer
          maint_per_mile:
            description: Retrieved from user profile.
            type: integer
          miles_per_gal:
            description: Retrieved from user profile.
            type: integer
          truck_ownership_per_mile:
            description: Retrieved from user profile.
            type: integer
        type: object
    type: object
    x-restlet:
      section: BOARDS
  boards_saved_lanes_response:
    description: Each saved lane entry is a key/value object in the list.
    example:
      list:
        - destination_city: Atlanta
          destination_state: GA
          distance: 456
          flat_gross: 111
          flat_per_mile: 1.11
          lane_id: 123
          origin_city: Dallas
          origin_state: TX
          reefer_gross: 333
          reefer_per_mile: 3.33
          van_gross: 222
          van_per_mile: 2.22
    properties:
      list:
        properties:
          destination_city:
            type: string
          destination_state:
            type: string
          distance:
            type: integer
          flat_gross:
            type: number
          flat_per_mile:
            type: number
          lane_id:
            type: integer
          origin_city:
            type: string
          origin_state:
            type: string
          reefer_gross:
            type: number
          reefer_per_mile:
            type: number
          van_gross:
            type: number
          van_per_mile:
            type: number
        type: object
    x-restlet:
      section: BOARDS
  boards_submit_offer_response:
    properties:
      header:
        type: string
      message:
        type: string
      status:
        type: string
      success:
        type: boolean
    type: object
    x-restlet:
      section: BOARDS
  create_custom_field_data:
    properties:
      field_name:
        description: Custom field name.
        type: string
      posting_id:
        description: Posting ID.
        type: integer
      value:
        description: Value.
        type: string
    required:
      - field_name
      - posting_id
      - value
    type: object
  create_custom_field:
    properties:
      name:
        description: Custom field name.
        type: string
    required:
      - name
    type: object
  create_notes:
    properties:
      body:
        type: string
      entry_id:
        description: 'The entry to associate the note with. '
        type: string
      title:
        description: 'Subject of the note. '
        type: string
    required:
      - body
      - entry_id
      - title
    type: object
    x-restlet:
      section: BOARDS
  create_status_alert:
    properties:
      alert_id:
        type: integer
    type: object
    x-restlet:
      section: common_definitions
  create_status:
    properties:
      success:
        type: integer
    type: object
    x-restlet:
      section: common_definitions
  department_users_response:
    example: |-
      {
        "department_users": [
          {
            "id": 1234,
            "access_level": "read-only",
            "contact_name": "...",
            "dispatch_number": "(123) 123-4567",
            "mc_number": "12312312",
            "dot_number": "45645645",
            "username": "...",
            "email": "user@domain.com"
          }
        ]
      }
    properties:
      sub_accounts:
        items:
          properties:
            access_level:
              description: The access_level of the user.
              type: string
            contact_name:
              type: string
            dispatch_number:
              type: string
            dot_number:
              type: string
            email:
              type: string
            id:
              description: The ID of the department user.
              type: integer
            mc_number:
              type: string
            username:
              type: string
          type: object
        type: array
    type: object
    x-restlet:
      section: END_USER_AUTHENTICATIONS
  departments_response:
    example: |-
      {
          "departments": [
              {
                  "id": 8,
                  "name": "West Coast"
              }
          ]
      }
    properties:
      departments:
        items:
          properties:
            id:
              description: The ID of the department.
              type: integer
            name:
              description: The name of the department.
              type: string
          type: object
        type: array
    type: object
    x-restlet:
      section: END_USER_AUTHENTICATIONS
  end-user-token:
    properties:
      book_now:
        description: STAGE=private This is used for realm users
        type: boolean
      comment:
        description: STAGE=private This is used for realm users
        type: string
      end-user-token:
        description: On success an end-user-token is returned.
        example: XX423ASOEUHT4AESUTH
        type: string
      last_login:
        description: STAGE=private This is used for realm users
        format: date
        type: string
      submit_quote:
        description: STAGE=private This is used for realm users
        type: boolean
      user_id:
        description: STAGE=private This is used for realm users
        type: integer
    type: object
    x-restlet:
      section: END_USER_AUTHENTICATIONS
  error_object:
    example: |-
      {
        "code": 1,
        "error": "Generic Validation",
        "description": [ "The e-mail address must be valid." ]
      }
    properties:
      code:
        type: integer
      description:
        items:
          type: string
        type: array
      error:
        type: string
    required:
      - code
      - description
      - error
    type: object
    x-restlet:
      section: common_definitions
  fmcsa_profile_object:
    properties:
      add_date:
        type: string
      authorized_for_hire:
        format: int32
        type: integer
      carrier_operation:
        type: string
      dba_name:
        type: string
      dot_number:
        type: string
      driver_total:
        type: string
      email_address:
        type: string
      exempt_for_hire:
        format: int32
        type: integer
      fax:
        type: string
      federal_government:
        format: int32
        type: integer
      hm_flag:
        format: int32
        type: integer
      indian_tribe:
        format: int32
        type: integer
      insert_date:
        format: date
        type: string
      legal_name:
        type: string
      local_government:
        format: int32
        type: integer
      mailing_city:
        type: string
      mailing_country:
        type: string
      mailing_state:
        type: string
      mailing_street:
        type: string
      mailing_zip:
        type: string
      mcs150_date:
        type: string
      mcs150_mileage:
        type: string
      mcs150_mileage_year:
        type: string
      migrant:
        format: int32
        type: integer
      nbr_power_unit:
        type: string
      oic_state:
        type: string
      op_other:
        type: string
      pc_flag:
        format: int32
        type: integer
      phy_city:
        type: string
      phy_country:
        type: string
      phy_state:
        type: string
      phy_street:
        type: string
      phy_zip:
        type: string
      private_only:
        format: int32
        type: integer
      private_passenger_business:
        format: int32
        type: integer
      private_passenger_nonbusiness:
        format: int32
        type: integer
      private_property:
        format: int32
        type: integer
      recent_mileage:
        type: string
      recent_mileage_year:
        type: string
      state_government:
        format: int32
        type: integer
      telephone:
        type: string
      us_mail:
        format: int32
        type: integer
      vmt_source_id:
        type: string
    type: object
    x-restlet:
      section: PROFILES
  get_boards_notes_response:
    properties:
      list:
        description: A list of requested notes
        items:
          $ref: '#/definitions/notes_response_item'
        type: array
    required:
      - list
    type: object
    x-restlet:
      section: BOARDS
  get_custom_fields_data_response:
    example: |-
      {
        "load_id": [
          "field1" : "data1",
          "field2" : "data2"
        ]
      }
    properties:
      lists:
        description: 'A list of each custom field, type and it''s corresponding position.'
        items:
          type: string
        type: array
    type: object
    x-restlet:
      section: not categorized yet
  get_custom_fields_name_response:
    example: |-
      {
        "list": [
          "field1",
          "field2"
        ]
      }
    properties:
      lists:
        description: 'A list of each custom field, type and it''s corresponding position.'
        items:
          type: string
        type: array
    type: object
    x-restlet:
      section: not categorized yet
  get_email_exists_response:
    example: |-
      {
        "exists": true
      }
    properties:
      exists:
        description: Returns a true value if it is associated with an account.
        type: boolean
    type: object
    x-restlet:
      section: not categorized yet
  get_hidden_companies_response:
    example: |-
      {
        "company_name": [
          "company_name",
          "company_name"
        ]
      }
    properties:
      company_name:
        description: A subset of companies that need to be marked as hidden.
        items:
          type: string
        type: array
    type: object
    x-restlet:
      section: not categorized yet
  get_hidden_entries:
    example:
      entry_id:
        - entry_id
        - entry_id
    properties:
      entry_id:
        description: A subset of entries that need to be marked as hidden.
        items:
          type: string
        type: array
    type: object
    x-restlet:
      section: not categorized yet
  get_state_list_response:
    example: |-
      {
        "list": { 
          "AZ": { 
            "inbound": 10, 
            "outbound": 5, 
            "outbound_percentage": 50,
            "outbound_color": "#43434334",
            "freight_rates": {
              "inbound": {
                "ALL": "5.95"
              },
              "outbound": {
                "ALL": "5.95"
              }
            }
          } 
        }
      }
    properties:
      list:
        description: A hash of state totals.
        example: '{ "AZ": { "inbound": 10, "outbound": 5, "outbound_percentage": 50, "freight_rates": {} }'
        properties:
          list:
            additionalProperties:
              description: state name
              properties:
                freight_rates:
                  properties:
                    inbound:
                      properties:
                        FLAT:
                          type: string
                        VAN:
                          type: string
                      type: object
                    outbound:
                      properties:
                        FLAT:
                          type: string
                        VAN:
                          type: string
                      type: object
                  type: object
                inbound:
                  type: integer
                outbound:
                  type: integer
                outbound_color:
                  description: This is an optional color code you can use to shade the map.
                  type: string
                outbound_percentage:
                  type: integer
              type: object
            type: object
        type: object
    x-restlet:
      section: BOARDS
  hidden_entry_object:
    properties:
      entry_id:
        description: The entry(s) that need to be marked as hidden.
        items:
          type: string
        type: array
    required:
      - entry_id
    type: object
    x-restlet:
      section: BOARDS
  login_credentials:
    properties:
      login:
        description: 'The e-mail, or username information needed to log in. '
        type: string
      realm:
        description: 'This specifies who to log in with. If left blank we will assume email/password. Valid realms are username, email, facebook(not implemneted), google(not implemented), and linkedin(not implemented). '
        enum:
          - username
          - email
        type: string
      secret:
        description: 'The password, or token required for this login. '
        type: string
    required:
      - login
      - realm
      - secret
    type: object
    x-restlet:
      section: END_USER_AUTHENTICATIONS
  mark_hidden_companies:
    properties:
      company_name:
        description: The company that need to be marked as hidden.
        type: string
    required:
      - company_name
    type: object
    x-restlet:
      section: not categorized yet
  note_create_status:
    properties:
      note_id:
        description: Id of the note.
        type: integer
      success:
        type: integer
    required:
      - note_id
    type: object
    x-restlet:
      section: common_definitions
  notes_response_item:
    example: test
    properties:
      body:
        description: Body of the note
        example: This is a test note.
        type: string
      date_added:
        description: The date the note was created.
        example: 2019-08-23T00:00:00.000Z
        format: date
        type: string
      date_modified:
        description: Date of the last update to this note
        example: 2019-08-24T00:00:00.000Z
        format: date
        type: string
      deleted:
        description: Not sure what this field is?  Is this the date the note was deleted or the status of the load?
        type: string
      entry_id:
        description: Entry id of the load associated with this note.
        example: 93b30df654ccd860eb34775214877921
        type: string
      id:
        description: The id of the note.
        example: 55551
        type: integer
      important:
        description: Identifies notes marked as important.
        example: true
        type: boolean
      title:
        description: Title of note.
        example: MO
        type: string
    required:
      - body
      - date_added
      - date_modified
      - deleted
      - entry_id
      - id
      - important
      - title
    type: object
    x-restlet:
      section: BOARDS
  patch_alert_properties:
    properties:
      alert_id:
        description: Specify which alert you are updating.
        type: integer
      days_of_week:
        description: Limit the days that alerts are sent to the days listed.
        items:
          enum:
            - Sun
            - Mon
            - Tue
            - Wed
            - Thu
            - Fri
            - Sat
          type: string
        type: array
      end_hour:
        description: A value corresponding to the hour of the day.
        maximum: 21
        minimum: 3
        type: integer
      expires_after:
        description: The last day the alert will be valid. Valid time frames are from today until one year into the future. Cannot be changed if alert is inactive.
        format: date
        type: string
      list_type:
        description: 'This specify the type of list that is returned, including disabling the list from being sent at all.'
        enum:
          - complete-list
          - only-new
          - only-new-free
          - not-active
        type: string
      minute_frequency:
        description: How many minutes to wait before sending another alert.
        type: integer
      send_type:
        description: What method to send the alert list.
        enum:
          - email
          - text
          - push
          - desktop
        type: string
      start_hour:
        description: A value corresponding to the hour of the day.
        maximum: 21
        minimum: 3
        type: integer
      time_zone:
        description: 'A number between -1 and 2. -1 = EST, 0 = CST, 1 = MST, 2 = PST'
        maximum: 2
        minimum: -1
        type: integer
    required:
      - alert_id
    type: object
    x-restlet:
      section: ALERTS
  post_posting_type_action_body:
    properties:
      new_load_custom_id:
        description: 'Optionally specify the custom_id that should be assigned to the new load. This is required for the copy command, for the move command it will be auto-generated if one is not specified.'
        type: string
      source_id:
        description: The posting id of the posting you are moving or copying.
        type: integer
      source_posting:
        description: Where the items are coming from. Loads can not be moved or copied to trucks and trucks can not be moved or copied to loads.
        enum:
          - loads
          - trucks
          - private_loads
          - private_trucks
          - test_loads
          - test_trucks
        type: string
    required:
      - source_id
      - source_posting
    type: object
    x-restlet:
      section: not categorized yet
  posting_post_response:
    example: |-
      {
        "list": [
          .....
        ]
      }
    properties:
      list:
        description: A list of posting objects you can iterate over.
        items:
          $ref: '#/definitions/postings_post_response_item'
        type: array
    type: object
    x-restlet:
      section: POSTINGS
  postings_entry_object:
    example:
      allowed_actions:
        - call
      booking_partner: ...
      comment: hello world
      custom_id: abc123
      destination_city: San Francisco
      destination_state: CA
      details_url: 'https://www.example.com/?loadnumber=1234'
      dispatch_email: dispatch@directfreight.com
      dispatch_mobile_number: 7777777777
      full_load: true
      height: 22
      length: 22
      origin_city: seattle
      origin_state: WA
      other_trailer_types: Lowboy
      pay_rate: 0.22
      phone_extension: 666
      phone_number: 7777777777
      real_age: 2025-07-07T00:00:00.000Z
      receive_date: 2020-05-06T00:00:00.000Z
      ship_date: 2020-05-06T00:00:00.000Z
      trailer_type:
        - R
      weight: 2200
      width: 22
    properties:
      allowed_actions:
        description: 'What actions are available for this load, defaults to "call".'
        items:
          enum:
            - send_quote
            - book_now
            - request_info
            - call
            - email
            - text
            - desktop_push
            - mobile_push
            - no_call
            - no_email
            - no_text
            - url_direct_book
            - url_details
            - no_call_unverified
          type: string
        type: array
      booking_partner:
        description: Booking partner.
        type: string
      category:
        description: 'This option only applies to "private_loads", "private_trucks"'
        type: string
      comment:
        type: string
      custom_id:
        description: An identifier that can be provided for your own records.  (i.e.-Company load number) This field can be used to retrieve loads via GET.  This value must be unique. Custom Id's can have a maximum of 25 characters.
        type: string
      custom_md5sum:
        description: A custom checksum to identify the original string processed by the directfreight spiders.
        type: string
      destination_city:
        description: Delivery location city of load/truck. For truck type entries this field is optional or can be used to specify a region.
        type: string
      destination_state:
        description: Delivery location state of load/truck. For truck type entries this field is optional.
        type: string
      details_url:
        description: An optional URL with additional information about this load.
        type: string
      dispatch_email:
        description: Dispatch e-Mail.
        type: string
      dispatch_mobile_number:
        description: Dispatch mobile number.
        type: string
      full_load:
        description: The load will be assumed to be full if this argument isn't included and marked to true.
        type: boolean
      height:
        description: height in feet.
        type: number
      length:
        description: length in feet.
        type: number
      origin_city:
        description: Origin city location of load or truck.  Required for all entry types.
        type: string
      origin_state:
        description: Origin state location of load or truck.  Use the 2 digit state abbreviation.
        maxLength: 2
        minLength: 2
        type: string
      other_trailer_types:
        description: Can be used to specify custom trailer types.
        type: string
      pay_rate:
        description: 'This field will accept either the per mile rate, or gross rate.'
        type: number
      phone_extension:
        description: If not provided we will use the contact info associated with the users profile.
        type: integer
      phone_number:
        description: If not provided we will use the contact info associated with the users profile.
        type: integer
      real_age:
        description: When this item was created.  STAGE=PRIVATE
        format: date
        type: string
      receive_date:
        description: The date the load/truck should deliver.
        format: date
        type: string
      ship_date:
        description: When posting loads this is the date the load should be picked up.  When posting trucks this is the date the truck is available to be loaded.
        format: date
        type: string
      trailer_type:
        description: This can have 1 or more standard trailer types.
        items:
          enum:
            - V
            - VINT
            - SD
            - MX
            - HS
            - AC
            - LB
            - F+T
            - F
            - FINT
            - DD
            - V+V
            - V+A
            - CRG
            - HB
            - LA
            - PO
            - R
            - RINT
            - RGN
            - CV
            - DT
            - TNK
            - F+S
            - PNEU
            - CONT
            - OTHER
          type: string
        type: array
      weight:
        description: weight in pounds.
        type: integer
      width:
        description: width in feet.
        type: number
    required:
      - custom_id
      - origin_city
      - origin_state
      - ship_date
      - trailer_type
    type: object
    x-restlet:
      section: POSTINGS
  postings_patch_object:
    example:
      allowed_actions:
        - call
      booking_partner: ...
      comment: hello world
      custom_id: abc123
      destination_city: cincinnati
      destination_state: OH
      details_url: 'https://www.example.com/?loadnumber=1234'
      dispatch_email: dispatch@directfreight.com
      dispatch_mobile_number: 7777777777
      full_load: true
      height: 11
      length: 11
      origin_city: pittsburg
      origin_state: PA
      other_trailer_types: hot shot
      pay_rate: 11
      phone_extension: 777
      phone_number: 777777777
      real_age: 2025-07-01T00:00:00.000Z
      receive_date: 2020-05-07T00:00:00.000Z
      ship_date: 2020-05-06T00:00:00.000Z
      trailer_type:
        - V+V
      weight: 1100
      width: 11
    properties:
      allowed_actions:
        description: 'What actions are available for this load, defaults to "call".'
        items:
          enum:
            - send_quote
            - book_now
            - request_info
            - call
            - email
            - text
            - desktop_push
            - mobile_push
            - no_call
            - no_email
            - no_text
            - url_direct_book
            - url_details
            - no_call_unverified
          type: string
        type: array
      booking_partner:
        description: Booking partner.
        type: string
      category:
        description: 'This option only applies to "private_loads", "private_trucks"'
        type: string
      comment:
        type: string
      custom_id:
        description: |-
          An identifier that can be provided for your own records. (i.e.-Company load number) This field can be used to retrieve loads via GET. This value must be unique.
          You cannot update a custom_id once it is set. Please delete and reenter the load to change the custom_id.  Either posting_id or custom_id is required.
        type: string
      custom_md5sum:
        description: A custom checksum to identify the original string processed by the directfreight spiders.
        type: string
      destination_city:
        description: Delivery location city of load/truck.
        type: string
      destination_state:
        description: Delivery location city of load/truck.
        type: string
      details_url:
        description: An optional URL with additional information about this load.
        type: string
      dispatch_email:
        description: Dispatch e-Mail.
        type: string
      dispatch_mobile_number:
        description: Dispatch mobile number.
        type: string
      full_load:
        description: This should only be used with loads.
        type: boolean
      height:
        description: height in feet.
        type: number
      length:
        description: length in feet.
        type: number
      origin_city:
        description: Origin city location of load or truck
        type: string
      origin_state:
        description: Origin state location of load or truck
        type: string
      other_trailer_types:
        description: Can be used to specify custom trailer types.
        type: string
      pay_rate:
        description: 'This field will accept either the per mile rate, or gross rate.'
        type: number
      phone_extension:
        description: If not provided we will use the contact info associated with the users profile.
        type: integer
      phone_number:
        description: 'If not provided we will use the contact info associated with the users profile. Can be a string such as "Online Only", "View Details" depending on the load and the account type.'
        type: string
      posting_id:
        description: |-
          A unique id for each entry.  This value is returned via GET. 
          Either posting_id or custom_id is required.
        type: integer
      real_age:
        description: The date the entry was created.  STAGE=PRIVATE
        format: date
        type: string
      receive_date:
        description: The date the load/truck should deliver.
        format: date
        type: string
      ship_date:
        description: When posting loads this is the date the load should be picked up.  When posting trucks this is the date the truck is available to be loaded.
        format: date
        type: string
      trailer_type:
        description: This can have 1 or more standard trailer types.
        items:
          enum:
            - V
            - VINT
            - SD
            - MX
            - HS
            - AC
            - LB
            - F+T
            - F
            - FINT
            - DD
            - V+V
            - V+A
            - CRG
            - HB
            - LA
            - PO
            - R
            - RINT
            - RGN
            - CV
            - DT
            - TNK
            - F+S
            - PNEU
            - CONT
            - OTHER
          type: string
        type: array
      weight:
        description: weight in pounds.
        type: integer
      width:
        description: width in feet.
        type: number
    type: object
    x-restlet:
      section: POSTINGS
  postings_post_response_item:
    properties:
      allowed_actions:
        description: 'What actions are available for this load, defaults to "call".'
        items:
          enum:
            - send_quote
            - book_now
            - request_info
            - call
            - email
            - text
            - desktop_push
            - mobile_push
            - no_call
            - no_email
            - no_text
            - url_direct_book
            - url_details
            - no_call_unverified
          type: string
        type: array
      comment:
        type: string
      contact_name:
        description: This is generated from the logged in users profile information.
        type: string
      custom_id:
        description: A unique identifier a user can provide for their own records.
        type: integer
      destination_city:
        description: Delivery location city of load/truck.
        type: string
      destination_state:
        description: Delivery location state of load/truck.
        items:
          type: string
        type: array
      full_load:
        description: For trucks this will always be false.
        type: boolean
      height:
        description: height in feet.
        type: number
      length:
        description: length in feet.
        type: number
      origin_city:
        description: Origin city location of load or truck
        type: string
      origin_state:
        description: Origin state location of load or truck.
        type: string
      other_trailer_types:
        description: To include custom trailer types.
        type: string
      pay_rate:
        description: 'We expect one of 2 formats. either the per mile, or total sum.'
        type: number
      phone_extension:
        description: If not supplied and not in the user's profile this will be null.
        type: integer
      phone_number:
        description: 'If not supplied, this is generated from the logged in users profile information.'
        type: integer
      posting_id:
        description: This is the unique ID of this post.
        type: integer
      receive_date:
        description: The date the load/truck should deliver.
        format: date
        type: string
      ship_date:
        description: The date you wish the load to be shipped.
        format: date
        type: string
      trailer_type:
        description: This can have 1 or more standard trailer types.
        items:
          enum:
            - V
            - VINT
            - SD
            - MX
            - HS
            - AC
            - LB
            - F+T
            - F
            - FINT
            - DD
            - V+V
            - V+A
            - CRG
            - HB
            - LA
            - PO
            - R
            - RINT
            - RGN
            - CV
            - DT
            - TNK
            - F+S
            - PNEU
            - CONT
            - OTHER
          type: string
        type: array
      username:
        description: STAGE=private only returned if a whoentered is specified.
        type: string
      weight:
        description: weight in pounds.
        type: integer
      width:
        description: width in feet.
        type: number
    required:
      - comment
      - contact_name
      - custom_id
      - destination_city
      - destination_state
      - full_load
      - height
      - length
      - origin_city
      - origin_state
      - other_trailer_types
      - pay_rate
      - phone_extension
      - phone_number
      - posting_id
      - receive_date
      - ship_date
      - trailer_type
      - weight
      - width
    type: object
    x-restlet:
      section: POSTINGS
  postings-copy_or_move_response:
    properties:
      success:
        properties:
          message:
            description: An explanation of what each code means.
            type: string
          posting_id:
            type: integer
          status:
            type: integer
        required:
          - message
          - posting_id
          - status
        type: object
    type: object
    x-restlet:
      section: POSTINGS
  postings-post_or_patch_response:
    example: Success
    properties:
      list:
        items:
          properties:
            code:
              type: integer
            description:
              description: An explanation of what each code means.
              type: string
            status:
              enum:
                - Success
                - Error
              type: string
          required:
            - status
          type: object
        type: array
    required:
      - list
    type: object
    x-restlet:
      section: POSTINGS
  postings-replace_all_response:
    properties:
      delete_count:
        description: Total number of items deleted from source.
        type: number
      insert_count:
        description: Total number of items inserted into destination.
        type: number
      message:
        description: Operation Successful.
        type: string
      replaced_entries:
        description: List of entry ids that were replaced.
        items:
          type: string
        type: array
    type: object
    x-restlet:
      section: POSTINGS
  profile_object_patch:
    example:
      address: 11 Wall Street
      carrier_onboard_url: www.carrier.com/onboard
      carrier_terms_url: www.carrier.com/terms
      city: New York
      company: NY Stock Exchange
      contact_extension: 111
      contact_name: J.P. Morgan
      contact_number: 8885559999
      dispatch_extension: 123
      dispatch_number: 4445556666
      dot_number: '12345678'
      email: test@directfreight.com
      fax_number: 1112223333
      mc_number: '12345678'
      mobile_carrier: Sprint
      mobile_number: 4445556666
      state: NY
      web_page: www.directfreight.com
      zip: '12345'
    properties:
      address:
        type: string
      carrier_onboard_url:
        type: string
      carrier_terms_url:
        type: string
      city:
        type: string
      company:
        description: 'Company name. '
        type: string
      contact_extension:
        type: integer
      contact_name:
        description: 'Contact name. '
        type: string
      contact_number:
        type: integer
      dispatch_extension:
        description: Limited to 3 integers
        type: integer
      dispatch_number:
        type: integer
      dot_number:
        description: Maximum 8 numbers.
        type: number
      email:
        type: string
      fax_number:
        type: integer
      mc_number:
        type: string
      mobile_carrier:
        enum:
          - Other/Unknown
          - AT&T
          - Verizon
          - Sprint
          - T-Mobile
          - US Cellular
          - Nextel
          - Virgin Mobile
          - Boost Mobile
          - Straight Talk
          - Tracfone
          - NET10
          - Metro PCS
          - Cricket
          - Rogers
          - Fido
          - Bell Mobility
          - Telus
          - Clearnet
          - Solo Mobile
          - Koodo Mobile
        type: string
      mobile_number:
        type: integer
      state:
        type: string
      web_page:
        type: string
      zip:
        type: string
    type: object
    x-restlet:
      section: PROFILES
  profile_object:
    example:
      address: 11 Wall Street
      carrier_onboard_url: www.carrier.com/onboard
      carrier_terms_url: www.carrier.com/terms
      city: New York
      company: NY Stock Exchange
      contact_extension: 111
      contact_name: J.P. Morgan
      contact_number: 8885559999
      deadhead_per_mile: 1.29
      dispatch_extension: 123
      dispatch_number: 4445556666
      dot_number: '12345678'
      driver_per_mile: 0.72
      fax_number: 1112223333
      fuel_capacity: 200
      ins_permits_per_mile: 0.13
      maint_per_mile: 0.17
      mc_number: '12345678'
      miles_per_gal: 6.5
      mobile_carrier: Sprint
      mobile_number: 4445556666
      state: NY
      truck_ownership_per_mile: 0.27
      web_page: www.directfreight.com
      zip: '12345'
    properties:
      address:
        type: string
      carrier_onboard_url:
        type: string
      carrier_terms_url:
        type: string
      city:
        type: string
      company:
        description: Company name.
        type: string
      contact_extension:
        type: integer
      contact_name:
        description: Contact name.
        type: string
      contact_number:
        type: integer
      dispatch_extension:
        description: Limited to 3 integers
        type: integer
      dispatch_number:
        type: integer
      dot_number:
        description: Maximum 8 numbers.
        type: number
      driver_per_mile:
        description: STAGE=Private
        type: number
      fax_number:
        type: integer
      fuel_capacity:
        description: STAGE=Private
        type: number
      ins_permits_per_mile:
        description: STAGE=Private
        type: number
      maint_per_mile:
        description: STAGE=Private
        type: number
      mc_number:
        description: Maximum 8 numbers.
        type: number
      miles_per_gal:
        description: STAGE=Private
        type: number
      mobile_carrier:
        enum:
          - Other/Unknown
          - AT&T
          - Verizon
          - Sprint
          - T-Mobile
          - US Cellular
          - Nextel
          - Virgin Mobile
          - Boost Mobile
          - Straight Talk
          - Tracfone
          - NET10
          - Metro PCS
          - Cricket
          - Rogers
          - Fido
          - Bell Mobility
          - Telus
          - Clearnet
          - Solo Mobile
          - Koodo Mobile
        type: string
      mobile_number:
        type: integer
      state:
        type: string
      truck_ownership_per_mile:
        description: STAGE=Private
        type: number
      web_page:
        type: string
      zip:
        type: string
    type: object
    x-restlet:
      section: PROFILES
  rename_custom_field:
    properties:
      current_name:
        description: 'The field/column to be renamed. '
        type: string
      new_name:
        description: 'Replacement name. '
        type: string
    required:
      - current_name
      - new_name
    type: object
    x-restlet:
      section: PROFILES
  rename_document:
    properties:
      current_name:
        description: 'The document to be renamed. '
        type: string
      new_name:
        description: 'Replacement name. '
        type: string
    required:
      - current_name
      - new_name
    type: object
    x-restlet:
      section: PROFILES
  reverse_geocode_response:
    properties:
      city:
        type: string
      region_code:
        type: string
      region_name:
        type: string
    required:
      - city
      - region_code
      - region_name
    type: object
    x-restlet:
      section: LOCATIONS
  social_login_credentials:
    properties:
      create_missing_account:
        default: false
        description: If true the endpoint will create the users account in case it doesnt already exist.
        type: boolean
      referrer:
        description: Optional referrer to save with new account creation.
        type: string
      search_term:
        description: Optional search term to save with new account creation.
        type: string
      service:
        description: 'Takes a social login service name,'
        enum:
          - google
          - facebook
          - facebook-code
          - apple
        type: string
      token:
        description: ' The token returned by the social login service. For Google the value expected is : data.code For Facebook the value expected is : data.authResponse.accessToken For Apple the value expected is : data.detail.authorization.id_token'
        type: string
    required:
      - service
      - token
    type: object
    x-restlet:
      section: END_USER_AUTHENTICATIONS
  social-login-end-user-token:
    properties:
      email:
        description: The email address that was used to login.
        example: example@directfreight.com
        type: string
      end-user-token:
        description: On success and end-user-token is returned.
        example: XX423ASOEUHT4AESUTH
        type: string
      new_account:
        description: Indicates if a new account was created or an existing one was used to login.
        example: false
        type: boolean
    type: object
    x-restlet:
      section: END_USER_AUTHENTICATIONS
  stop_item:
    properties:
      label:
        description: Label for this field.
        example: 'Pickup #1'
        type: string
      summary:
        description: Summary of this field.
        example: '411 Locust Chillicothe, MO 64601 on 03-02-2023'
        type: string
  sub_account_response:
    example: |-
      {
        "sub_accounts": [
          {
            "id": 1234,
            "status": "invited",
            "contact_name": "...",
            "dispatch_number": "(123) 123-4567",
            "mc_number": "12312312",
            "dot_number": "45645645",
            "username": "...",
            "email": "user@domain.com",
            "department_id": 5,
            "department_name": "West Coast"
          }
        ],
        "subscriptions_purchased": 5,
        "active_sub_accounts": 3
      }
    properties:
      active_sub_accounts:
        description: Number of licenses used.
        type: integer
      sub_accounts:
        items:
          properties:
            contact_name:
              type: string
            department_id:
              type: integer
            department_name:
              type: string
            dispatch_number:
              type: string
            dot_number:
              type: string
            email:
              type: string
            id:
              description: The ID of the additional user.
              type: integer
            mc_number:
              type: string
            status:
              description: The status of the sub-account.
              type: string
            username:
              type: string
          type: object
        type: array
      subscriptions_purchased:
        description: Number of licenses purchased.
        type: integer
    type: object
    x-restlet:
      section: END_USER_AUTHENTICATIONS
  toggle_hidden_companies:
    properties:
      company_name:
        description: 'The company name that need to be toggled. '
        type: string
    required:
      - company_name
    type: object
    x-restlet:
      section: not categorized yet
  toggle_hidden_entries:
    properties:
      entry_id:
        description: 'The entry that need to be toggled. '
        items:
          type: string
        type: array
    required:
      - entry_id
    type: object
    x-restlet:
      section: BOARDS
  trailer_type:
    description: These are the officially supported trailer types.
    items:
      enum:
        - V
        - VINT
        - SD
        - MX
        - HS
        - AC
        - LB
        - F+T
        - F
        - FINT
        - DD
        - V+V
        - V+A
        - CRG
        - HB
        - LA
        - PO
        - R
        - RINT
        - RGN
        - CV
        - DT
        - TNK
        - F+S
        - PNEU
        - CONT
        - OTHER
      type: string
    type: array
    x-restlet:
      section: common_definitions
  truck_info_object:
    example:
      deadhead_per_mile: 1.29
      driver_per_mile: 0.72
      fuel_capacity: 200
      ins_permits_per_mile: 0.13
      maint_per_mile: 0.17
      miles_per_gal: 6.5
      truck_ownership_per_mile: 0.27
    properties:
      deadhead_per_mile:
        type: number
      driver_per_mile:
        type: number
      fuel_capacity:
        type: number
      ins_permits_per_mile:
        type: number
      maint_per_mile:
        type: number
      miles_per_gal:
        type: number
      truck_ownership_per_mile:
        type: number
    type: object
    x-restlet:
      section: PROFILES
  update_notes_status:
    properties:
      success:
        type: integer
    type: object
    x-restlet:
      section: common_definitions
  update_notes:
    properties:
      body:
        type: string
      note_id:
        description: Id of the note
        type: integer
      title:
        description: 'Subject of the note. '
        type: string
    required:
      - body
      - note_id
      - title
    type: object
    x-restlet:
      section: BOARDS
  upload_document:
    properties:
      filename:
        description: 'The file to be uploaded. '
        properties: {}
        type: object
    required:
      - filename
    type: object
    x-restlet:
      section: PROFILES
  user:
    properties:
      email:
        description: 'This must be a valid e-mail. '
        type: string
      partner:
        description: Optional partner string to be associated with the new account.
        type: string
      password:
        description: 'Currently this is a 6-10 digit alphanumeric password. '
        type: string
    required:
      - email
      - password
    type: object
    x-restlet:
      section: END_USER_AUTHENTICATIONS
