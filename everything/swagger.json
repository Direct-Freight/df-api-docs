{
  "basePath": "/v1",
  "consumes": [
    "application/json"
  ],
  "host": "api.directfreight.com",
  "info": {
    "contact": {},
    "description": "In order to use the Direct Freight Load Board API please first contact us to get an API Token. \nThis token needs to be sent as a HTTP header argument in every request to our API.\n\napi-token=\"SECRET KEY\"\n\nPlease keep your api-token a secret. If the token is compromised please contact us to get a new one.\n\nThis api token authenticates your application and gives it access to the API.\n\nThe API token should not be confused with the end-user-token. \nThe end-user-token is given to you via the end_user_authentications endpoint when the user logs in. \nThe end-user-token is needed in order to use certain features, and get certain sensitive information.\n\nBoth Tokens are stateless, and delivered via the HTTP headers.\n\nThe api token is a permanent token assigned to each partner.\nThe user token is a temporary session token assigned to each direct freight user.\nThe user token can be valid for up to 24 hours depending on activity.",
    "title": "Direct Freight Load Board API",
    "version": "1.0",
    "x-logo": {
      "url": "https://www.directfreight.com/home/images/logo-direct-freight.png"
    }
  },
  "parameters": {
    "end-user-token": {
      "in": "header",
      "name": "end-user-token",
      "required": true,
      "type": "string"
    },
    "end-user-token-optional": {
      "in": "header",
      "name": "end-user-token",
      "required": false,
      "type": "string"
    },
    "board_type": {
      "description": "Valid types are \"loads\", and \"trucks\".",
      "enum": [
        "loads",
        "trucks"
      ],
      "in": "path",
      "name": "board_type",
      "required": true,
      "type": "string"
    },
    "posting_type": {
      "description": "Valid types are \"loads\", \"trucks\", \"private_loads\", \"private_trucks\", \"test_loads\", and \"test_trucks\"",
      "enum": [
        "loads",
        "trucks",
        "private_loads",
        "private_trucks",
        "test_loads",
        "test_trucks"
      ],
      "in": "path",
      "name": "posting_type",
      "required": true,
      "type": "string"
    }
  },
  "produces": [
    "application/json"
  ],
  "responses": {
    "error_422": {
      "description": "Unprocessable Entity. More information provided in the return object.",
      "schema": {
        "$ref": "#/definitions/error_object"
      }
    },
    "object_created": {
      "description": "Object created check the headers for a reference URL.",
      "schema": {
        "$ref": "#/definitions/create_status"
      }
    }
  },
  "schemes": [
    "https"
  ],
  "security": [
    {
      "api-token": []
    }
  ],
  "securityDefinitions": {
    "api-token": {
      "in": "header",
      "name": "api-token",
      "type": "apiKey"
    }
  },
  "swagger": "2.0",
  "x-restlet": {
    "sections": {
      "ALERTS": {},
      "BOARDS": {},
      "END_USER_AUTHENTICATIONS": {},
      "LOCATIONS": {},
      "Mobile Update": {},
      "Optins": {},
      "POSTINGS": {},
      "PROFILES": {},
      "VALIDATIONS": {},
      "common_definitions": {},
      "not categorized yet": {}
    }
  },
  "paths": {
    "/alerts/{board_type}": {
      "delete": {
        "parameters": [
          {
            "description": "Valid types are \"loads\", and \"trucks\".",
            "enum": [
              "loads",
              "trucks"
            ],
            "in": "path",
            "name": "board_type",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Specify to just delete some alerts.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "alert_id",
            "required": true,
            "type": "array"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          }
        },
        "summary": "STAGE=UNKNOWN Delete an alert.",
        "tags": [
          "alerts"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://api.directfreight.com/v1/alerts/%7Bboard_type%7D',\n  qs: { alert_id: 'SOME_ARRAY_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\");\n\nreq.query({\n  \"alert_id\": \"SOME_ARRAY_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"'https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/alerts/%7Bboard_type%7D');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setQueryData(array(\n  'alert_id' => 'SOME_ARRAY_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/alerts/%7Bboard_type%7D');\n$request->setRequestMethod('DELETE');\n$request->setQuery(new http\\QueryString(array(\n  'alert_id' => 'SOME_ARRAY_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\"\n\nquerystring = {\"alert_id\":\"SOME_ARRAY_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url 'https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE 'https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "description": "Get a list of alerts. You can optionally limit the list by specifcying alerts by their alert_id. Returns 50 alerts by default.",
        "parameters": [
          {
            "description": "Valid types are \"loads\", and \"trucks\".",
            "enum": [
              "loads",
              "trucks"
            ],
            "in": "path",
            "name": "board_type",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "only get a subset of alerts. As this is a get request this is specified as a query string parameter.",
            "in": "query",
            "items": {
              "type": "integer"
            },
            "name": "alert_id",
            "required": false,
            "type": "array"
          },
          {
            "description": "Page number to fetch, defaults to 1",
            "in": "query",
            "name": "page_number",
            "required": false,
            "type": "integer"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "On success will return a list of alerts.",
            "schema": {
              "$ref": "#/definitions/alert_list"
            }
          }
        },
        "summary": "STAGE=UNKNOWN Retrieve alerts.",
        "tags": [
          "alerts"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/alerts/%7Bboard_type%7D',\n  qs: \n   { alert_id: 'SOME_ARRAY_VALUE',\n     page_number: 'SOME_INTEGER_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\");\n\nreq.query({\n  \"alert_id\": \"SOME_ARRAY_VALUE\",\n  \"page_number\": \"SOME_INTEGER_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/alerts/%7Bboard_type%7D');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'alert_id' => 'SOME_ARRAY_VALUE',\n  'page_number' => 'SOME_INTEGER_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/alerts/%7Bboard_type%7D');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'alert_id' => 'SOME_ARRAY_VALUE',\n  'page_number' => 'SOME_INTEGER_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\"\n\nquerystring = {\"alert_id\":\"SOME_ARRAY_VALUE\",\"page_number\":\"SOME_INTEGER_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D?alert_id=SOME_ARRAY_VALUE&page_number=SOME_INTEGER_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "patch": {
        "description": "Search objects are set at creation. You cannot modify them after the alert has been created.",
        "parameters": [
          {
            "description": "Valid types are \"loads\", and \"trucks\".",
            "enum": [
              "loads",
              "trucks"
            ],
            "in": "path",
            "name": "board_type",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/patch_alert_properties"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returned on response."
          }
        },
        "summary": "STAGE=UNK Update an alert.",
        "tags": [
          "alerts"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"alert_id\": 0,\n  \"end_hour\": 0,\n  \"expires_after\": \"<ADD EXAMPLE VALUE>\",\n  \"list_type\": \"complete-list\",\n  \"minute_frequency\": 0,\n  \"send_type\": \"email\",\n  \"start_hour\": 0,\n  \"time_zone\": 0\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/alerts/%7Bboard_type%7D\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ alert_id: 0,\n  end_hour: 0,\n  expires_after: '<ADD EXAMPLE VALUE>',\n  list_type: 'complete-list',\n  minute_frequency: 0,\n  send_type: 'email',\n  start_hour: 0,\n  time_zone: 0 }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://api.directfreight.com/v1/alerts/%7Bboard_type%7D',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { alert_id: 0,\n     end_hour: 0,\n     expires_after: '<ADD EXAMPLE VALUE>',\n     list_type: 'complete-list',\n     minute_frequency: 0,\n     send_type: 'email',\n     start_hour: 0,\n     time_zone: 0 },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"alert_id\": 0,\n  \"end_hour\": 0,\n  \"expires_after\": \"<ADD EXAMPLE VALUE>\",\n  \"list_type\": \"complete-list\",\n  \"minute_frequency\": 0,\n  \"send_type\": \"email\",\n  \"start_hour\": 0,\n  \"time_zone\": 0\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"alert_id\": @0,\n                              @\"end_hour\": @0,\n                              @\"expires_after\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"list_type\": @\"complete-list\",\n                              @\"minute_frequency\": @0,\n                              @\"send_type\": @\"email\",\n                              @\"start_hour\": @0,\n                              @\"time_zone\": @0 };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/alerts/%7Bboard_type%7D');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/alerts/%7Bboard_type%7D');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/alerts/%7Bboard_type%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\"\n\npayload = \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://api.directfreight.com/v1/alerts/%7Bboard_type%7D \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}' |  \\\n  http PATCH https://api.directfreight.com/v1/alerts/%7Bboard_type%7D \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"<ADD EXAMPLE VALUE>\",\"list_type\":\"complete-list\",\"minute_frequency\":0,\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/alerts/%7Bboard_type%7D"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"alert_id\": 0,\n  \"end_hour\": 0,\n  \"expires_after\": \"<ADD EXAMPLE VALUE>\",\n  \"list_type\": \"complete-list\",\n  \"minute_frequency\": 0,\n  \"send_type\": \"email\",\n  \"start_hour\": 0,\n  \"time_zone\": 0\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "description": "This method will update or create an alert. The POST action with the same search parameters but different alert parameters will update the existing alert. The one caveaut to this is send_type. You can have 2 alerts with the same search parameters but different send_types. Any parameter that is defined here and is also defined on the boards POST action, follows the same rules.",
        "parameters": [
          {
            "description": "Valid types are \"loads\", and \"trucks\".",
            "enum": [
              "loads",
              "trucks"
            ],
            "in": "path",
            "name": "board_type",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/alert"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Object created check the headers for a reference URL",
            "schema": {
              "$ref": "#/definitions/create_status_alert"
            }
          }
        },
        "summary": "STAGE=UNKNOWN Create an alert.",
        "tags": [
          "alerts"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2020-01-01T14:30:24.000Z\\\",\\\"item_count\\\":25,\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"search\\\":{\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"return_only\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"sort_parameter\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"tier\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2020-01-01T14:30:24.000Z\\\",\\\"item_count\\\":25,\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"search\\\":{\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"return_only\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"sort_parameter\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"tier\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2020-01-01T14:30:24.000Z\\\",\\\"item_count\\\":25,\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"search\\\":{\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"return_only\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"sort_parameter\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"tier\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2020-01-01T14:30:24.000Z\\\",\\\"item_count\\\":25,\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"search\\\":{\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"return_only\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"sort_parameter\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"tier\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2020-01-01T14:30:24.000Z\\\",\\\"item_count\\\":25,\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"search\\\":{\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"return_only\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"sort_parameter\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"tier\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2020-01-01T14:30:24.000Z\\\",\\\"item_count\\\":25,\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"search\\\":{\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"return_only\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"sort_parameter\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"tier\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"alert_id\": 0,\n  \"end_hour\": 0,\n  \"expires_after\": \"2020-01-01T14:30:24.000Z\",\n  \"item_count\": 25,\n  \"list_type\": \"complete-list\",\n  \"minute_frequency\": 0,\n  \"page_number\": 0,\n  \"return_count\": false,\n  \"search\": {\n    \"destination_city\": \"<ADD EXAMPLE VALUE>\",\n    \"destination_radius\": 0,\n    \"full_load\": false,\n    \"origin_city\": \"<ADD EXAMPLE VALUE>\",\n    \"origin_radius\": 0,\n    \"return_only\": \"<ADD EXAMPLE VALUE>\",\n    \"sort_parameter\": \"<ADD EXAMPLE VALUE>\",\n    \"tier\": \"<ADD EXAMPLE VALUE>\"\n  },\n  \"send_type\": \"email\",\n  \"start_hour\": 0,\n  \"time_zone\": 0\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/alerts/%7Bboard_type%7D\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ alert_id: 0,\n  end_hour: 0,\n  expires_after: '2020-01-01T14:30:24.000Z',\n  item_count: 25,\n  list_type: 'complete-list',\n  minute_frequency: 0,\n  page_number: 0,\n  return_count: false,\n  search: \n   { destination_city: '<ADD EXAMPLE VALUE>',\n     destination_radius: 0,\n     full_load: false,\n     origin_city: '<ADD EXAMPLE VALUE>',\n     origin_radius: 0,\n     return_only: '<ADD EXAMPLE VALUE>',\n     sort_parameter: '<ADD EXAMPLE VALUE>',\n     tier: '<ADD EXAMPLE VALUE>' },\n  send_type: 'email',\n  start_hour: 0,\n  time_zone: 0 }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/alerts/%7Bboard_type%7D',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { alert_id: 0,\n     end_hour: 0,\n     expires_after: '2020-01-01T14:30:24.000Z',\n     item_count: 25,\n     list_type: 'complete-list',\n     minute_frequency: 0,\n     page_number: 0,\n     return_count: false,\n     search: \n      { destination_city: '<ADD EXAMPLE VALUE>',\n        destination_radius: 0,\n        full_load: false,\n        origin_city: '<ADD EXAMPLE VALUE>',\n        origin_radius: 0,\n        return_only: '<ADD EXAMPLE VALUE>',\n        sort_parameter: '<ADD EXAMPLE VALUE>',\n        tier: '<ADD EXAMPLE VALUE>' },\n     send_type: 'email',\n     start_hour: 0,\n     time_zone: 0 },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"alert_id\": 0,\n  \"end_hour\": 0,\n  \"expires_after\": \"2020-01-01T14:30:24.000Z\",\n  \"item_count\": 25,\n  \"list_type\": \"complete-list\",\n  \"minute_frequency\": 0,\n  \"page_number\": 0,\n  \"return_count\": false,\n  \"search\": {\n    \"destination_city\": \"<ADD EXAMPLE VALUE>\",\n    \"destination_radius\": 0,\n    \"full_load\": false,\n    \"origin_city\": \"<ADD EXAMPLE VALUE>\",\n    \"origin_radius\": 0,\n    \"return_only\": \"<ADD EXAMPLE VALUE>\",\n    \"sort_parameter\": \"<ADD EXAMPLE VALUE>\",\n    \"tier\": \"<ADD EXAMPLE VALUE>\"\n  },\n  \"send_type\": \"email\",\n  \"start_hour\": 0,\n  \"time_zone\": 0\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"alert_id\": @0,\n                              @\"end_hour\": @0,\n                              @\"expires_after\": @\"2020-01-01T14:30:24.000Z\",\n                              @\"item_count\": @25,\n                              @\"list_type\": @\"complete-list\",\n                              @\"minute_frequency\": @0,\n                              @\"page_number\": @0,\n                              @\"return_count\": @NO,\n                              @\"search\": @{ @\"destination_city\": @\"<ADD EXAMPLE VALUE>\", @\"destination_radius\": @0, @\"full_load\": @NO, @\"origin_city\": @\"<ADD EXAMPLE VALUE>\", @\"origin_radius\": @0, @\"return_only\": @\"<ADD EXAMPLE VALUE>\", @\"sort_parameter\": @\"<ADD EXAMPLE VALUE>\", @\"tier\": @\"<ADD EXAMPLE VALUE>\" },\n                              @\"send_type\": @\"email\",\n                              @\"start_hour\": @0,\n                              @\"time_zone\": @0 };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2020-01-01T14:30:24.000Z\\\",\\\"item_count\\\":25,\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"search\\\":{\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"return_only\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"sort_parameter\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"tier\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2020-01-01T14:30:24.000Z\\\",\\\"item_count\\\":25,\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"search\\\":{\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"return_only\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"sort_parameter\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"tier\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/alerts/%7Bboard_type%7D');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/alerts/%7Bboard_type%7D');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2020-01-01T14:30:24.000Z\\\",\\\"item_count\\\":25,\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"search\\\":{\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"return_only\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"sort_parameter\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"tier\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/alerts/%7Bboard_type%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\"\n\npayload = \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2020-01-01T14:30:24.000Z\\\",\\\"item_count\\\":25,\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"search\\\":{\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"return_only\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"sort_parameter\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"tier\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2020-01-01T14:30:24.000Z\\\",\\\"item_count\\\":25,\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"search\\\":{\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"return_only\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"sort_parameter\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"tier\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/alerts/%7Bboard_type%7D \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}' |  \\\n  http POST https://api.directfreight.com/v1/alerts/%7Bboard_type%7D \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/alerts/%7Bboard_type%7D"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"alert_id\": 0,\n  \"end_hour\": 0,\n  \"expires_after\": \"2020-01-01T14:30:24.000Z\",\n  \"item_count\": 25,\n  \"list_type\": \"complete-list\",\n  \"minute_frequency\": 0,\n  \"page_number\": 0,\n  \"return_count\": false,\n  \"search\": [\n    \"destination_city\": \"<ADD EXAMPLE VALUE>\",\n    \"destination_radius\": 0,\n    \"full_load\": false,\n    \"origin_city\": \"<ADD EXAMPLE VALUE>\",\n    \"origin_radius\": 0,\n    \"return_only\": \"<ADD EXAMPLE VALUE>\",\n    \"sort_parameter\": \"<ADD EXAMPLE VALUE>\",\n    \"tier\": \"<ADD EXAMPLE VALUE>\"\n  ],\n  \"send_type\": \"email\",\n  \"start_hour\": 0,\n  \"time_zone\": 0\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "ALERTS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/alerts/%7Bboard_type%7D\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/alerts/%7Bboard_type%7D',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/alerts/%7Bboard_type%7D');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/alerts/%7Bboard_type%7D');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/alerts/%7Bboard_type%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/alerts/%7Bboard_type%7D \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/alerts/%7Bboard_type%7D \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/alerts/%7Bboard_type%7D"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/alerts/%7Bboard_type%7D\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/alerts/search/{board_type}": {
      "post": {
        "description": "This method will search a users alert. It accepts the exact same structure as the POST method for /alerts/. Any parameter that is defined here and is also defined on the boards POST action, follows the same rules.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/alert"
            }
          },
          {
            "in": "path",
            "name": "board_type",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Alert found, returns the alert_id that corresponds to the search.",
            "schema": {
              "$ref": "#/definitions/alert_search_response"
            }
          },
          "404": {
            "description": "Alert not found using specified parameters."
          }
        },
        "summary": "STAGE=UNKNOWN Create an alert.",
        "tags": [
          "alerts"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2020-01-01T14:30:24.000Z\\\",\\\"item_count\\\":25,\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"search\\\":{\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"return_only\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"sort_parameter\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"tier\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2020-01-01T14:30:24.000Z\\\",\\\"item_count\\\":25,\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"search\\\":{\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"return_only\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"sort_parameter\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"tier\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2020-01-01T14:30:24.000Z\\\",\\\"item_count\\\":25,\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"search\\\":{\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"return_only\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"sort_parameter\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"tier\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2020-01-01T14:30:24.000Z\\\",\\\"item_count\\\":25,\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"search\\\":{\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"return_only\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"sort_parameter\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"tier\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2020-01-01T14:30:24.000Z\\\",\\\"item_count\\\":25,\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"search\\\":{\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"return_only\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"sort_parameter\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"tier\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2020-01-01T14:30:24.000Z\\\",\\\"item_count\\\":25,\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"search\\\":{\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"return_only\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"sort_parameter\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"tier\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"alert_id\": 0,\n  \"end_hour\": 0,\n  \"expires_after\": \"2020-01-01T14:30:24.000Z\",\n  \"item_count\": 25,\n  \"list_type\": \"complete-list\",\n  \"minute_frequency\": 0,\n  \"page_number\": 0,\n  \"return_count\": false,\n  \"search\": {\n    \"destination_city\": \"<ADD EXAMPLE VALUE>\",\n    \"destination_radius\": 0,\n    \"full_load\": false,\n    \"origin_city\": \"<ADD EXAMPLE VALUE>\",\n    \"origin_radius\": 0,\n    \"return_only\": \"<ADD EXAMPLE VALUE>\",\n    \"sort_parameter\": \"<ADD EXAMPLE VALUE>\",\n    \"tier\": \"<ADD EXAMPLE VALUE>\"\n  },\n  \"send_type\": \"email\",\n  \"start_hour\": 0,\n  \"time_zone\": 0\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/alerts/search/%7Bboard_type%7D\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ alert_id: 0,\n  end_hour: 0,\n  expires_after: '2020-01-01T14:30:24.000Z',\n  item_count: 25,\n  list_type: 'complete-list',\n  minute_frequency: 0,\n  page_number: 0,\n  return_count: false,\n  search: \n   { destination_city: '<ADD EXAMPLE VALUE>',\n     destination_radius: 0,\n     full_load: false,\n     origin_city: '<ADD EXAMPLE VALUE>',\n     origin_radius: 0,\n     return_only: '<ADD EXAMPLE VALUE>',\n     sort_parameter: '<ADD EXAMPLE VALUE>',\n     tier: '<ADD EXAMPLE VALUE>' },\n  send_type: 'email',\n  start_hour: 0,\n  time_zone: 0 }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { alert_id: 0,\n     end_hour: 0,\n     expires_after: '2020-01-01T14:30:24.000Z',\n     item_count: 25,\n     list_type: 'complete-list',\n     minute_frequency: 0,\n     page_number: 0,\n     return_count: false,\n     search: \n      { destination_city: '<ADD EXAMPLE VALUE>',\n        destination_radius: 0,\n        full_load: false,\n        origin_city: '<ADD EXAMPLE VALUE>',\n        origin_radius: 0,\n        return_only: '<ADD EXAMPLE VALUE>',\n        sort_parameter: '<ADD EXAMPLE VALUE>',\n        tier: '<ADD EXAMPLE VALUE>' },\n     send_type: 'email',\n     start_hour: 0,\n     time_zone: 0 },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"alert_id\": 0,\n  \"end_hour\": 0,\n  \"expires_after\": \"2020-01-01T14:30:24.000Z\",\n  \"item_count\": 25,\n  \"list_type\": \"complete-list\",\n  \"minute_frequency\": 0,\n  \"page_number\": 0,\n  \"return_count\": false,\n  \"search\": {\n    \"destination_city\": \"<ADD EXAMPLE VALUE>\",\n    \"destination_radius\": 0,\n    \"full_load\": false,\n    \"origin_city\": \"<ADD EXAMPLE VALUE>\",\n    \"origin_radius\": 0,\n    \"return_only\": \"<ADD EXAMPLE VALUE>\",\n    \"sort_parameter\": \"<ADD EXAMPLE VALUE>\",\n    \"tier\": \"<ADD EXAMPLE VALUE>\"\n  },\n  \"send_type\": \"email\",\n  \"start_hour\": 0,\n  \"time_zone\": 0\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"alert_id\": @0,\n                              @\"end_hour\": @0,\n                              @\"expires_after\": @\"2020-01-01T14:30:24.000Z\",\n                              @\"item_count\": @25,\n                              @\"list_type\": @\"complete-list\",\n                              @\"minute_frequency\": @0,\n                              @\"page_number\": @0,\n                              @\"return_count\": @NO,\n                              @\"search\": @{ @\"destination_city\": @\"<ADD EXAMPLE VALUE>\", @\"destination_radius\": @0, @\"full_load\": @NO, @\"origin_city\": @\"<ADD EXAMPLE VALUE>\", @\"origin_radius\": @0, @\"return_only\": @\"<ADD EXAMPLE VALUE>\", @\"sort_parameter\": @\"<ADD EXAMPLE VALUE>\", @\"tier\": @\"<ADD EXAMPLE VALUE>\" },\n                              @\"send_type\": @\"email\",\n                              @\"start_hour\": @0,\n                              @\"time_zone\": @0 };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2020-01-01T14:30:24.000Z\\\",\\\"item_count\\\":25,\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"search\\\":{\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"return_only\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"sort_parameter\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"tier\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2020-01-01T14:30:24.000Z\\\",\\\"item_count\\\":25,\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"search\\\":{\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"return_only\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"sort_parameter\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"tier\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2020-01-01T14:30:24.000Z\\\",\\\"item_count\\\":25,\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"search\\\":{\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"return_only\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"sort_parameter\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"tier\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/alerts/search/%7Bboard_type%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\"\n\npayload = \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2020-01-01T14:30:24.000Z\\\",\\\"item_count\\\":25,\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"search\\\":{\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"return_only\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"sort_parameter\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"tier\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"alert_id\\\":0,\\\"end_hour\\\":0,\\\"expires_after\\\":\\\"2020-01-01T14:30:24.000Z\\\",\\\"item_count\\\":25,\\\"list_type\\\":\\\"complete-list\\\",\\\"minute_frequency\\\":0,\\\"page_number\\\":0,\\\"return_count\\\":false,\\\"search\\\":{\\\"destination_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_radius\\\":0,\\\"full_load\\\":false,\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_radius\\\":0,\\\"return_only\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"sort_parameter\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"tier\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"send_type\\\":\\\"email\\\",\\\"start_hour\\\":0,\\\"time_zone\\\":0}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}' |  \\\n  http POST https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"alert_id\":0,\"end_hour\":0,\"expires_after\":\"2020-01-01T14:30:24.000Z\",\"item_count\":25,\"list_type\":\"complete-list\",\"minute_frequency\":0,\"page_number\":0,\"return_count\":false,\"search\":{\"destination_city\":\"<ADD EXAMPLE VALUE>\",\"destination_radius\":0,\"full_load\":false,\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_radius\":0,\"return_only\":\"<ADD EXAMPLE VALUE>\",\"sort_parameter\":\"<ADD EXAMPLE VALUE>\",\"tier\":\"<ADD EXAMPLE VALUE>\"},\"send_type\":\"email\",\"start_hour\":0,\"time_zone\":0}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"alert_id\": 0,\n  \"end_hour\": 0,\n  \"expires_after\": \"2020-01-01T14:30:24.000Z\",\n  \"item_count\": 25,\n  \"list_type\": \"complete-list\",\n  \"minute_frequency\": 0,\n  \"page_number\": 0,\n  \"return_count\": false,\n  \"search\": [\n    \"destination_city\": \"<ADD EXAMPLE VALUE>\",\n    \"destination_radius\": 0,\n    \"full_load\": false,\n    \"origin_city\": \"<ADD EXAMPLE VALUE>\",\n    \"origin_radius\": 0,\n    \"return_only\": \"<ADD EXAMPLE VALUE>\",\n    \"sort_parameter\": \"<ADD EXAMPLE VALUE>\",\n    \"tier\": \"<ADD EXAMPLE VALUE>\"\n  ],\n  \"send_type\": \"email\",\n  \"start_hour\": 0,\n  \"time_zone\": 0\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "ALERTS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/alerts/search/%7Bboard_type%7D\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/alerts/search/%7Bboard_type%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/alerts/search/%7Bboard_type%7D\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/boards/{board_type}": {
      "get": {
        "description": "Retrieves a single load",
        "parameters": [
          {
            "description": "Defines the type of board requested.",
            "enum": [
              "loads",
              "trucks"
            ],
            "in": "path",
            "name": "board_type",
            "required": true,
            "type": "string",
            "x-example": "loads"
          },
          {
            "description": "the entry_id associated with the data you want to get.",
            "in": "query",
            "name": "entry_id",
            "required": true,
            "type": "string",
            "x-example": "0123456789012345678901234567890123"
          },
          {
            "description": "The page that is requesting the information.  This is used to determine when to retrieve real time information from the shipper or broker.  Example:  requesting_page=\"book-now\" will return real time information for certain partners.  Stage=Private",
            "in": "query",
            "name": "requesting_page",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/board_response_item"
            }
          }
        },
        "summary": "Retrieve single load",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D',\n  qs: \n   { entry_id: 'SOME_STRING_VALUE',\n     requesting_page: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\");\n\nreq.query({\n  \"entry_id\": \"SOME_STRING_VALUE\",\n  \"requesting_page\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/%7Bboard_type%7D');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'entry_id' => 'SOME_STRING_VALUE',\n  'requesting_page' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/%7Bboard_type%7D');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'entry_id' => 'SOME_STRING_VALUE',\n  'requesting_page' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\"\n\nquerystring = {\"entry_id\":\"SOME_STRING_VALUE\",\"requesting_page\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D?entry_id=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "description": "This is the primary search method for loads and trucks. Please specifify at least an origin or destination.  The origin or destination may be state only.",
        "parameters": [
          {
            "description": "Defines the type of board requested.",
            "enum": [
              "loads",
              "trucks"
            ],
            "in": "path",
            "name": "board_type",
            "required": true,
            "type": "string",
            "x-example": "loads"
          },
          {
            "default": "01234567890abc",
            "in": "header",
            "name": "end-user-token",
            "required": false,
            "type": "string",
            "x-example": "01234567890abc"
          },
          {
            "default": 0,
            "description": "If this optional header is sent and set to a positive value, the API will not update the users last_date, this option is used internally when sending email alerts. STAGE=Private",
            "in": "header",
            "name": "x-dont-update-user-last-date",
            "required": false,
            "type": "number",
            "x-example": 1
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/board_request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list matching your search.",
            "schema": {
              "$ref": "#/definitions/board_response"
            }
          },
          "422": {
            "$ref": "#/responses/error_422"
          }
        },
        "summary": "Retrieve a board",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"x-dont-update-user-last-date: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"end-user-token: 01234567890abc\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"alert_id\\\":1155,\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"chicago\\\",\\\"destination_radius\\\":100,\\\"destination_state\\\":[\\\"IL\\\",\\\"HI\\\",\\\"NY\\\",\\\"KS\\\",\\\"TX\\\",\\\"MO\\\",\\\"AL\\\"],\\\"full_load\\\":true,\\\"google_recaptcha_score\\\":0,\\\"item_count\\\":25,\\\"max_age\\\":300,\\\"max_length\\\":300,\\\"max_pay_rate\\\":300,\\\"max_weight\\\":40000,\\\"md5\\\":\\\"850FBE52A5345119FD9C79FDE4E27308\\\",\\\"min_age\\\":50,\\\"min_length\\\":15,\\\"min_pay_rate\\\":50,\\\"min_weight\\\":1000,\\\"origin_city\\\":\\\"Kansas City\\\",\\\"origin_radius\\\":150,\\\"origin_state\\\":[\\\"MO\\\",\\\"IL\\\",\\\"TX\\\",\\\"CA\\\"],\\\"page_number\\\":0,\\\"partner\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"return_count\\\":false,\\\"return_only\\\":\\\"unviewed\\\",\\\"return_web_url\\\":false,\\\"sort_direction\\\":\\\"asc\\\",\\\"sort_parameter\\\":\\\"age\\\",\\\"tier\\\":\\\"all\\\",\\\"trailer_type\\\":[\\\"F\\\",\\\"F+T\\\",\\\"F+S\\\",\\\"V\\\"]}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"x-dont-update-user-last-date\", \"NO DEFAULT\");\nrequest.AddHeader(\"end-user-token\", \"01234567890abc\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"alert_id\\\":1155,\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"chicago\\\",\\\"destination_radius\\\":100,\\\"destination_state\\\":[\\\"IL\\\",\\\"HI\\\",\\\"NY\\\",\\\"KS\\\",\\\"TX\\\",\\\"MO\\\",\\\"AL\\\"],\\\"full_load\\\":true,\\\"google_recaptcha_score\\\":0,\\\"item_count\\\":25,\\\"max_age\\\":300,\\\"max_length\\\":300,\\\"max_pay_rate\\\":300,\\\"max_weight\\\":40000,\\\"md5\\\":\\\"850FBE52A5345119FD9C79FDE4E27308\\\",\\\"min_age\\\":50,\\\"min_length\\\":15,\\\"min_pay_rate\\\":50,\\\"min_weight\\\":1000,\\\"origin_city\\\":\\\"Kansas City\\\",\\\"origin_radius\\\":150,\\\"origin_state\\\":[\\\"MO\\\",\\\"IL\\\",\\\"TX\\\",\\\"CA\\\"],\\\"page_number\\\":0,\\\"partner\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"return_count\\\":false,\\\"return_only\\\":\\\"unviewed\\\",\\\"return_web_url\\\":false,\\\"sort_direction\\\":\\\"asc\\\",\\\"sort_parameter\\\":\\\"age\\\",\\\"tier\\\":\\\"all\\\",\\\"trailer_type\\\":[\\\"F\\\",\\\"F+T\\\",\\\"F+S\\\",\\\"V\\\"]}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"alert_id\\\":1155,\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"chicago\\\",\\\"destination_radius\\\":100,\\\"destination_state\\\":[\\\"IL\\\",\\\"HI\\\",\\\"NY\\\",\\\"KS\\\",\\\"TX\\\",\\\"MO\\\",\\\"AL\\\"],\\\"full_load\\\":true,\\\"google_recaptcha_score\\\":0,\\\"item_count\\\":25,\\\"max_age\\\":300,\\\"max_length\\\":300,\\\"max_pay_rate\\\":300,\\\"max_weight\\\":40000,\\\"md5\\\":\\\"850FBE52A5345119FD9C79FDE4E27308\\\",\\\"min_age\\\":50,\\\"min_length\\\":15,\\\"min_pay_rate\\\":50,\\\"min_weight\\\":1000,\\\"origin_city\\\":\\\"Kansas City\\\",\\\"origin_radius\\\":150,\\\"origin_state\\\":[\\\"MO\\\",\\\"IL\\\",\\\"TX\\\",\\\"CA\\\"],\\\"page_number\\\":0,\\\"partner\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"return_count\\\":false,\\\"return_only\\\":\\\"unviewed\\\",\\\"return_web_url\\\":false,\\\"sort_direction\\\":\\\"asc\\\",\\\"sort_parameter\\\":\\\"age\\\",\\\"tier\\\":\\\"all\\\",\\\"trailer_type\\\":[\\\"F\\\",\\\"F+T\\\",\\\"F+S\\\",\\\"V\\\"]}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"01234567890abc\")\n\treq.Header.Add(\"x-dont-update-user-last-date\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"alert_id\\\":1155,\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"chicago\\\",\\\"destination_radius\\\":100,\\\"destination_state\\\":[\\\"IL\\\",\\\"HI\\\",\\\"NY\\\",\\\"KS\\\",\\\"TX\\\",\\\"MO\\\",\\\"AL\\\"],\\\"full_load\\\":true,\\\"google_recaptcha_score\\\":0,\\\"item_count\\\":25,\\\"max_age\\\":300,\\\"max_length\\\":300,\\\"max_pay_rate\\\":300,\\\"max_weight\\\":40000,\\\"md5\\\":\\\"850FBE52A5345119FD9C79FDE4E27308\\\",\\\"min_age\\\":50,\\\"min_length\\\":15,\\\"min_pay_rate\\\":50,\\\"min_weight\\\":1000,\\\"origin_city\\\":\\\"Kansas City\\\",\\\"origin_radius\\\":150,\\\"origin_state\\\":[\\\"MO\\\",\\\"IL\\\",\\\"TX\\\",\\\"CA\\\"],\\\"page_number\\\":0,\\\"partner\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"return_count\\\":false,\\\"return_only\\\":\\\"unviewed\\\",\\\"return_web_url\\\":false,\\\"sort_direction\\\":\\\"asc\\\",\\\"sort_parameter\\\":\\\"age\\\",\\\"tier\\\":\\\"all\\\",\\\"trailer_type\\\":[\\\"F\\\",\\\"F+T\\\",\\\"F+S\\\",\\\"V\\\"]}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"01234567890abc\")\n  .addHeader(\"x-dont-update-user-last-date\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"01234567890abc\")\n  .header(\"x-dont-update-user-last-date\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"alert_id\\\":1155,\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"chicago\\\",\\\"destination_radius\\\":100,\\\"destination_state\\\":[\\\"IL\\\",\\\"HI\\\",\\\"NY\\\",\\\"KS\\\",\\\"TX\\\",\\\"MO\\\",\\\"AL\\\"],\\\"full_load\\\":true,\\\"google_recaptcha_score\\\":0,\\\"item_count\\\":25,\\\"max_age\\\":300,\\\"max_length\\\":300,\\\"max_pay_rate\\\":300,\\\"max_weight\\\":40000,\\\"md5\\\":\\\"850FBE52A5345119FD9C79FDE4E27308\\\",\\\"min_age\\\":50,\\\"min_length\\\":15,\\\"min_pay_rate\\\":50,\\\"min_weight\\\":1000,\\\"origin_city\\\":\\\"Kansas City\\\",\\\"origin_radius\\\":150,\\\"origin_state\\\":[\\\"MO\\\",\\\"IL\\\",\\\"TX\\\",\\\"CA\\\"],\\\"page_number\\\":0,\\\"partner\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"return_count\\\":false,\\\"return_only\\\":\\\"unviewed\\\",\\\"return_web_url\\\":false,\\\"sort_direction\\\":\\\"asc\\\",\\\"sort_parameter\\\":\\\"age\\\",\\\"tier\\\":\\\"all\\\",\\\"trailer_type\\\":[\\\"F\\\",\\\"F+T\\\",\\\"F+S\\\",\\\"V\\\"]}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"01234567890abc\",\n    \"x-dont-update-user-last-date\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"alert_id\\\":1155,\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"chicago\\\",\\\"destination_radius\\\":100,\\\"destination_state\\\":[\\\"IL\\\",\\\"HI\\\",\\\"NY\\\",\\\"KS\\\",\\\"TX\\\",\\\"MO\\\",\\\"AL\\\"],\\\"full_load\\\":true,\\\"google_recaptcha_score\\\":0,\\\"item_count\\\":25,\\\"max_age\\\":300,\\\"max_length\\\":300,\\\"max_pay_rate\\\":300,\\\"max_weight\\\":40000,\\\"md5\\\":\\\"850FBE52A5345119FD9C79FDE4E27308\\\",\\\"min_age\\\":50,\\\"min_length\\\":15,\\\"min_pay_rate\\\":50,\\\"min_weight\\\":1000,\\\"origin_city\\\":\\\"Kansas City\\\",\\\"origin_radius\\\":150,\\\"origin_state\\\":[\\\"MO\\\",\\\"IL\\\",\\\"TX\\\",\\\"CA\\\"],\\\"page_number\\\":0,\\\"partner\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"return_count\\\":false,\\\"return_only\\\":\\\"unviewed\\\",\\\"return_web_url\\\":false,\\\"sort_direction\\\":\\\"asc\\\",\\\"sort_parameter\\\":\\\"age\\\",\\\"tier\\\":\\\"all\\\",\\\"trailer_type\\\":[\\\"F\\\",\\\"F+T\\\",\\\"F+S\\\",\\\"V\\\"]}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"alert_id\": 1155,\n  \"company_name\": \"<ADD EXAMPLE VALUE>\",\n  \"destination_city\": \"chicago\",\n  \"destination_radius\": 100,\n  \"destination_state\": [\n    \"IL\",\n    \"HI\",\n    \"NY\",\n    \"KS\",\n    \"TX\",\n    \"MO\",\n    \"AL\"\n  ],\n  \"full_load\": true,\n  \"google_recaptcha_score\": 0,\n  \"item_count\": 25,\n  \"max_age\": 300,\n  \"max_length\": 300,\n  \"max_pay_rate\": 300,\n  \"max_weight\": 40000,\n  \"md5\": \"850FBE52A5345119FD9C79FDE4E27308\",\n  \"min_age\": 50,\n  \"min_length\": 15,\n  \"min_pay_rate\": 50,\n  \"min_weight\": 1000,\n  \"origin_city\": \"Kansas City\",\n  \"origin_radius\": 150,\n  \"origin_state\": [\n    \"MO\",\n    \"IL\",\n    \"TX\",\n    \"CA\"\n  ],\n  \"page_number\": 0,\n  \"partner\": \"<ADD EXAMPLE VALUE>\",\n  \"return_count\": false,\n  \"return_only\": \"unviewed\",\n  \"return_web_url\": false,\n  \"sort_direction\": \"asc\",\n  \"sort_parameter\": \"age\",\n  \"tier\": \"all\",\n  \"trailer_type\": [\n    \"F\",\n    \"F+T\",\n    \"F+S\",\n    \"V\"\n  ]\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"01234567890abc\");\nxhr.setRequestHeader(\"x-dont-update-user-last-date\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/%7Bboard_type%7D\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"01234567890abc\",\n    \"x-dont-update-user-last-date\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ alert_id: 1155,\n  company_name: '<ADD EXAMPLE VALUE>',\n  destination_city: 'chicago',\n  destination_radius: 100,\n  destination_state: [ 'IL', 'HI', 'NY', 'KS', 'TX', 'MO', 'AL' ],\n  full_load: true,\n  google_recaptcha_score: 0,\n  item_count: 25,\n  max_age: 300,\n  max_length: 300,\n  max_pay_rate: 300,\n  max_weight: 40000,\n  md5: '850FBE52A5345119FD9C79FDE4E27308',\n  min_age: 50,\n  min_length: 15,\n  min_pay_rate: 50,\n  min_weight: 1000,\n  origin_city: 'Kansas City',\n  origin_radius: 150,\n  origin_state: [ 'MO', 'IL', 'TX', 'CA' ],\n  page_number: 0,\n  partner: '<ADD EXAMPLE VALUE>',\n  return_count: false,\n  return_only: 'unviewed',\n  return_web_url: false,\n  sort_direction: 'asc',\n  sort_parameter: 'age',\n  tier: 'all',\n  trailer_type: [ 'F', 'F+T', 'F+S', 'V' ] }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'x-dont-update-user-last-date': 'NO DEFAULT',\n     'end-user-token': '01234567890abc',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { alert_id: 1155,\n     company_name: '<ADD EXAMPLE VALUE>',\n     destination_city: 'chicago',\n     destination_radius: 100,\n     destination_state: [ 'IL', 'HI', 'NY', 'KS', 'TX', 'MO', 'AL' ],\n     full_load: true,\n     google_recaptcha_score: 0,\n     item_count: 25,\n     max_age: 300,\n     max_length: 300,\n     max_pay_rate: 300,\n     max_weight: 40000,\n     md5: '850FBE52A5345119FD9C79FDE4E27308',\n     min_age: 50,\n     min_length: 15,\n     min_pay_rate: 50,\n     min_weight: 1000,\n     origin_city: 'Kansas City',\n     origin_radius: 150,\n     origin_state: [ 'MO', 'IL', 'TX', 'CA' ],\n     page_number: 0,\n     partner: '<ADD EXAMPLE VALUE>',\n     return_count: false,\n     return_only: 'unviewed',\n     return_web_url: false,\n     sort_direction: 'asc',\n     sort_parameter: 'age',\n     tier: 'all',\n     trailer_type: [ 'F', 'F+T', 'F+S', 'V' ] },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"x-dont-update-user-last-date\": \"NO DEFAULT\",\n  \"end-user-token\": \"01234567890abc\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"alert_id\": 1155,\n  \"company_name\": \"<ADD EXAMPLE VALUE>\",\n  \"destination_city\": \"chicago\",\n  \"destination_radius\": 100,\n  \"destination_state\": [\n    \"IL\",\n    \"HI\",\n    \"NY\",\n    \"KS\",\n    \"TX\",\n    \"MO\",\n    \"AL\"\n  ],\n  \"full_load\": true,\n  \"google_recaptcha_score\": 0,\n  \"item_count\": 25,\n  \"max_age\": 300,\n  \"max_length\": 300,\n  \"max_pay_rate\": 300,\n  \"max_weight\": 40000,\n  \"md5\": \"850FBE52A5345119FD9C79FDE4E27308\",\n  \"min_age\": 50,\n  \"min_length\": 15,\n  \"min_pay_rate\": 50,\n  \"min_weight\": 1000,\n  \"origin_city\": \"Kansas City\",\n  \"origin_radius\": 150,\n  \"origin_state\": [\n    \"MO\",\n    \"IL\",\n    \"TX\",\n    \"CA\"\n  ],\n  \"page_number\": 0,\n  \"partner\": \"<ADD EXAMPLE VALUE>\",\n  \"return_count\": false,\n  \"return_only\": \"unviewed\",\n  \"return_web_url\": false,\n  \"sort_direction\": \"asc\",\n  \"sort_parameter\": \"age\",\n  \"tier\": \"all\",\n  \"trailer_type\": [\n    \"F\",\n    \"F+T\",\n    \"F+S\",\n    \"V\"\n  ]\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"01234567890abc\",\n                           @\"x-dont-update-user-last-date\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"alert_id\": @1155,\n                              @\"company_name\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"destination_city\": @\"chicago\",\n                              @\"destination_radius\": @100,\n                              @\"destination_state\": @[ @\"IL\", @\"HI\", @\"NY\", @\"KS\", @\"TX\", @\"MO\", @\"AL\" ],\n                              @\"full_load\": @YES,\n                              @\"google_recaptcha_score\": @0,\n                              @\"item_count\": @25,\n                              @\"max_age\": @300,\n                              @\"max_length\": @300,\n                              @\"max_pay_rate\": @300,\n                              @\"max_weight\": @40000,\n                              @\"md5\": @\"850FBE52A5345119FD9C79FDE4E27308\",\n                              @\"min_age\": @50,\n                              @\"min_length\": @15,\n                              @\"min_pay_rate\": @50,\n                              @\"min_weight\": @1000,\n                              @\"origin_city\": @\"Kansas City\",\n                              @\"origin_radius\": @150,\n                              @\"origin_state\": @[ @\"MO\", @\"IL\", @\"TX\", @\"CA\" ],\n                              @\"page_number\": @0,\n                              @\"partner\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"return_count\": @NO,\n                              @\"return_only\": @\"unviewed\",\n                              @\"return_web_url\": @NO,\n                              @\"sort_direction\": @\"asc\",\n                              @\"sort_parameter\": @\"age\",\n                              @\"tier\": @\"all\",\n                              @\"trailer_type\": @[ @\"F\", @\"F+T\", @\"F+S\", @\"V\" ] };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"01234567890abc\");\n  (\"x-dont-update-user-last-date\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"alert_id\\\":1155,\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"chicago\\\",\\\"destination_radius\\\":100,\\\"destination_state\\\":[\\\"IL\\\",\\\"HI\\\",\\\"NY\\\",\\\"KS\\\",\\\"TX\\\",\\\"MO\\\",\\\"AL\\\"],\\\"full_load\\\":true,\\\"google_recaptcha_score\\\":0,\\\"item_count\\\":25,\\\"max_age\\\":300,\\\"max_length\\\":300,\\\"max_pay_rate\\\":300,\\\"max_weight\\\":40000,\\\"md5\\\":\\\"850FBE52A5345119FD9C79FDE4E27308\\\",\\\"min_age\\\":50,\\\"min_length\\\":15,\\\"min_pay_rate\\\":50,\\\"min_weight\\\":1000,\\\"origin_city\\\":\\\"Kansas City\\\",\\\"origin_radius\\\":150,\\\"origin_state\\\":[\\\"MO\\\",\\\"IL\\\",\\\"TX\\\",\\\"CA\\\"],\\\"page_number\\\":0,\\\"partner\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"return_count\\\":false,\\\"return_only\\\":\\\"unviewed\\\",\\\"return_web_url\\\":false,\\\"sort_direction\\\":\\\"asc\\\",\\\"sort_parameter\\\":\\\"age\\\",\\\"tier\\\":\\\"all\\\",\\\"trailer_type\\\":[\\\"F\\\",\\\"F+T\\\",\\\"F+S\\\",\\\"V\\\"]}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"01234567890abc\" );\n$request->header( \"x-dont-update-user-last-date\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"alert_id\":1155,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"google_recaptcha_score\":0,\"item_count\":25,\"max_age\":300,\"max_length\":300,\"max_pay_rate\":300,\"max_weight\":40000,\"md5\":\"850FBE52A5345119FD9C79FDE4E27308\",\"min_age\":50,\"min_length\":15,\"min_pay_rate\":50,\"min_weight\":1000,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"partner\":\"<ADD EXAMPLE VALUE>\",\"return_count\":false,\"return_only\":\"unviewed\",\"return_web_url\":false,\"sort_direction\":\"asc\",\"sort_parameter\":\"age\",\"tier\":\"all\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"alert_id\\\":1155,\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"chicago\\\",\\\"destination_radius\\\":100,\\\"destination_state\\\":[\\\"IL\\\",\\\"HI\\\",\\\"NY\\\",\\\"KS\\\",\\\"TX\\\",\\\"MO\\\",\\\"AL\\\"],\\\"full_load\\\":true,\\\"google_recaptcha_score\\\":0,\\\"item_count\\\":25,\\\"max_age\\\":300,\\\"max_length\\\":300,\\\"max_pay_rate\\\":300,\\\"max_weight\\\":40000,\\\"md5\\\":\\\"850FBE52A5345119FD9C79FDE4E27308\\\",\\\"min_age\\\":50,\\\"min_length\\\":15,\\\"min_pay_rate\\\":50,\\\"min_weight\\\":1000,\\\"origin_city\\\":\\\"Kansas City\\\",\\\"origin_radius\\\":150,\\\"origin_state\\\":[\\\"MO\\\",\\\"IL\\\",\\\"TX\\\",\\\"CA\\\"],\\\"page_number\\\":0,\\\"partner\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"return_count\\\":false,\\\"return_only\\\":\\\"unviewed\\\",\\\"return_web_url\\\":false,\\\"sort_direction\\\":\\\"asc\\\",\\\"sort_parameter\\\":\\\"age\\\",\\\"tier\\\":\\\"all\\\",\\\"trailer_type\\\":[\\\"F\\\",\\\"F+T\\\",\\\"F+S\\\",\\\"V\\\"]}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: 01234567890abc\",\n    \"x-dont-update-user-last-date: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/%7Bboard_type%7D');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'x-dont-update-user-last-date' => 'NO DEFAULT',\n  'end-user-token' => '01234567890abc',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"alert_id\":1155,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"google_recaptcha_score\":0,\"item_count\":25,\"max_age\":300,\"max_length\":300,\"max_pay_rate\":300,\"max_weight\":40000,\"md5\":\"850FBE52A5345119FD9C79FDE4E27308\",\"min_age\":50,\"min_length\":15,\"min_pay_rate\":50,\"min_weight\":1000,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"partner\":\"<ADD EXAMPLE VALUE>\",\"return_count\":false,\"return_only\":\"unviewed\",\"return_web_url\":false,\"sort_direction\":\"asc\",\"sort_parameter\":\"age\",\"tier\":\"all\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"alert_id\":1155,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"google_recaptcha_score\":0,\"item_count\":25,\"max_age\":300,\"max_length\":300,\"max_pay_rate\":300,\"max_weight\":40000,\"md5\":\"850FBE52A5345119FD9C79FDE4E27308\",\"min_age\":50,\"min_length\":15,\"min_pay_rate\":50,\"min_weight\":1000,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"partner\":\"<ADD EXAMPLE VALUE>\",\"return_count\":false,\"return_only\":\"unviewed\",\"return_web_url\":false,\"sort_direction\":\"asc\",\"sort_parameter\":\"age\",\"tier\":\"all\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/%7Bboard_type%7D');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'x-dont-update-user-last-date' => 'NO DEFAULT',\n  'end-user-token' => '01234567890abc',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"alert_id\\\":1155,\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"chicago\\\",\\\"destination_radius\\\":100,\\\"destination_state\\\":[\\\"IL\\\",\\\"HI\\\",\\\"NY\\\",\\\"KS\\\",\\\"TX\\\",\\\"MO\\\",\\\"AL\\\"],\\\"full_load\\\":true,\\\"google_recaptcha_score\\\":0,\\\"item_count\\\":25,\\\"max_age\\\":300,\\\"max_length\\\":300,\\\"max_pay_rate\\\":300,\\\"max_weight\\\":40000,\\\"md5\\\":\\\"850FBE52A5345119FD9C79FDE4E27308\\\",\\\"min_age\\\":50,\\\"min_length\\\":15,\\\"min_pay_rate\\\":50,\\\"min_weight\\\":1000,\\\"origin_city\\\":\\\"Kansas City\\\",\\\"origin_radius\\\":150,\\\"origin_state\\\":[\\\"MO\\\",\\\"IL\\\",\\\"TX\\\",\\\"CA\\\"],\\\"page_number\\\":0,\\\"partner\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"return_count\\\":false,\\\"return_only\\\":\\\"unviewed\\\",\\\"return_web_url\\\":false,\\\"sort_direction\\\":\\\"asc\\\",\\\"sort_parameter\\\":\\\"age\\\",\\\"tier\\\":\\\"all\\\",\\\"trailer_type\\\":[\\\"F\\\",\\\"F+T\\\",\\\"F+S\\\",\\\"V\\\"]}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"01234567890abc\",\n    'x-dont-update-user-last-date': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/boards/%7Bboard_type%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\"\n\npayload = \"{\\\"alert_id\\\":1155,\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"chicago\\\",\\\"destination_radius\\\":100,\\\"destination_state\\\":[\\\"IL\\\",\\\"HI\\\",\\\"NY\\\",\\\"KS\\\",\\\"TX\\\",\\\"MO\\\",\\\"AL\\\"],\\\"full_load\\\":true,\\\"google_recaptcha_score\\\":0,\\\"item_count\\\":25,\\\"max_age\\\":300,\\\"max_length\\\":300,\\\"max_pay_rate\\\":300,\\\"max_weight\\\":40000,\\\"md5\\\":\\\"850FBE52A5345119FD9C79FDE4E27308\\\",\\\"min_age\\\":50,\\\"min_length\\\":15,\\\"min_pay_rate\\\":50,\\\"min_weight\\\":1000,\\\"origin_city\\\":\\\"Kansas City\\\",\\\"origin_radius\\\":150,\\\"origin_state\\\":[\\\"MO\\\",\\\"IL\\\",\\\"TX\\\",\\\"CA\\\"],\\\"page_number\\\":0,\\\"partner\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"return_count\\\":false,\\\"return_only\\\":\\\"unviewed\\\",\\\"return_web_url\\\":false,\\\"sort_direction\\\":\\\"asc\\\",\\\"sort_parameter\\\":\\\"age\\\",\\\"tier\\\":\\\"all\\\",\\\"trailer_type\\\":[\\\"F\\\",\\\"F+T\\\",\\\"F+S\\\",\\\"V\\\"]}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"01234567890abc\",\n    'x-dont-update-user-last-date': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = '01234567890abc'\nrequest[\"x-dont-update-user-last-date\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"alert_id\\\":1155,\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_city\\\":\\\"chicago\\\",\\\"destination_radius\\\":100,\\\"destination_state\\\":[\\\"IL\\\",\\\"HI\\\",\\\"NY\\\",\\\"KS\\\",\\\"TX\\\",\\\"MO\\\",\\\"AL\\\"],\\\"full_load\\\":true,\\\"google_recaptcha_score\\\":0,\\\"item_count\\\":25,\\\"max_age\\\":300,\\\"max_length\\\":300,\\\"max_pay_rate\\\":300,\\\"max_weight\\\":40000,\\\"md5\\\":\\\"850FBE52A5345119FD9C79FDE4E27308\\\",\\\"min_age\\\":50,\\\"min_length\\\":15,\\\"min_pay_rate\\\":50,\\\"min_weight\\\":1000,\\\"origin_city\\\":\\\"Kansas City\\\",\\\"origin_radius\\\":150,\\\"origin_state\\\":[\\\"MO\\\",\\\"IL\\\",\\\"TX\\\",\\\"CA\\\"],\\\"page_number\\\":0,\\\"partner\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"return_count\\\":false,\\\"return_only\\\":\\\"unviewed\\\",\\\"return_web_url\\\":false,\\\"sort_direction\\\":\\\"asc\\\",\\\"sort_parameter\\\":\\\"age\\\",\\\"tier\\\":\\\"all\\\",\\\"trailer_type\\\":[\\\"F\\\",\\\"F+T\\\",\\\"F+S\\\",\\\"V\\\"]}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/boards/%7Bboard_type%7D \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: 01234567890abc' \\\n  --header 'x-dont-update-user-last-date: NO DEFAULT' \\\n  --data '{\"alert_id\":1155,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"google_recaptcha_score\":0,\"item_count\":25,\"max_age\":300,\"max_length\":300,\"max_pay_rate\":300,\"max_weight\":40000,\"md5\":\"850FBE52A5345119FD9C79FDE4E27308\",\"min_age\":50,\"min_length\":15,\"min_pay_rate\":50,\"min_weight\":1000,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"partner\":\"<ADD EXAMPLE VALUE>\",\"return_count\":false,\"return_only\":\"unviewed\",\"return_web_url\":false,\"sort_direction\":\"asc\",\"sort_parameter\":\"age\",\"tier\":\"all\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"alert_id\":1155,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"google_recaptcha_score\":0,\"item_count\":25,\"max_age\":300,\"max_length\":300,\"max_pay_rate\":300,\"max_weight\":40000,\"md5\":\"850FBE52A5345119FD9C79FDE4E27308\",\"min_age\":50,\"min_length\":15,\"min_pay_rate\":50,\"min_weight\":1000,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"partner\":\"<ADD EXAMPLE VALUE>\",\"return_count\":false,\"return_only\":\"unviewed\",\"return_web_url\":false,\"sort_direction\":\"asc\",\"sort_parameter\":\"age\",\"tier\":\"all\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}' |  \\\n  http POST https://api.directfreight.com/v1/boards/%7Bboard_type%7D \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:01234567890abc \\\n  x-dont-update-user-last-date:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: 01234567890abc' \\\n  --header 'x-dont-update-user-last-date: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"alert_id\":1155,\"company_name\":\"<ADD EXAMPLE VALUE>\",\"destination_city\":\"chicago\",\"destination_radius\":100,\"destination_state\":[\"IL\",\"HI\",\"NY\",\"KS\",\"TX\",\"MO\",\"AL\"],\"full_load\":true,\"google_recaptcha_score\":0,\"item_count\":25,\"max_age\":300,\"max_length\":300,\"max_pay_rate\":300,\"max_weight\":40000,\"md5\":\"850FBE52A5345119FD9C79FDE4E27308\",\"min_age\":50,\"min_length\":15,\"min_pay_rate\":50,\"min_weight\":1000,\"origin_city\":\"Kansas City\",\"origin_radius\":150,\"origin_state\":[\"MO\",\"IL\",\"TX\",\"CA\"],\"page_number\":0,\"partner\":\"<ADD EXAMPLE VALUE>\",\"return_count\":false,\"return_only\":\"unviewed\",\"return_web_url\":false,\"sort_direction\":\"asc\",\"sort_parameter\":\"age\",\"tier\":\"all\",\"trailer_type\":[\"F\",\"F+T\",\"F+S\",\"V\"]}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/%7Bboard_type%7D"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"01234567890abc\",\n  \"x-dont-update-user-last-date\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"alert_id\": 1155,\n  \"company_name\": \"<ADD EXAMPLE VALUE>\",\n  \"destination_city\": \"chicago\",\n  \"destination_radius\": 100,\n  \"destination_state\": [\"IL\", \"HI\", \"NY\", \"KS\", \"TX\", \"MO\", \"AL\"],\n  \"full_load\": true,\n  \"google_recaptcha_score\": 0,\n  \"item_count\": 25,\n  \"max_age\": 300,\n  \"max_length\": 300,\n  \"max_pay_rate\": 300,\n  \"max_weight\": 40000,\n  \"md5\": \"850FBE52A5345119FD9C79FDE4E27308\",\n  \"min_age\": 50,\n  \"min_length\": 15,\n  \"min_pay_rate\": 50,\n  \"min_weight\": 1000,\n  \"origin_city\": \"Kansas City\",\n  \"origin_radius\": 150,\n  \"origin_state\": [\"MO\", \"IL\", \"TX\", \"CA\"],\n  \"page_number\": 0,\n  \"partner\": \"<ADD EXAMPLE VALUE>\",\n  \"return_count\": false,\n  \"return_only\": \"unviewed\",\n  \"return_web_url\": false,\n  \"sort_direction\": \"asc\",\n  \"sort_parameter\": \"age\",\n  \"tier\": \"all\",\n  \"trailer_type\": [\"F\", \"F+T\", \"F+S\", \"V\"]\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "BOARDS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/%7Bboard_type%7D\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/%7Bboard_type%7D');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/%7Bboard_type%7D');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/boards/%7Bboard_type%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/boards/%7Bboard_type%7D \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/boards/%7Bboard_type%7D \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/%7Bboard_type%7D"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/boards/{board_type}/state_totals": {
      "get": {
        "description": "A convenience method to get totals by state.",
        "parameters": [
          {
            "description": "Valid types are \"loads\", and \"trucks\".",
            "enum": [
              "loads",
              "trucks"
            ],
            "in": "path",
            "name": "board_type",
            "required": true,
            "type": "string"
          },
          {
            "description": "Filter totals to only include these trailer_type's. This parameter can be specified multiple times and the totals are combined. i.e. trailer_type=V&trailer_type=R returns the combined total of all loads that are either V or",
            "in": "query",
            "name": "trailer_type",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/get_state_list_response"
            }
          }
        },
        "summary": "Totals by state",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals',\n  qs: { trailer_type: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals\");\n\nreq.query({\n  \"trailer_type\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'trailer_type' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'trailer_type' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals\"\n\nquerystring = {\"trailer_type\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals?trailer_type=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "BOARDS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/%7Bboard_type%7D/state_totals\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/boards/%7Bboard_type%7D/state_totals\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/boards/{board_type}/state_totals/{state_code}": {
      "get": {
        "description": "A convenience method to get totals by state.  Stage=Private",
        "parameters": [
          {
            "description": "Valid types are \"loads\", and \"trucks\".",
            "enum": [
              "loads",
              "trucks"
            ],
            "in": "path",
            "name": "board_type",
            "required": true,
            "type": "string"
          },
          {
            "description": "Filter totals to only include these trailer_type's. This parameter can be specified multiple times and the totals are combined. i.e. trailer_type=V&trailer_type=R returns the combined total of all loads that are either V or",
            "in": "query",
            "name": "trailer_type",
            "required": false,
            "type": "string"
          },
          {
            "in": "path",
            "name": "state_code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of freight rates"
          }
        },
        "summary": "Top 5 city totals by state",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D',\n  qs: { trailer_type: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D\");\n\nreq.query({\n  \"trailer_type\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'trailer_type' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'trailer_type' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D\"\n\nquerystring = {\"trailer_type\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D?trailer_type=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "BOARDS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/%7Bboard_type%7D/state_totals/%7Bstate_code%7D\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/boards/freight_rates": {
      "get": {
        "description": "Calculate Freight Rates.",
        "parameters": [
          {
            "description": "Origin City",
            "in": "query",
            "name": "origin_city",
            "required": true,
            "type": "string"
          },
          {
            "description": "Origin State",
            "in": "query",
            "name": "origin_state",
            "required": true,
            "type": "string"
          },
          {
            "description": "Destination City",
            "in": "query",
            "name": "destination_city",
            "required": true,
            "type": "string"
          },
          {
            "description": "Destination State. If destination_city and destination_state are set to \"ANYWHERE\", then this endpoint will return an average of freight rates from the origin to all destinations.",
            "in": "query",
            "name": "destination_state",
            "required": true,
            "type": "string"
          },
          {
            "description": "Must be used in conjunction with end_date. If not specified the most current day's data is used.",
            "format": "date",
            "in": "query",
            "name": "start_date",
            "required": false,
            "type": "string"
          },
          {
            "description": "Must be used in conjunction with start_date. If not specified the most current day's data is used",
            "format": "date",
            "in": "query",
            "name": "end_date",
            "required": false,
            "type": "string"
          },
          {
            "description": "Trailer Type, defaults to \"all\" if not specied. This option can be specified multiple times.",
            "enum": [
              "all",
              "van",
              "reefer",
              "flat"
            ],
            "in": "query",
            "name": "trailer_type",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Details about average rates for this trip. Returns an object where each key is a trailer type with an array of the freight rate for each day that was found for that type.",
            "schema": {
              "$ref": "#/definitions/boards_freight_rate_response"
            }
          }
        },
        "summary": "Get Freight Rates.",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/boards/freight_rates',\n  qs: \n   { origin_city: 'SOME_STRING_VALUE',\n     origin_state: 'SOME_STRING_VALUE',\n     destination_city: 'SOME_STRING_VALUE',\n     destination_state: 'SOME_STRING_VALUE',\n     start_date: 'SOME_STRING_VALUE',\n     end_date: 'SOME_STRING_VALUE',\n     trailer_type: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/boards/freight_rates\");\n\nreq.query({\n  \"origin_city\": \"SOME_STRING_VALUE\",\n  \"origin_state\": \"SOME_STRING_VALUE\",\n  \"destination_city\": \"SOME_STRING_VALUE\",\n  \"destination_state\": \"SOME_STRING_VALUE\",\n  \"start_date\": \"SOME_STRING_VALUE\",\n  \"end_date\": \"SOME_STRING_VALUE\",\n  \"trailer_type\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/freight_rates');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'origin_city' => 'SOME_STRING_VALUE',\n  'origin_state' => 'SOME_STRING_VALUE',\n  'destination_city' => 'SOME_STRING_VALUE',\n  'destination_state' => 'SOME_STRING_VALUE',\n  'start_date' => 'SOME_STRING_VALUE',\n  'end_date' => 'SOME_STRING_VALUE',\n  'trailer_type' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/freight_rates');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'origin_city' => 'SOME_STRING_VALUE',\n  'origin_state' => 'SOME_STRING_VALUE',\n  'destination_city' => 'SOME_STRING_VALUE',\n  'destination_state' => 'SOME_STRING_VALUE',\n  'start_date' => 'SOME_STRING_VALUE',\n  'end_date' => 'SOME_STRING_VALUE',\n  'trailer_type' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/freight_rates\"\n\nquerystring = {\"origin_city\":\"SOME_STRING_VALUE\",\"origin_state\":\"SOME_STRING_VALUE\",\"destination_city\":\"SOME_STRING_VALUE\",\"destination_state\":\"SOME_STRING_VALUE\",\"start_date\":\"SOME_STRING_VALUE\",\"end_date\":\"SOME_STRING_VALUE\",\"trailer_type\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/freight_rates?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&start_date=SOME_STRING_VALUE&end_date=SOME_STRING_VALUE&trailer_type=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "BOARDS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/freight_rates\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/freight_rates\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/freight_rates\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/boards/freight_rates\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/freight_rates\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/freight_rates\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/freight_rates\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/boards/freight_rates',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/freight_rates\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/freight_rates\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/freight_rates\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/boards/freight_rates\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/freight_rates\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/freight_rates');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/freight_rates');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/boards/freight_rates\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/freight_rates\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/boards/freight_rates\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/boards/freight_rates \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/boards/freight_rates \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/freight_rates"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/freight_rates\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/boards/freight_rates/saved_lanes": {
      "delete": {
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lane_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "Will not have a return body."
          }
        },
        "summary": "Remove a Saved lane",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://api.directfreight.com/v1/boards/freight_rates/saved_lanes',\n  qs: { lane_id: 'SOME_INTEGER_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\");\n\nreq.query({\n  \"lane_id\": \"SOME_INTEGER_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"'https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/freight_rates/saved_lanes');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setQueryData(array(\n  'lane_id' => 'SOME_INTEGER_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/freight_rates/saved_lanes');\n$request->setRequestMethod('DELETE');\n$request->setQuery(new http\\QueryString(array(\n  'lane_id' => 'SOME_INTEGER_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\"\n\nquerystring = {\"lane_id\":\"SOME_INTEGER_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url 'https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE 'https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes?lane_id=SOME_INTEGER_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "description": "Get all saved lanes for logged in user.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Will return an object containing a list of saved lanes.",
            "schema": {
              "$ref": "#/definitions/boards_saved_lanes_response"
            }
          }
        },
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/freight_rates/saved_lanes\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/boards/freight_rates/saved_lanes',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/freight_rates/saved_lanes');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/freight_rates/saved_lanes');\n$request->setRequestMethod('GET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/boards/freight_rates/saved_lanes\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url https://api.directfreight.com/v1/boards/freight_rates/saved_lanes \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET https://api.directfreight.com/v1/boards/freight_rates/saved_lanes \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/freight_rates/saved_lanes"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "description": "Save a lane.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "properties": {
                "destinaition_city": {
                  "description": "A valid city or outbound",
                  "type": "string"
                },
                "destination_state": {
                  "description": "A valid State abbrevitaino or blank when using outbound.",
                  "type": "string"
                },
                "origin_city": {
                  "description": "A valid city or inbound",
                  "type": "string"
                },
                "origin_state": {
                  "description": "A valid State abbrevitaino or blank when using inbound.",
                  "type": "string"
                }
              },
              "required": [
                "destination_state",
                "origin_city",
                "origin_state"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will return an object containing a list of saved lanes.",
            "schema": {
              "$ref": "#/definitions/boards_saved_lanes_response"
            }
          }
        },
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"destinaition_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"destinaition_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\"\n\n\tpayload := strings.NewReader(\"{\\\"destinaition_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"destinaition_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"destinaition_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"destinaition_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"destinaition_city\": \"<ADD EXAMPLE VALUE>\",\n  \"destination_state\": \"<ADD EXAMPLE VALUE>\",\n  \"origin_city\": \"<ADD EXAMPLE VALUE>\",\n  \"origin_state\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/freight_rates/saved_lanes\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ destinaition_city: '<ADD EXAMPLE VALUE>',\n  destination_state: '<ADD EXAMPLE VALUE>',\n  origin_city: '<ADD EXAMPLE VALUE>',\n  origin_state: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/boards/freight_rates/saved_lanes',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { destinaition_city: '<ADD EXAMPLE VALUE>',\n     destination_state: '<ADD EXAMPLE VALUE>',\n     origin_city: '<ADD EXAMPLE VALUE>',\n     origin_state: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"destinaition_city\": \"<ADD EXAMPLE VALUE>\",\n  \"destination_state\": \"<ADD EXAMPLE VALUE>\",\n  \"origin_city\": \"<ADD EXAMPLE VALUE>\",\n  \"origin_state\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"destinaition_city\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"destination_state\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"origin_city\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"origin_state\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"destinaition_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"destinaition_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"destinaition_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/freight_rates/saved_lanes');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"destinaition_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"destinaition_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/freight_rates/saved_lanes');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"destinaition_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/boards/freight_rates/saved_lanes\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\"\n\npayload = \"{\\\"destinaition_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"destinaition_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"destination_state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"origin_state\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/boards/freight_rates/saved_lanes \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"destinaition_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"destinaition_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http POST https://api.directfreight.com/v1/boards/freight_rates/saved_lanes \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"destinaition_city\":\"<ADD EXAMPLE VALUE>\",\"destination_state\":\"<ADD EXAMPLE VALUE>\",\"origin_city\":\"<ADD EXAMPLE VALUE>\",\"origin_state\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/freight_rates/saved_lanes"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"destinaition_city\": \"<ADD EXAMPLE VALUE>\",\n  \"destination_state\": \"<ADD EXAMPLE VALUE>\",\n  \"origin_city\": \"<ADD EXAMPLE VALUE>\",\n  \"origin_state\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "BOARDS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/freight_rates/saved_lanes\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/boards/freight_rates/saved_lanes',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/freight_rates/saved_lanes');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/freight_rates/saved_lanes');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/boards/freight_rates/saved_lanes\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/boards/freight_rates/saved_lanes \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/boards/freight_rates/saved_lanes \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/freight_rates/saved_lanes"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/freight_rates/saved_lanes\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/boards/hidden_companies": {
      "delete": {
        "description": "Mark a company as not hidden.",
        "parameters": [
          {
            "description": "The company that need to be marked as not hidden.",
            "in": "query",
            "name": "company_name",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          }
        },
        "summary": "STAGE=UNK Unhide companies",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://api.directfreight.com/v1/boards/hidden_companies',\n  qs: { company_name: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://api.directfreight.com/v1/boards/hidden_companies\");\n\nreq.query({\n  \"company_name\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/hidden_companies');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setQueryData(array(\n  'company_name' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_companies');\n$request->setRequestMethod('DELETE');\n$request->setQuery(new http\\QueryString(array(\n  'company_name' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/hidden_companies\"\n\nquerystring = {\"company_name\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url 'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE 'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "description": "Get a list of companies that should be hidden.",
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "A list of company names to check if any should be visually hidden.  If this field is blank all hidden companies will be returned.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "company_name",
            "required": false,
            "type": "array"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/get_hidden_companies_response"
            }
          }
        },
        "summary": "STAGE=UNK List hidden companies.",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/boards/hidden_companies',\n  qs: { company_name: 'SOME_ARRAY_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/boards/hidden_companies\");\n\nreq.query({\n  \"company_name\": \"SOME_ARRAY_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/hidden_companies');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'company_name' => 'SOME_ARRAY_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_companies');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'company_name' => 'SOME_ARRAY_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/hidden_companies\"\n\nquerystring = {\"company_name\":\"SOME_ARRAY_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/hidden_companies?company_name=SOME_ARRAY_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "patch": {
        "description": "Toggle one  company between hidden and unhidden.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/toggle_hidden_companies"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          }
        },
        "summary": "STAGE=UNK Change hidden status",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/hidden_companies\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/hidden_companies\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_companies\"\n\n\tpayload := strings.NewReader(\"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/hidden_companies\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://api.directfreight.com/v1/boards/hidden_companies\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/hidden_companies\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"company_name\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://api.directfreight.com/v1/boards/hidden_companies\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/hidden_companies\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ company_name: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://api.directfreight.com/v1/boards/hidden_companies',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: { company_name: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://api.directfreight.com/v1/boards/hidden_companies\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"company_name\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"company_name\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/hidden_companies\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/hidden_companies\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://api.directfreight.com/v1/boards/hidden_companies\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"company_name\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/hidden_companies\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/hidden_companies');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"company_name\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"company_name\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_companies');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/boards/hidden_companies\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/hidden_companies\"\n\npayload = \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/hidden_companies\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://api.directfreight.com/v1/boards/hidden_companies \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"company_name\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"company_name\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http PATCH https://api.directfreight.com/v1/boards/hidden_companies \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"company_name\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/hidden_companies"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\"company_name\": \"<ADD EXAMPLE VALUE>\"]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/hidden_companies\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "description": "Mark a set of companies as hidden.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/mark_hidden_companies"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/object_created"
          }
        },
        "summary": "STAGE=UNK Hide companies.",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/hidden_companies\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/hidden_companies\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_companies\"\n\n\tpayload := strings.NewReader(\"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/hidden_companies\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/boards/hidden_companies\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/hidden_companies\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"company_name\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/boards/hidden_companies\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/hidden_companies\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ company_name: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/boards/hidden_companies',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: { company_name: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/boards/hidden_companies\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"company_name\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"company_name\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/hidden_companies\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/hidden_companies\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/boards/hidden_companies\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"company_name\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/hidden_companies\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/hidden_companies');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"company_name\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"company_name\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_companies');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/boards/hidden_companies\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/hidden_companies\"\n\npayload = \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/hidden_companies\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"company_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/boards/hidden_companies \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"company_name\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"company_name\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http POST https://api.directfreight.com/v1/boards/hidden_companies \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"company_name\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/hidden_companies"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\"company_name\": \"<ADD EXAMPLE VALUE>\"]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/hidden_companies\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "BOARDS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/hidden_companies\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_companies\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/hidden_companies\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/boards/hidden_companies\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/hidden_companies\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/hidden_companies\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/hidden_companies\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/boards/hidden_companies',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/hidden_companies\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/hidden_companies\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/hidden_companies\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/boards/hidden_companies\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/hidden_companies\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/hidden_companies');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_companies');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/boards/hidden_companies\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/hidden_companies\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/boards/hidden_companies\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/boards/hidden_companies \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/boards/hidden_companies \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/hidden_companies"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/hidden_companies\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/boards/hidden_entries": {
      "delete": {
        "description": " Mark an entry as unhidden.",
        "parameters": [
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "entry_id",
            "required": true,
            "type": "array"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "STAGE=private Unhide 1 or more postings",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://api.directfreight.com/v1/boards/hidden_entries',\n  qs: { entry_id: 'SOME_ARRAY_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://api.directfreight.com/v1/boards/hidden_entries\");\n\nreq.query({\n  \"entry_id\": \"SOME_ARRAY_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/hidden_entries');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setQueryData(array(\n  'entry_id' => 'SOME_ARRAY_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_entries');\n$request->setRequestMethod('DELETE');\n$request->setQuery(new http\\QueryString(array(\n  'entry_id' => 'SOME_ARRAY_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/hidden_entries\"\n\nquerystring = {\"entry_id\":\"SOME_ARRAY_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url 'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE 'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "description": "Get a list of entries that should be hidden.",
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "A list of id's to check if any should be visually hidden.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "entry_id",
            "required": true,
            "type": "array"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/get_hidden_entries"
            }
          }
        },
        "summary": "STAGE=UNK List hidden entries.",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/boards/hidden_entries',\n  qs: { entry_id: 'SOME_ARRAY_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/boards/hidden_entries\");\n\nreq.query({\n  \"entry_id\": \"SOME_ARRAY_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/hidden_entries');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'entry_id' => 'SOME_ARRAY_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_entries');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'entry_id' => 'SOME_ARRAY_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/hidden_entries\"\n\nquerystring = {\"entry_id\":\"SOME_ARRAY_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/hidden_entries?entry_id=SOME_ARRAY_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "patch": {
        "description": "Toggle one or more entries between hidden and unhidden.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/toggle_hidden_entries"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          }
        },
        "summary": "STAGE=UNK Change hidden status",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/hidden_entries\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/hidden_entries\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_entries\"\n\n\tpayload := strings.NewReader(\"{}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/hidden_entries\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://api.directfreight.com/v1/boards/hidden_entries\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/hidden_entries\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://api.directfreight.com/v1/boards/hidden_entries\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/hidden_entries\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({}));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://api.directfreight.com/v1/boards/hidden_entries',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: {},\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://api.directfreight.com/v1/boards/hidden_entries\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{  };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/hidden_entries\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/hidden_entries\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://api.directfreight.com/v1/boards/hidden_entries\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/hidden_entries\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/hidden_entries');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_entries');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/boards/hidden_entries\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/hidden_entries\"\n\npayload = \"{}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/hidden_entries\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://api.directfreight.com/v1/boards/hidden_entries \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{}' |  \\\n  http PATCH https://api.directfreight.com/v1/boards/hidden_entries \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/hidden_entries"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = []\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/hidden_entries\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "description": "Mark an entry as hidden.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hidden_entry_object"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/object_created"
          }
        },
        "summary": "STAGE=private Hide 1 or more postings",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/hidden_entries\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/hidden_entries\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_entries\"\n\n\tpayload := strings.NewReader(\"{}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/hidden_entries\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/boards/hidden_entries\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/hidden_entries\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/boards/hidden_entries\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/hidden_entries\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({}));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/boards/hidden_entries',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: {},\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/boards/hidden_entries\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{  };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/hidden_entries\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/hidden_entries\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/boards/hidden_entries\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/hidden_entries\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/hidden_entries');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_entries');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/boards/hidden_entries\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/hidden_entries\"\n\npayload = \"{}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/hidden_entries\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/boards/hidden_entries \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{}' |  \\\n  http POST https://api.directfreight.com/v1/boards/hidden_entries \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/hidden_entries"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = []\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/hidden_entries\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "BOARDS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/hidden_entries\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/hidden_entries\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/hidden_entries\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/boards/hidden_entries\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/hidden_entries\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/hidden_entries\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/hidden_entries\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/boards/hidden_entries',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/hidden_entries\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/hidden_entries\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/hidden_entries\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/boards/hidden_entries\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/hidden_entries\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/hidden_entries');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/hidden_entries');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/boards/hidden_entries\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/hidden_entries\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/boards/hidden_entries\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/boards/hidden_entries \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/boards/hidden_entries \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/hidden_entries"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/hidden_entries\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/boards/notes": {
      "delete": {
        "parameters": [
          {
            "description": "The entry to associate the note with. ",
            "in": "query",
            "name": "note_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          }
        },
        "summary": "STAGE=UNK Delete a note.",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/notes?note_id=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://api.directfreight.com/v1/boards/notes',\n  qs: { note_id: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://api.directfreight.com/v1/boards/notes\");\n\nreq.query({\n  \"note_id\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"'https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/notes');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setQueryData(array(\n  'note_id' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/notes');\n$request->setRequestMethod('DELETE');\n$request->setQuery(new http\\QueryString(array(\n  'note_id' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/boards/notes?note_id=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/notes\"\n\nquerystring = {\"note_id\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url 'https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE 'https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/notes?note_id=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "description": "Get notes that this user has written.",
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Optionally just check if certain loads have notes associated with them. ",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "entry_id",
            "required": false,
            "type": "array"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/get_boards_notes_response"
            }
          }
        },
        "summary": "STAGE=UNK List user notes.",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/notes?entry_id=SOME_ARRAY_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/boards/notes',\n  qs: { entry_id: 'SOME_ARRAY_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/boards/notes\");\n\nreq.query({\n  \"entry_id\": \"SOME_ARRAY_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/notes');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'entry_id' => 'SOME_ARRAY_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/notes');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'entry_id' => 'SOME_ARRAY_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/boards/notes?entry_id=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/notes\"\n\nquerystring = {\"entry_id\":\"SOME_ARRAY_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/notes?entry_id=SOME_ARRAY_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "patch": {
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/update_notes"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/update_notes_status"
            }
          }
        },
        "summary": "STAGE=UNK Update a note.",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/notes\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"note_id\\\":0,\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/notes\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"note_id\\\":0,\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/notes\"\n\n\tpayload := strings.NewReader(\"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"note_id\\\":0,\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"note_id\\\":0,\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/notes\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://api.directfreight.com/v1/boards/notes\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"note_id\\\":0,\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/notes\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"note_id\\\":0,\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"body\": \"<ADD EXAMPLE VALUE>\",\n  \"note_id\": 0,\n  \"title\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://api.directfreight.com/v1/boards/notes\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/notes\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ body: '<ADD EXAMPLE VALUE>',\n  note_id: 0,\n  title: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://api.directfreight.com/v1/boards/notes',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { body: '<ADD EXAMPLE VALUE>',\n     note_id: 0,\n     title: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://api.directfreight.com/v1/boards/notes\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"body\": \"<ADD EXAMPLE VALUE>\",\n  \"note_id\": 0,\n  \"title\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"body\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"note_id\": @0,\n                              @\"title\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/notes\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/notes\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"note_id\\\":0,\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://api.directfreight.com/v1/boards/notes\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/notes\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"note_id\\\":0,\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/notes');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/notes');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"note_id\\\":0,\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/boards/notes\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/notes\"\n\npayload = \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"note_id\\\":0,\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/notes\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"note_id\\\":0,\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://api.directfreight.com/v1/boards/notes \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http PATCH https://api.directfreight.com/v1/boards/notes \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"body\":\"<ADD EXAMPLE VALUE>\",\"note_id\":0,\"title\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/notes"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"body\": \"<ADD EXAMPLE VALUE>\",\n  \"note_id\": 0,\n  \"title\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/notes\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "description": "Create a new note.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create_notes"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Object created check the headers for a reference URL.",
            "schema": {
              "$ref": "#/definitions/note_create_status"
            }
          }
        },
        "summary": "STAGE=UNK Create a note.",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/notes\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/notes\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/notes\"\n\n\tpayload := strings.NewReader(\"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/notes\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/boards/notes\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/notes\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"body\": \"<ADD EXAMPLE VALUE>\",\n  \"entry_id\": \"<ADD EXAMPLE VALUE>\",\n  \"title\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/boards/notes\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/notes\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ body: '<ADD EXAMPLE VALUE>',\n  entry_id: '<ADD EXAMPLE VALUE>',\n  title: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/boards/notes',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { body: '<ADD EXAMPLE VALUE>',\n     entry_id: '<ADD EXAMPLE VALUE>',\n     title: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/boards/notes\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"body\": \"<ADD EXAMPLE VALUE>\",\n  \"entry_id\": \"<ADD EXAMPLE VALUE>\",\n  \"title\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"body\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"entry_id\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"title\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/notes\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/notes\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/boards/notes\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/notes\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/notes');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/notes');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/boards/notes\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/notes\"\n\npayload = \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/notes\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"body\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"title\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/boards/notes \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http POST https://api.directfreight.com/v1/boards/notes \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"body\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"title\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/notes"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"body\": \"<ADD EXAMPLE VALUE>\",\n  \"entry_id\": \"<ADD EXAMPLE VALUE>\",\n  \"title\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/notes\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "BOARDS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/notes\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/notes\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/notes\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/boards/notes\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/notes\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/notes\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/notes\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/boards/notes',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/notes\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/notes\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/notes\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/boards/notes\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/notes\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/notes');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/notes');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/boards/notes\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/notes\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/boards/notes\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/boards/notes \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/boards/notes \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/notes"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/notes\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/boards/offer/driver": {
      "get": {
        "description": "Get the offer submitted by the driver for this load.  STAGE=Private",
        "parameters": [
          {
            "description": "The reference code to look up the driver's offer",
            "in": "query",
            "name": "df_reference_code",
            "required": true,
            "type": "string"
          },
          {
            "description": "32 character entry id",
            "in": "query",
            "name": "entry_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Details about Driver Offer",
            "schema": {
              "$ref": "#/definitions/boards_offer_driver_response"
            }
          }
        },
        "summary": "Get Driver Offer",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/boards/offer/driver',\n  qs: \n   { df_reference_code: 'SOME_STRING_VALUE',\n     entry_id: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/boards/offer/driver\");\n\nreq.query({\n  \"df_reference_code\": \"SOME_STRING_VALUE\",\n  \"entry_id\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/offer/driver');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'df_reference_code' => 'SOME_STRING_VALUE',\n  'entry_id' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/offer/driver');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'df_reference_code' => 'SOME_STRING_VALUE',\n  'entry_id' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/offer/driver\"\n\nquerystring = {\"df_reference_code\":\"SOME_STRING_VALUE\",\"entry_id\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/offer/driver?df_reference_code=SOME_STRING_VALUE&entry_id=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "description": "Submit the offer from the driver for this load.  STAGE=Private",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "properties": {
                "df_reference_code": {
                  "description": "The reference code returned with the broker offer.",
                  "type": "string"
                },
                "entry_id": {
                  "description": "32 character entry id",
                  "type": "string"
                },
                "quote_amount": {
                  "description": "The amount offered by the driver to transport this load.",
                  "type": "number"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/boards_submit_offer_response"
            }
          }
        },
        "summary": "Submit Driver Offer",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/offer/driver\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"df_reference_code\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"quote_amount\\\":0}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/offer/driver\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"df_reference_code\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"quote_amount\\\":0}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/offer/driver\"\n\n\tpayload := strings.NewReader(\"{\\\"df_reference_code\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"quote_amount\\\":0}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"df_reference_code\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"quote_amount\\\":0}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/offer/driver\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/boards/offer/driver\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"df_reference_code\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"quote_amount\\\":0}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/offer/driver\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"df_reference_code\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"quote_amount\\\":0}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"df_reference_code\": \"<ADD EXAMPLE VALUE>\",\n  \"entry_id\": \"<ADD EXAMPLE VALUE>\",\n  \"quote_amount\": 0\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/boards/offer/driver\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/offer/driver\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ df_reference_code: '<ADD EXAMPLE VALUE>',\n  entry_id: '<ADD EXAMPLE VALUE>',\n  quote_amount: 0 }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/boards/offer/driver',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { df_reference_code: '<ADD EXAMPLE VALUE>',\n     entry_id: '<ADD EXAMPLE VALUE>',\n     quote_amount: 0 },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/boards/offer/driver\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"df_reference_code\": \"<ADD EXAMPLE VALUE>\",\n  \"entry_id\": \"<ADD EXAMPLE VALUE>\",\n  \"quote_amount\": 0\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"df_reference_code\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"entry_id\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"quote_amount\": @0 };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/offer/driver\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/offer/driver\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"df_reference_code\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"quote_amount\\\":0}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/boards/offer/driver\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"quote_amount\":0}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/offer/driver\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"df_reference_code\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"quote_amount\\\":0}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/offer/driver');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"quote_amount\":0}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"quote_amount\":0}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/offer/driver');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"df_reference_code\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"quote_amount\\\":0}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/boards/offer/driver\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/offer/driver\"\n\npayload = \"{\\\"df_reference_code\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"quote_amount\\\":0}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/offer/driver\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"df_reference_code\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"quote_amount\\\":0}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/boards/offer/driver \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"quote_amount\":0}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"quote_amount\":0}' |  \\\n  http POST https://api.directfreight.com/v1/boards/offer/driver \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\",\"quote_amount\":0}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/offer/driver"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"df_reference_code\": \"<ADD EXAMPLE VALUE>\",\n  \"entry_id\": \"<ADD EXAMPLE VALUE>\",\n  \"quote_amount\": 0\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/offer/driver\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "BOARDS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/offer/driver\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/offer/driver\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/offer/driver\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/boards/offer/driver\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/offer/driver\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/offer/driver\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/offer/driver\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/boards/offer/driver',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/offer/driver\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/offer/driver\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/offer/driver\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/boards/offer/driver\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/offer/driver\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/offer/driver');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/offer/driver');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/boards/offer/driver\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/offer/driver\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/boards/offer/driver\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/boards/offer/driver \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/boards/offer/driver \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/offer/driver"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/offer/driver\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/boards/offer/driver/accept_broker_offer": {
      "post": {
        "description": "Submit the offer from the driver for this load.  STAGE=Private",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "properties": {
                "df_reference_code": {
                  "description": "The reference code returned with the broker offer.",
                  "type": "string"
                },
                "entry_id": {
                  "description": "32 character entry id",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/boards_accept_offer_response"
            }
          }
        },
        "summary": "Accept Broker Offer",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"df_reference_code\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"df_reference_code\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer\"\n\n\tpayload := strings.NewReader(\"{\\\"df_reference_code\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"df_reference_code\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"df_reference_code\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"df_reference_code\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"df_reference_code\": \"<ADD EXAMPLE VALUE>\",\n  \"entry_id\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/offer/driver/accept_broker_offer\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ df_reference_code: '<ADD EXAMPLE VALUE>',\n  entry_id: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { df_reference_code: '<ADD EXAMPLE VALUE>',\n     entry_id: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"df_reference_code\": \"<ADD EXAMPLE VALUE>\",\n  \"entry_id\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"df_reference_code\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"entry_id\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"df_reference_code\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"df_reference_code\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"df_reference_code\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/boards/offer/driver/accept_broker_offer\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer\"\n\npayload = \"{\\\"df_reference_code\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"df_reference_code\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"entry_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http POST https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"df_reference_code\":\"<ADD EXAMPLE VALUE>\",\"entry_id\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"df_reference_code\": \"<ADD EXAMPLE VALUE>\",\n  \"entry_id\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/offer/driver/accept_broker_offer\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/boards/offer/driver/list": {
      "get": {
        "description": "Get a list of accepted and submitted offers driver has for this load.  STAGE=Private",
        "parameters": [
          {
            "description": "32 character entry id",
            "in": "query",
            "name": "entry_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "List of offers",
            "schema": {
              "$ref": "#/definitions/boards_offer_driver_list_response"
            }
          }
        },
        "summary": "Get accepted and submitter driver offers",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/boards/offer/driver/list',\n  qs: { entry_id: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/boards/offer/driver/list\");\n\nreq.query({\n  \"entry_id\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/offer/driver/list');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'entry_id' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/offer/driver/list');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'entry_id' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/offer/driver/list\"\n\nquerystring = {\"entry_id\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/offer/driver/list?entry_id=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "BOARDS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/offer/driver/list\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/offer/driver/list\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/offer/driver/list\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/boards/offer/driver/list\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/offer/driver/list\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/offer/driver/list\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/offer/driver/list\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/boards/offer/driver/list',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/offer/driver/list\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/offer/driver/list\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/offer/driver/list\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/boards/offer/driver/list\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/offer/driver/list\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/offer/driver/list');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/offer/driver/list');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/boards/offer/driver/list\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/offer/driver/list\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/boards/offer/driver/list\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/boards/offer/driver/list \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/boards/offer/driver/list \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/offer/driver/list"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/offer/driver/list\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/boards/profit": {
      "get": {
        "description": "Calculate trip profit.",
        "parameters": [
          {
            "description": "Origin City name",
            "in": "query",
            "name": "origin_city",
            "required": true,
            "type": "string"
          },
          {
            "description": "Origin State, two letter abbreviation",
            "in": "query",
            "name": "origin_state",
            "required": true,
            "type": "string"
          },
          {
            "description": "Destination City name",
            "in": "query",
            "name": "destination_city",
            "required": true,
            "type": "string"
          },
          {
            "description": "Destination State, two letter abbreviation",
            "in": "query",
            "name": "destination_state",
            "required": true,
            "type": "string"
          },
          {
            "description": "This field will accept either the per mile rate, or gross rate.",
            "in": "query",
            "name": "pay_rate",
            "required": false,
            "type": "number"
          },
          {
            "description": "Total deadhead distance in miles, if this value is provided the response will include the deadhead_cost.",
            "in": "query",
            "name": "deadhead_distance",
            "required": false,
            "type": "number"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Details about the profitability of this trip.",
            "schema": {
              "$ref": "#/definitions/boards_profit_response"
            }
          }
        },
        "summary": "STAGE=Private Get profit data.",
        "tags": [
          "boards"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/boards/profit',\n  qs: \n   { origin_city: 'SOME_STRING_VALUE',\n     origin_state: 'SOME_STRING_VALUE',\n     destination_city: 'SOME_STRING_VALUE',\n     destination_state: 'SOME_STRING_VALUE',\n     pay_rate: 'SOME_NUMBER_VALUE',\n     deadhead_distance: 'SOME_NUMBER_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/boards/profit\");\n\nreq.query({\n  \"origin_city\": \"SOME_STRING_VALUE\",\n  \"origin_state\": \"SOME_STRING_VALUE\",\n  \"destination_city\": \"SOME_STRING_VALUE\",\n  \"destination_state\": \"SOME_STRING_VALUE\",\n  \"pay_rate\": \"SOME_NUMBER_VALUE\",\n  \"deadhead_distance\": \"SOME_NUMBER_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/profit');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'origin_city' => 'SOME_STRING_VALUE',\n  'origin_state' => 'SOME_STRING_VALUE',\n  'destination_city' => 'SOME_STRING_VALUE',\n  'destination_state' => 'SOME_STRING_VALUE',\n  'pay_rate' => 'SOME_NUMBER_VALUE',\n  'deadhead_distance' => 'SOME_NUMBER_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/profit');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'origin_city' => 'SOME_STRING_VALUE',\n  'origin_state' => 'SOME_STRING_VALUE',\n  'destination_city' => 'SOME_STRING_VALUE',\n  'destination_state' => 'SOME_STRING_VALUE',\n  'pay_rate' => 'SOME_NUMBER_VALUE',\n  'deadhead_distance' => 'SOME_NUMBER_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/profit\"\n\nquerystring = {\"origin_city\":\"SOME_STRING_VALUE\",\"origin_state\":\"SOME_STRING_VALUE\",\"destination_city\":\"SOME_STRING_VALUE\",\"destination_state\":\"SOME_STRING_VALUE\",\"pay_rate\":\"SOME_NUMBER_VALUE\",\"deadhead_distance\":\"SOME_NUMBER_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/profit?origin_city=SOME_STRING_VALUE&origin_state=SOME_STRING_VALUE&destination_city=SOME_STRING_VALUE&destination_state=SOME_STRING_VALUE&pay_rate=SOME_NUMBER_VALUE&deadhead_distance=SOME_NUMBER_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "BOARDS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/boards/profit\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/boards/profit\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/boards/profit\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/boards/profit\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/boards/profit\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/profit\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/boards/profit\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/boards/profit',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/boards/profit\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/boards/profit\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/boards/profit\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/boards/profit\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/boards/profit\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/boards/profit');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/boards/profit');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/boards/profit\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/boards/profit\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/boards/profit\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/boards/profit \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/boards/profit \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/boards/profit"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/boards/profit\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/end_user_authentications": {
      "delete": {
        "description": "This deletes the logged in users account permanently.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Will not return content on a successful delete."
          }
        },
        "summary": "Logout",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://api.directfreight.com/v1/end_user_authentications\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.directfreight.com/v1/end_user_authentications\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://api.directfreight.com/v1/end_user_authentications',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://api.directfreight.com/v1/end_user_authentications\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"https://api.directfreight.com/v1/end_user_authentications\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications');\n$request->setRequestMethod('DELETE');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/end_user_authentications\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url https://api.directfreight.com/v1/end_user_authentications \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE https://api.directfreight.com/v1/end_user_authentications \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "description": "Get current authentication level for the user.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "examples": {
              "application/json": "{status: \"Subscribed\", nami_label: \"default\"}"
            },
            "schema": {
              "properties": {
                "abilities": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "nami_label": {
                  "description": "used internally for in app purchase paywall campaigns",
                  "type": "string"
                },
                "roles": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "status": {
                  "description": "Will return the logged in user's status.  (deprecated)",
                  "enum": [
                    "subscribed",
                    "posting",
                    "overdue",
                    "not_logged_in"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "summary": "Get authentication level.",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/end_user_authentications\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/end_user_authentications\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/end_user_authentications\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"https://api.directfreight.com/v1/end_user_authentications\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications');\n$request->setRequestMethod('GET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/end_user_authentications\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url https://api.directfreight.com/v1/end_user_authentications \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET https://api.directfreight.com/v1/end_user_authentications \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "description": "This function sends login credentials, and retrieves a stateless token.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/login_credentials"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/end-user-token"
            }
          },
          "422": {
            "$ref": "#/responses/error_422"
          }
        },
        "summary": "Login",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"username\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"username\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications\"\n\n\tpayload := strings.NewReader(\"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"username\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"username\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/end_user_authentications\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"username\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"username\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"login\": \"<ADD EXAMPLE VALUE>\",\n  \"realm\": \"username\",\n  \"secret\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/end_user_authentications\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ login: '<ADD EXAMPLE VALUE>',\n  realm: 'username',\n  secret: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/end_user_authentications',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { login: '<ADD EXAMPLE VALUE>',\n     realm: 'username',\n     secret: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/end_user_authentications\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"login\": \"<ADD EXAMPLE VALUE>\",\n  \"realm\": \"username\",\n  \"secret\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"login\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"realm\": @\"username\",\n                              @\"secret\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"username\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/end_user_authentications\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"username\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"username\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/end_user_authentications\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications\"\n\npayload = \"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"username\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"username\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/end_user_authentications \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --data '{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http POST https://api.directfreight.com/v1/end_user_authentications \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"username\",\"secret\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"login\": \"<ADD EXAMPLE VALUE>\",\n  \"realm\": \"username\",\n  \"secret\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/end_user_authentications\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/end_user_authentications\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/end_user_authentications\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/end_user_authentications \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/end_user_authentications \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/end_user_authentications/apple_appstore_notification": {
      "post": {
        "description": "DEPRECATED Please use the webooks endpoint. Save the apple notification to mysql  STAGE=private",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "summary": "Save the apple notification to mysql  STAGE=private",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\")\n  .post(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/apple_appstore_notification\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification');\n$request->setRequestMethod('POST');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/end_user_authentications/apple_appstore_notification\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http POST https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/apple_appstore_notification\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/end_user_authentications/apple_appstore_notification\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/apple_appstore_notification\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/end_user_authentications/auto_login_url": {
      "get": {
        "description": "Get an auto login url",
        "parameters": [
          {
            "description": "DirectFreight website URI to redirect to after login. Example, {{url}}/v1/end_user_authentications/auto_login_url?redirect_url=/boards/find/loads",
            "in": "query",
            "name": "redirect_url",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Will return a DirectFreight URI that can be used to auto login and redirect.  The URI is valid for 5 minutes."
          }
        },
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/auto_login_url',\n  qs: { redirect_url: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/end_user_authentications/auto_login_url\");\n\nreq.query({\n  \"redirect_url\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/auto_login_url');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'redirect_url' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/auto_login_url');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'redirect_url' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/auto_login_url\"\n\nquerystring = {\"redirect_url\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/auto_login_url?redirect_url=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/auto_login_url\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/auto_login_url\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/auto_login_url\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/end_user_authentications/auto_login_url\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/auto_login_url\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/auto_login_url\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/auto_login_url\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/auto_login_url',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/auto_login_url\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/auto_login_url\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/auto_login_url\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/end_user_authentications/auto_login_url\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/auto_login_url\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/auto_login_url');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/auto_login_url');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/end_user_authentications/auto_login_url\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/auto_login_url\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/auto_login_url\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/end_user_authentications/auto_login_url \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/auto_login_url \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/auto_login_url"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/auto_login_url\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/end_user_authentications/dates": {
      "get": {
        "description": "Gets an authoritative date_time string.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "examples": {
              "application/json": "{\n  \"now\": \"now\"\n}"
            },
            "schema": {
              "properties": {
                "now": {
                  "description": "The current date and time based on our server.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "summary": "Retrieve date",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/dates\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications/dates\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/dates\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/dates\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/end_user_authentications/dates\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/dates\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/end_user_authentications/dates\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/dates\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/dates',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/end_user_authentications/dates\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/dates\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/dates\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"https://api.directfreight.com/v1/end_user_authentications/dates\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/dates\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/dates');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/dates');\n$request->setRequestMethod('GET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/end_user_authentications/dates\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/dates\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/dates\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url https://api.directfreight.com/v1/end_user_authentications/dates \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET https://api.directfreight.com/v1/end_user_authentications/dates \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/dates"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/dates\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/dates\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/dates\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/dates\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/end_user_authentications/dates\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/dates\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/dates\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/dates\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/dates',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/dates\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/dates\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/dates\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/end_user_authentications/dates\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/dates\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/dates');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/dates');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/end_user_authentications/dates\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/dates\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/dates\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/end_user_authentications/dates \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/dates \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/dates"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/dates\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/end_user_authentications/departments": {
      "delete": {
        "parameters": [
          {
            "description": "The department_id to delete.",
            "in": "query",
            "name": "department_id",
            "required": true,
            "type": "integer",
            "x-example": "?department_id=1&department_id=2"
          }
        ],
        "responses": {
          "204": {
            "description": "Will not return content on a successful deletion."
          }
        },
        "summary": "Delete requested department ids.",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/departments',\n  qs: { department_id: 'SOME_INTEGER_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://api.directfreight.com/v1/end_user_authentications/departments\");\n\nreq.query({\n  \"department_id\": \"SOME_INTEGER_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"'https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/departments');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setQueryData(array(\n  'department_id' => 'SOME_INTEGER_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/departments');\n$request->setRequestMethod('DELETE');\n$request->setQuery(new http\\QueryString(array(\n  'department_id' => 'SOME_INTEGER_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/departments\"\n\nquerystring = {\"department_id\":\"SOME_INTEGER_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url 'https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE 'https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/departments?department_id=SOME_INTEGER_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "description": "Get departments",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get departments",
            "schema": {
              "$ref": "#/definitions/departments_response"
            }
          }
        },
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/departments\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications/departments\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/departments\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/departments\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/end_user_authentications/departments\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/departments\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/end_user_authentications/departments\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/departments\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/departments',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/end_user_authentications/departments\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/departments\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/departments\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"https://api.directfreight.com/v1/end_user_authentications/departments\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/departments\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/departments');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/departments');\n$request->setRequestMethod('GET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/end_user_authentications/departments\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/departments\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/departments\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url https://api.directfreight.com/v1/end_user_authentications/departments \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET https://api.directfreight.com/v1/end_user_authentications/departments \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/departments"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/departments\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The name of the department to create.",
            "in": "query",
            "name": "name",
            "required": true,
            "type": "string",
            "x-example": "?name=West-Coast&name=East-Coast"
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "properties": {
                "message": {
                  "description": "Department created.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "$ref": "#/responses/error_422"
          }
        },
        "summary": "Create department.",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE\")\n  .post(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/departments?name=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/departments',\n  qs: { name: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/end_user_authentications/departments\");\n\nreq.query({\n  \"name\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"'https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/departments');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData(array(\n  'name' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/departments');\n$request->setRequestMethod('POST');\n$request->setQuery(new http\\QueryString(array(\n  'name' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/end_user_authentications/departments?name=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/departments\"\n\nquerystring = {\"name\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url 'https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http POST 'https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/departments?name=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/departments\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/departments\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/departments\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/end_user_authentications/departments\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/departments\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/departments\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/departments\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/departments',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/departments\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/departments\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/departments\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/end_user_authentications/departments\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/departments\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/departments');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/departments');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/end_user_authentications/departments\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/departments\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/departments\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/end_user_authentications/departments \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/departments \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/departments"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/departments\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/end_user_authentications/departments/{department_id}": {
      "delete": {
        "parameters": [
          {
            "description": "The User ID to delete.",
            "in": "query",
            "name": "user_id",
            "required": true,
            "type": "integer",
            "x-example": "?user_id=1&user_id=2"
          },
          {
            "description": "The email to unlink from the department.",
            "in": "query",
            "name": "email",
            "required": true,
            "type": "integer",
            "x-example": "?email=foo@bar.com&email=bar@foo.com"
          },
          {
            "description": "Department ID",
            "in": "path",
            "name": "department_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "Will not return content on a successful deletion."
          }
        },
        "summary": "Delete requested User ID from department.",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D',\n  qs: { user_id: 'SOME_INTEGER_VALUE', email: 'SOME_INTEGER_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\");\n\nreq.query({\n  \"user_id\": \"SOME_INTEGER_VALUE\",\n  \"email\": \"SOME_INTEGER_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"'https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setQueryData(array(\n  'user_id' => 'SOME_INTEGER_VALUE',\n  'email' => 'SOME_INTEGER_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D');\n$request->setRequestMethod('DELETE');\n$request->setQuery(new http\\QueryString(array(\n  'user_id' => 'SOME_INTEGER_VALUE',\n  'email' => 'SOME_INTEGER_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\"\n\nquerystring = {\"user_id\":\"SOME_INTEGER_VALUE\",\"email\":\"SOME_INTEGER_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url 'https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE 'https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "description": "Get departments users",
        "parameters": [
          {
            "description": "Department ID",
            "in": "path",
            "name": "department_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Get departments users",
            "schema": {
              "$ref": "#/definitions/department_users_response"
            }
          }
        },
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/departments/%7Bdepartment_id%7D\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D');\n$request->setRequestMethod('GET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/end_user_authentications/departments/%7Bdepartment_id%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The User ID to link to the department.",
            "in": "query",
            "name": "user_id",
            "required": false,
            "type": "string",
            "x-example": "?user_id=1&user_id=2"
          },
          {
            "description": "The email to add to the department.",
            "in": "query",
            "name": "email",
            "required": false,
            "type": "integer",
            "x-example": "?email=foo@bar.com&email=bar@foo.com"
          },
          {
            "description": "Department ID",
            "in": "path",
            "name": "department_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "properties": {
                "message": {
                  "description": "Department user created.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "$ref": "#/responses/error_422"
          }
        },
        "summary": "Create department user.",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE\")\n  .post(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D',\n  qs: { user_id: 'SOME_STRING_VALUE', email: 'SOME_INTEGER_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\");\n\nreq.query({\n  \"user_id\": \"SOME_STRING_VALUE\",\n  \"email\": \"SOME_INTEGER_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"'https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData(array(\n  'user_id' => 'SOME_STRING_VALUE',\n  'email' => 'SOME_INTEGER_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D');\n$request->setRequestMethod('POST');\n$request->setQuery(new http\\QueryString(array(\n  'user_id' => 'SOME_STRING_VALUE',\n  'email' => 'SOME_INTEGER_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\"\n\nquerystring = {\"user_id\":\"SOME_STRING_VALUE\",\"email\":\"SOME_INTEGER_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url 'https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http POST 'https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D?user_id=SOME_STRING_VALUE&email=SOME_INTEGER_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/departments/%7Bdepartment_id%7D\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/end_user_authentications/departments/%7Bdepartment_id%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/departments/%7Bdepartment_id%7D\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/end_user_authentications/email": {
      "patch": {
        "description": "Update a users email address.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "email": {
                  "description": "The user's new email address.",
                  "type": "string"
                }
              },
              "required": [
                "email"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "A successful operation."
          },
          "422": {
            "$ref": "#/responses/error_422"
          }
        },
        "summary": "STAGE=UNK Update email.",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/email\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications/email\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/email\"\n\n\tpayload := strings.NewReader(\"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/email\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://api.directfreight.com/v1/end_user_authentications/email\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/email\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"email\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://api.directfreight.com/v1/end_user_authentications/email\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/email\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ email: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/email',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: { email: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://api.directfreight.com/v1/end_user_authentications/email\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"email\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"email\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/email\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/email\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://api.directfreight.com/v1/end_user_authentications/email\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"email\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/email\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/email');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"email\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"email\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/email');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/end_user_authentications/email\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/email\"\n\npayload = \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/email\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://api.directfreight.com/v1/end_user_authentications/email \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"email\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"email\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http PATCH https://api.directfreight.com/v1/end_user_authentications/email \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"email\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/email"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\"email\": \"<ADD EXAMPLE VALUE>\"]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/email\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/email\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/email\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/email\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/end_user_authentications/email\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/email\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/email\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/email\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/email',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/email\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/email\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/email\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/end_user_authentications/email\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/email\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/email');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/email');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/end_user_authentications/email\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/email\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/email\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/end_user_authentications/email \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/email \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/email"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/email\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/end_user_authentications/passwords": {
      "get": {
        "description": "Request a forgotten password.",
        "parameters": [
          {
            "description": "The user e-mail to send a password to if valid.",
            "in": "query",
            "name": "email_address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "This will return a success only if the e-mail is in our records."
          },
          "422": {
            "$ref": "#/responses/error_422"
          }
        },
        "summary": "STAGE=UNK Retrieve password",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/passwords',\n  qs: { email_address: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/end_user_authentications/passwords\");\n\nreq.query({\n  \"email_address\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/passwords');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'email_address' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/passwords');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'email_address' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/passwords\"\n\nquerystring = {\"email_address\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "patch": {
        "description": "Update a users password.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "new_password": {
                  "description": "The user's new password.",
                  "type": "string"
                },
                "old_password": {
                  "description": "Thee user's old password.",
                  "type": "string"
                }
              },
              "required": [
                "new_password",
                "old_password"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "A successful operation."
          },
          "422": {
            "$ref": "#/responses/error_422"
          }
        },
        "summary": "STAGE=UNK Update password.",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/passwords\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications/passwords\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/passwords\"\n\n\tpayload := strings.NewReader(\"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/passwords\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://api.directfreight.com/v1/end_user_authentications/passwords\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/passwords\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"new_password\": \"<ADD EXAMPLE VALUE>\",\n  \"old_password\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://api.directfreight.com/v1/end_user_authentications/passwords\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/passwords\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ new_password: '<ADD EXAMPLE VALUE>',\n  old_password: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/passwords',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { new_password: '<ADD EXAMPLE VALUE>',\n     old_password: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://api.directfreight.com/v1/end_user_authentications/passwords\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"new_password\": \"<ADD EXAMPLE VALUE>\",\n  \"old_password\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"new_password\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"old_password\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/passwords\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/passwords\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://api.directfreight.com/v1/end_user_authentications/passwords\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/passwords\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/passwords');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/passwords');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/end_user_authentications/passwords\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/passwords\"\n\npayload = \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/passwords\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://api.directfreight.com/v1/end_user_authentications/passwords \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http PATCH https://api.directfreight.com/v1/end_user_authentications/passwords \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/passwords"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"new_password\": \"<ADD EXAMPLE VALUE>\",\n  \"old_password\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/passwords\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "description": "Creates a new password for a user with a recovery key",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "new_password": {
                  "description": "The new password they want it updated to.",
                  "type": "string"
                },
                "recovery_key": {
                  "description": "The key we e-mailed to a user when they forgot their password. See the GET section.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Their password was successfuly updated."
          },
          "422": {
            "$ref": "#/responses/error_422"
          }
        },
        "summary": "STAGE=UNK Restore password.",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/passwords\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"recovery_key\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications/passwords\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"recovery_key\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/passwords\"\n\n\tpayload := strings.NewReader(\"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"recovery_key\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"recovery_key\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/passwords\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/end_user_authentications/passwords\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"recovery_key\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/passwords\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"recovery_key\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"new_password\": \"<ADD EXAMPLE VALUE>\",\n  \"recovery_key\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/end_user_authentications/passwords\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/passwords\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ new_password: '<ADD EXAMPLE VALUE>',\n  recovery_key: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/passwords',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { new_password: '<ADD EXAMPLE VALUE>',\n     recovery_key: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/end_user_authentications/passwords\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"new_password\": \"<ADD EXAMPLE VALUE>\",\n  \"recovery_key\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"new_password\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"recovery_key\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/passwords\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/passwords\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"recovery_key\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/end_user_authentications/passwords\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"recovery_key\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/passwords\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"recovery_key\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/passwords');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"recovery_key\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"recovery_key\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/passwords');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"recovery_key\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/end_user_authentications/passwords\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/passwords\"\n\npayload = \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"recovery_key\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/passwords\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"recovery_key\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/end_user_authentications/passwords \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --data '{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"recovery_key\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"recovery_key\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http POST https://api.directfreight.com/v1/end_user_authentications/passwords \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"recovery_key\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/passwords"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"new_password\": \"<ADD EXAMPLE VALUE>\",\n  \"recovery_key\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/passwords\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/passwords\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/passwords\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/passwords\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/end_user_authentications/passwords\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/passwords\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/passwords\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/passwords\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/passwords',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/passwords\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/passwords\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/passwords\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/end_user_authentications/passwords\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/passwords\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/passwords');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/passwords');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/end_user_authentications/passwords\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/passwords\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/passwords\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/end_user_authentications/passwords \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/passwords \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/passwords"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/passwords\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/end_user_authentications/social_login": {
      "post": {
        "description": "Logs in or creates a new account for the user based on their email. \"new_account\" is what indicates if a new account was created, or if an existing account was used to login.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/social_login_credentials"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/social-login-end-user-token"
            }
          },
          "422": {
            "$ref": "#/responses/error_422"
          }
        },
        "summary": "STAGE=Private Social Login/Create Account",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/social_login\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"create_missing_account\\\":false,\\\"referrer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"search_term\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"service\\\":\\\"google\\\",\\\"token\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications/social_login\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"create_missing_account\\\":false,\\\"referrer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"search_term\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"service\\\":\\\"google\\\",\\\"token\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/social_login\"\n\n\tpayload := strings.NewReader(\"{\\\"create_missing_account\\\":false,\\\"referrer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"search_term\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"service\\\":\\\"google\\\",\\\"token\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"create_missing_account\\\":false,\\\"referrer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"search_term\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"service\\\":\\\"google\\\",\\\"token\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/social_login\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/end_user_authentications/social_login\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"create_missing_account\\\":false,\\\"referrer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"search_term\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"service\\\":\\\"google\\\",\\\"token\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/social_login\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"create_missing_account\\\":false,\\\"referrer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"search_term\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"service\\\":\\\"google\\\",\\\"token\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"create_missing_account\": false,\n  \"referrer\": \"<ADD EXAMPLE VALUE>\",\n  \"search_term\": \"<ADD EXAMPLE VALUE>\",\n  \"service\": \"google\",\n  \"token\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/end_user_authentications/social_login\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/social_login\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ create_missing_account: false,\n  referrer: '<ADD EXAMPLE VALUE>',\n  search_term: '<ADD EXAMPLE VALUE>',\n  service: 'google',\n  token: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/social_login',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { create_missing_account: false,\n     referrer: '<ADD EXAMPLE VALUE>',\n     search_term: '<ADD EXAMPLE VALUE>',\n     service: 'google',\n     token: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/end_user_authentications/social_login\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"create_missing_account\": false,\n  \"referrer\": \"<ADD EXAMPLE VALUE>\",\n  \"search_term\": \"<ADD EXAMPLE VALUE>\",\n  \"service\": \"google\",\n  \"token\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"create_missing_account\": @NO,\n                              @\"referrer\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"search_term\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"service\": @\"google\",\n                              @\"token\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/social_login\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/social_login\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"create_missing_account\\\":false,\\\"referrer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"search_term\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"service\\\":\\\"google\\\",\\\"token\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/end_user_authentications/social_login\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"create_missing_account\":false,\"referrer\":\"<ADD EXAMPLE VALUE>\",\"search_term\":\"<ADD EXAMPLE VALUE>\",\"service\":\"google\",\"token\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/social_login\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"create_missing_account\\\":false,\\\"referrer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"search_term\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"service\\\":\\\"google\\\",\\\"token\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/social_login');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"create_missing_account\":false,\"referrer\":\"<ADD EXAMPLE VALUE>\",\"search_term\":\"<ADD EXAMPLE VALUE>\",\"service\":\"google\",\"token\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"create_missing_account\":false,\"referrer\":\"<ADD EXAMPLE VALUE>\",\"search_term\":\"<ADD EXAMPLE VALUE>\",\"service\":\"google\",\"token\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/social_login');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"create_missing_account\\\":false,\\\"referrer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"search_term\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"service\\\":\\\"google\\\",\\\"token\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/end_user_authentications/social_login\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/social_login\"\n\npayload = \"{\\\"create_missing_account\\\":false,\\\"referrer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"search_term\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"service\\\":\\\"google\\\",\\\"token\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/social_login\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"create_missing_account\\\":false,\\\"referrer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"search_term\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"service\\\":\\\"google\\\",\\\"token\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/end_user_authentications/social_login \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --data '{\"create_missing_account\":false,\"referrer\":\"<ADD EXAMPLE VALUE>\",\"search_term\":\"<ADD EXAMPLE VALUE>\",\"service\":\"google\",\"token\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"create_missing_account\":false,\"referrer\":\"<ADD EXAMPLE VALUE>\",\"search_term\":\"<ADD EXAMPLE VALUE>\",\"service\":\"google\",\"token\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http POST https://api.directfreight.com/v1/end_user_authentications/social_login \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"create_missing_account\":false,\"referrer\":\"<ADD EXAMPLE VALUE>\",\"search_term\":\"<ADD EXAMPLE VALUE>\",\"service\":\"google\",\"token\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/social_login"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"create_missing_account\": false,\n  \"referrer\": \"<ADD EXAMPLE VALUE>\",\n  \"search_term\": \"<ADD EXAMPLE VALUE>\",\n  \"service\": \"google\",\n  \"token\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/social_login\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/social_login\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/social_login\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/social_login\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/end_user_authentications/social_login\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/social_login\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/social_login\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/social_login\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/social_login',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/social_login\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/social_login\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/social_login\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/end_user_authentications/social_login\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/social_login\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/social_login');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/social_login');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/end_user_authentications/social_login\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/social_login\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/social_login\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/end_user_authentications/social_login \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/social_login \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/social_login"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/social_login\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/end_user_authentications/sub_accounts": {
      "delete": {
        "parameters": [
          {
            "description": "The user_id to unlink from the sub_account.",
            "in": "query",
            "name": "user_id",
            "required": true,
            "type": "integer",
            "x-example": "?user_id=1&user_id=2"
          },
          {
            "description": "The email to unlink from the sub_account.",
            "in": "query",
            "name": "email",
            "required": true,
            "type": "integer",
            "x-example": "?email=foo@bar.com&email=bar@foo.com"
          }
        ],
        "responses": {
          "204": {
            "description": "Will not return content on a successful deletion."
          }
        },
        "summary": "Unlink requested user_ids from sub account.",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts',\n  qs: { user_id: 'SOME_INTEGER_VALUE', email: 'SOME_INTEGER_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\");\n\nreq.query({\n  \"user_id\": \"SOME_INTEGER_VALUE\",\n  \"email\": \"SOME_INTEGER_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"'https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setQueryData(array(\n  'user_id' => 'SOME_INTEGER_VALUE',\n  'email' => 'SOME_INTEGER_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts');\n$request->setRequestMethod('DELETE');\n$request->setQuery(new http\\QueryString(array(\n  'user_id' => 'SOME_INTEGER_VALUE',\n  'email' => 'SOME_INTEGER_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\"\n\nquerystring = {\"user_id\":\"SOME_INTEGER_VALUE\",\"email\":\"SOME_INTEGER_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "description": "Get sub account users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Sub account users",
            "schema": {
              "$ref": "#/definitions/sub_account_response"
            }
          }
        },
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/sub_accounts\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts');\n$request->setRequestMethod('GET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/end_user_authentications/sub_accounts\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url https://api.directfreight.com/v1/end_user_authentications/sub_accounts \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET https://api.directfreight.com/v1/end_user_authentications/sub_accounts \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/sub_accounts"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "The user_id to invite into the sub_account. You can use either user ID or Email to link.",
            "in": "query",
            "name": "user_id",
            "required": false,
            "type": "integer",
            "x-example": "?user_id=1&user_id=2"
          },
          {
            "description": "The email address to invite into the sub_account. You can use either user ID or Email to link.",
            "in": "query",
            "name": "email",
            "required": false,
            "type": "integer",
            "x-example": "?email=user1@domain.com&email=user2@domain.com"
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "properties": {
                "message": {
                  "description": "Sub account users invited into primary account.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "$ref": "#/responses/error_422"
          }
        },
        "summary": "Invite Sub Account User.",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\")\n  .post(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts',\n  qs: { user_id: 'SOME_INTEGER_VALUE', email: 'SOME_INTEGER_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\");\n\nreq.query({\n  \"user_id\": \"SOME_INTEGER_VALUE\",\n  \"email\": \"SOME_INTEGER_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"'https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData(array(\n  'user_id' => 'SOME_INTEGER_VALUE',\n  'email' => 'SOME_INTEGER_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts');\n$request->setRequestMethod('POST');\n$request->setQuery(new http\\QueryString(array(\n  'user_id' => 'SOME_INTEGER_VALUE',\n  'email' => 'SOME_INTEGER_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\"\n\nquerystring = {\"user_id\":\"SOME_INTEGER_VALUE\",\"email\":\"SOME_INTEGER_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http POST 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts?user_id=SOME_INTEGER_VALUE&email=SOME_INTEGER_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/sub_accounts\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/end_user_authentications/sub_accounts\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/end_user_authentications/sub_accounts \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/sub_accounts \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/sub_accounts"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/end_user_authentications/sub_accounts/accept_invitation": {
      "get": {
        "description": "Accept sub-account invitation",
        "parameters": [],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "properties": {
                "message": {
                  "description": "Sub-account invitation accepted successfully.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/sub_accounts/accept_invitation\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation');\n$request->setRequestMethod('GET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/end_user_authentications/sub_accounts/accept_invitation\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/sub_accounts/accept_invitation\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/end_user_authentications/sub_accounts/accept_invitation\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/accept_invitation\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/end_user_authentications/sub_accounts/decline_invitation": {
      "get": {
        "description": "Decline sub-account invitation",
        "parameters": [],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "properties": {
                "message": {
                  "description": "Sub-account invitation declined successfully.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/sub_accounts/decline_invitation\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation');\n$request->setRequestMethod('GET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/end_user_authentications/sub_accounts/decline_invitation\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/sub_accounts/decline_invitation\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/end_user_authentications/sub_accounts/decline_invitation\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/decline_invitation\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/end_user_authentications/sub_accounts/pending_invitation": {
      "get": {
        "description": "Check if current user has pending sub account invitations",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "properties": {
                "primary_user_company": {
                  "description": "Company of the primary user who invited.",
                  "type": "string"
                },
                "primary_user_email": {
                  "description": "Email of the primary user who invited.",
                  "type": "string"
                },
                "primary_user_id": {
                  "description": "ID of the primary user who invited.",
                  "type": "number"
                },
                "primary_user_name": {
                  "description": "Name of the primary user who invited.",
                  "type": "string"
                },
                "status": {
                  "description": "The status of the invitation.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/sub_accounts/pending_invitation\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation');\n$request->setRequestMethod('GET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/end_user_authentications/sub_accounts/pending_invitation\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/sub_accounts/pending_invitation\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/end_user_authentications/sub_accounts/pending_invitation\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/sub_accounts/pending_invitation\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/end_user_authentications/users": {
      "delete": {
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Will not return content on a successful logout."
          }
        },
        "summary": "Deletes Logged in User",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/users\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications/users\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/users\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/users\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://api.directfreight.com/v1/end_user_authentications/users\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/users\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.directfreight.com/v1/end_user_authentications/users\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/users\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/users',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://api.directfreight.com/v1/end_user_authentications/users\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/users\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/users\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"https://api.directfreight.com/v1/end_user_authentications/users\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/users\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/users');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/users');\n$request->setRequestMethod('DELETE');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/end_user_authentications/users\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/users\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/users\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url https://api.directfreight.com/v1/end_user_authentications/users \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE https://api.directfreight.com/v1/end_user_authentications/users \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/users"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/users\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "properties": {
                "end-user-token": {
                  "description": "Auto logs in the new user and gives them a token.",
                  "type": "string"
                }
              },
              "required": [
                "end-user-token"
              ],
              "type": "object"
            }
          },
          "422": {
            "$ref": "#/responses/error_422"
          }
        },
        "summary": "Create a new user.",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/users\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"partner\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications/users\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"partner\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/users\"\n\n\tpayload := strings.NewReader(\"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"partner\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"partner\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/users\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/end_user_authentications/users\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"partner\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/users\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"partner\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"email\": \"<ADD EXAMPLE VALUE>\",\n  \"partner\": \"<ADD EXAMPLE VALUE>\",\n  \"password\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/end_user_authentications/users\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/users\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ email: '<ADD EXAMPLE VALUE>',\n  partner: '<ADD EXAMPLE VALUE>',\n  password: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/users',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { email: '<ADD EXAMPLE VALUE>',\n     partner: '<ADD EXAMPLE VALUE>',\n     password: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/end_user_authentications/users\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"email\": \"<ADD EXAMPLE VALUE>\",\n  \"partner\": \"<ADD EXAMPLE VALUE>\",\n  \"password\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"email\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"partner\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"password\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/users\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/users\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"partner\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/end_user_authentications/users\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"email\":\"<ADD EXAMPLE VALUE>\",\"partner\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/users\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"partner\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/users');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"email\":\"<ADD EXAMPLE VALUE>\",\"partner\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"email\":\"<ADD EXAMPLE VALUE>\",\"partner\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/users');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"partner\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/end_user_authentications/users\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/users\"\n\npayload = \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"partner\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/users\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"partner\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/end_user_authentications/users \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --data '{\"email\":\"<ADD EXAMPLE VALUE>\",\"partner\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"email\":\"<ADD EXAMPLE VALUE>\",\"partner\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http POST https://api.directfreight.com/v1/end_user_authentications/users \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"email\":\"<ADD EXAMPLE VALUE>\",\"partner\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/users"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"email\": \"<ADD EXAMPLE VALUE>\",\n  \"partner\": \"<ADD EXAMPLE VALUE>\",\n  \"password\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/users\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/users\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/users\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/users\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/end_user_authentications/users\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/users\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/users\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/users\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/users',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/users\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/users\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/users\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/end_user_authentications/users\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/users\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/users');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/users');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/end_user_authentications/users\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/users\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/users\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/end_user_authentications/users \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/users \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/users"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/users\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/end_user_authentications/uuids": {
      "get": {
        "description": "Get or create a user specific UUID.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "examples": {
              "application/json": "{\n  \"uuid\": \"B542E92E-7359-4096-9382-0D5AD324808D\"\n}"
            },
            "schema": {
              "properties": {
                "uuid": {
                  "description": "The logged in users UUID.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "summary": "Retrieve UUID",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/uuids\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/end_user_authentications/uuids\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/uuids\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/uuids\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/end_user_authentications/uuids\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/uuids\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/end_user_authentications/uuids\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/uuids\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/uuids',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/end_user_authentications/uuids\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/uuids\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/uuids\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"https://api.directfreight.com/v1/end_user_authentications/uuids\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/uuids\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/uuids');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/uuids');\n$request->setRequestMethod('GET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/end_user_authentications/uuids\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/uuids\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/uuids\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url https://api.directfreight.com/v1/end_user_authentications/uuids \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET https://api.directfreight.com/v1/end_user_authentications/uuids \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/uuids"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/uuids\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/end_user_authentications/uuids\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/end_user_authentications/uuids\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/end_user_authentications/uuids\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/end_user_authentications/uuids\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/end_user_authentications/uuids\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/uuids\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/uuids\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/end_user_authentications/uuids',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/end_user_authentications/uuids\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/end_user_authentications/uuids\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/end_user_authentications/uuids\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/end_user_authentications/uuids\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/end_user_authentications/uuids\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/end_user_authentications/uuids');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/end_user_authentications/uuids');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/end_user_authentications/uuids\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/end_user_authentications/uuids\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/end_user_authentications/uuids\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/end_user_authentications/uuids \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/end_user_authentications/uuids \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/end_user_authentications/uuids"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/end_user_authentications/uuids\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/locations/autocomplete": {
      "get": {
        "description": "Searches a string of a partial city or state name, and returns a list of possible matches.",
        "parameters": [
          {
            "description": "City or State or Postal code to search for.   It matches city name and state name and state abbreviation.  So for instance \"MO\" would return Missouri, Montana, and Montreal, QC  while  ME would return Maine, Mexico, and Memphis, TN",
            "in": "query",
            "name": "searchtext",
            "required": true,
            "type": "string"
          },
          {
            "description": "restricts the results return.  regions will only return states, provinces, and countries.  cities will only return cities and postals.  The default is to return both cities and regions in the results.",
            "enum": [
              "cities",
              "regions"
            ],
            "in": "query",
            "name": "return_only",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify the page that is calling this endpoint.",
            "enum": [
              "mileage_calculator",
              "freight_rates"
            ],
            "in": "query",
            "name": "requesting_page",
            "required": false,
            "type": "string"
          },
          {
            "default": 100,
            "description": "The number of records to return.   Limit 1 has a special property where it will only return a high confidence match so it may return zero results if no match found.",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "limit",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/autocomplete_response"
            }
          }
        },
        "summary": "autocomplete",
        "tags": [
          "locations"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/locations/autocomplete',\n  qs: \n   { searchtext: 'SOME_STRING_VALUE',\n     return_only: 'SOME_STRING_VALUE',\n     requesting_page: 'SOME_STRING_VALUE',\n     limit: '100' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/locations/autocomplete\");\n\nreq.query({\n  \"searchtext\": \"SOME_STRING_VALUE\",\n  \"return_only\": \"SOME_STRING_VALUE\",\n  \"requesting_page\": \"SOME_STRING_VALUE\",\n  \"limit\": \"100\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/locations/autocomplete');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'searchtext' => 'SOME_STRING_VALUE',\n  'return_only' => 'SOME_STRING_VALUE',\n  'requesting_page' => 'SOME_STRING_VALUE',\n  'limit' => '100'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/locations/autocomplete');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'searchtext' => 'SOME_STRING_VALUE',\n  'return_only' => 'SOME_STRING_VALUE',\n  'requesting_page' => 'SOME_STRING_VALUE',\n  'limit' => '100'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/locations/autocomplete\"\n\nquerystring = {\"searchtext\":\"SOME_STRING_VALUE\",\"return_only\":\"SOME_STRING_VALUE\",\"requesting_page\":\"SOME_STRING_VALUE\",\"limit\":\"100\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/locations/autocomplete?searchtext=SOME_STRING_VALUE&return_only=SOME_STRING_VALUE&requesting_page=SOME_STRING_VALUE&limit=100\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "LOCATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/locations/autocomplete\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/locations/autocomplete\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/locations/autocomplete\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/locations/autocomplete\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/locations/autocomplete\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/locations/autocomplete\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/locations/autocomplete\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/locations/autocomplete',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/locations/autocomplete\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/locations/autocomplete\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/locations/autocomplete\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/locations/autocomplete\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/locations/autocomplete\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/locations/autocomplete');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/locations/autocomplete');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/locations/autocomplete\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/locations/autocomplete\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/locations/autocomplete\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/locations/autocomplete \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/locations/autocomplete \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/locations/autocomplete"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/locations/autocomplete\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/locations/reverse_geocode": {
      "get": {
        "description": "returns the nearest city to a lat/lon point. (reverse geocode)",
        "parameters": [
          {
            "format": "float",
            "in": "query",
            "name": "latitude",
            "required": true,
            "type": "number"
          },
          {
            "format": "float",
            "in": "query",
            "name": "longitude",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/reverse_geocode_response"
            }
          }
        },
        "summary": "reverse_geocode",
        "tags": [
          "locations"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/locations/reverse_geocode',\n  qs: \n   { latitude: 'SOME_NUMBER_VALUE',\n     longitude: 'SOME_NUMBER_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/locations/reverse_geocode\");\n\nreq.query({\n  \"latitude\": \"SOME_NUMBER_VALUE\",\n  \"longitude\": \"SOME_NUMBER_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/locations/reverse_geocode');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'latitude' => 'SOME_NUMBER_VALUE',\n  'longitude' => 'SOME_NUMBER_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/locations/reverse_geocode');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'latitude' => 'SOME_NUMBER_VALUE',\n  'longitude' => 'SOME_NUMBER_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/locations/reverse_geocode\"\n\nquerystring = {\"latitude\":\"SOME_NUMBER_VALUE\",\"longitude\":\"SOME_NUMBER_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/locations/reverse_geocode?latitude=SOME_NUMBER_VALUE&longitude=SOME_NUMBER_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "LOCATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/locations/reverse_geocode\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/locations/reverse_geocode\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/locations/reverse_geocode\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/locations/reverse_geocode\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/locations/reverse_geocode\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/locations/reverse_geocode\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/locations/reverse_geocode\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/locations/reverse_geocode',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/locations/reverse_geocode\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/locations/reverse_geocode\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/locations/reverse_geocode\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/locations/reverse_geocode\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/locations/reverse_geocode\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/locations/reverse_geocode');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/locations/reverse_geocode');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/locations/reverse_geocode\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/locations/reverse_geocode\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/locations/reverse_geocode\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/locations/reverse_geocode \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/locations/reverse_geocode \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/locations/reverse_geocode"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/locations/reverse_geocode\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/mobile_updates": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "email_address",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "properties": {
                "bullet_points": {
                  "items": {
                    "default": "[]",
                    "type": "string"
                  },
                  "type": "array"
                },
                "information_url": {
                  "default": "null",
                  "type": "string"
                },
                "message": {
                  "default": "null",
                  "type": "string"
                },
                "title": {
                  "default": "null",
                  "type": "string"
                },
                "update_url": {
                  "default": "null",
                  "type": "string"
                }
              },
              "required": [
                "bullet_points",
                "information_url",
                "message",
                "title",
                "update_url"
              ],
              "type": "object"
            }
          }
        },
        "summary": "STAGE=Private Get any available update information.",
        "tags": [
          "mobile update"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/mobile_updates?email_address=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/mobile_updates',\n  qs: { email_address: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/mobile_updates\");\n\nreq.query({\n  \"email_address\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/mobile_updates');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'email_address' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/mobile_updates');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'email_address' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/mobile_updates?email_address=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/mobile_updates\"\n\nquerystring = {\"email_address\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "Mobile Update",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/mobile_updates\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/mobile_updates\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/mobile_updates\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/mobile_updates\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/mobile_updates\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/mobile_updates\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/mobile_updates\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/mobile_updates',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/mobile_updates\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/mobile_updates\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/mobile_updates\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/mobile_updates\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/mobile_updates\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/mobile_updates');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/mobile_updates');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/mobile_updates\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/mobile_updates\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/mobile_updates\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/mobile_updates \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/mobile_updates \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/mobile_updates"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/mobile_updates\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/optins": {
      "delete": {
        "description": "By only sending in their EUA token you would be requesting to opt them out of everything.",
        "parameters": [
          {
            "enum": [
              "email",
              "text",
              "push"
            ],
            "in": "query",
            "name": "notification_medium",
            "required": false,
            "type": "string"
          },
          {
            "default": "all",
            "description": "This would allow granular optouts. Currently ignored.",
            "enum": [
              "all",
              "alerts"
            ],
            "in": "query",
            "name": "notification_channel",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Status 204"
          }
        },
        "summary": "STAGE=UNK Opt someone out of one or more mediums and channels.",
        "tags": [
          "optins"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://api.directfreight.com/v1/optins',\n  qs: \n   { notification_medium: 'SOME_STRING_VALUE',\n     notification_channel: 'all' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://api.directfreight.com/v1/optins\");\n\nreq.query({\n  \"notification_medium\": \"SOME_STRING_VALUE\",\n  \"notification_channel\": \"all\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/optins');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setQueryData(array(\n  'notification_medium' => 'SOME_STRING_VALUE',\n  'notification_channel' => 'all'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/optins');\n$request->setRequestMethod('DELETE');\n$request->setQuery(new http\\QueryString(array(\n  'notification_medium' => 'SOME_STRING_VALUE',\n  'notification_channel' => 'all'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/optins\"\n\nquerystring = {\"notification_medium\":\"SOME_STRING_VALUE\",\"notification_channel\":\"all\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url 'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE 'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "To limit your list to just one medium.",
            "enum": [
              "email",
              "text",
              "push"
            ],
            "in": "query",
            "name": "notification_medium",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "properties": {
                      "notification_channel": {
                        "default": "all",
                        "type": "string"
                      },
                      "notification_medium": {
                        "enum": [
                          "email",
                          "text",
                          "push"
                        ],
                        "type": "string"
                      },
                      "status": {
                        "enum": [
                          "optin",
                          "optout",
                          "no response",
                          "no record"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "notification_channel",
                      "notification_medium",
                      "status"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "required": [
                "list"
              ],
              "type": "object"
            }
          }
        },
        "summary": "STAGE=UNK Get the optin status of a user.",
        "tags": [
          "optins"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/optins?notification_medium=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/optins',\n  qs: { notification_medium: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/optins\");\n\nreq.query({\n  \"notification_medium\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/optins');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'notification_medium' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/optins');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'notification_medium' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/optins?notification_medium=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/optins\"\n\nquerystring = {\"notification_medium\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/optins?notification_medium=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "patch": {
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "notification_medium": {
                  "enum": [
                    "email",
                    "text"
                  ],
                  "type": "string"
                },
                "verification_code": {
                  "description": "This code is generated on a POST, and will arrive via the same medium it was designated for.",
                  "type": "string"
                }
              },
              "required": [
                "notification_medium",
                "verification_code"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Status 204"
          }
        },
        "summary": "STAGE=UNK Confirm an optin.",
        "tags": [
          "optins"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/optins\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/optins\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins\"\n\n\tpayload := strings.NewReader(\"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/optins\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://api.directfreight.com/v1/optins\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/optins\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"notification_medium\": \"email\",\n  \"verification_code\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://api.directfreight.com/v1/optins\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/optins\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ notification_medium: 'email',\n  verification_code: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://api.directfreight.com/v1/optins',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { notification_medium: 'email',\n     verification_code: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://api.directfreight.com/v1/optins\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"notification_medium\": \"email\",\n  \"verification_code\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"notification_medium\": @\"email\",\n                              @\"verification_code\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/optins\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/optins\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://api.directfreight.com/v1/optins\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/optins\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/optins');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/optins');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/optins\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/optins\"\n\npayload = \"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/optins\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://api.directfreight.com/v1/optins \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http PATCH https://api.directfreight.com/v1/optins \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/optins"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"notification_medium\": \"email\",\n  \"verification_code\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/optins\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "description": "Currently only Push notifications are implemented. With them a post creates and approves the optin. Later on when text/email is ported post will create the optin with the status of 'no response' meaning they haven't replied with the propper code, or clicked an authorization link.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "notification_channel": {
                  "default": "all",
                  "description": "Currently defaults to all, and is ignored. When we start using it it will be for opting people out or in one list like alerts, or messages, but not others.",
                  "type": "string"
                },
                "notification_medium": {
                  "description": "We currently only accept push",
                  "enum": [
                    "email",
                    "text",
                    "push"
                  ],
                  "type": "string"
                },
                "tokens": {
                  "description": "This is how you can add multiple push notifications at once, or for systems that have multiple tokens required.",
                  "example": "\"tokens\": { \"ios\": \"12345678\", \"android\": \"5432344\" } ",
                  "properties": {
                    "$SERVICE_OR_KEY_NAME": {
                      "description": "Fill in the key in the value, and the service in the name. Look at our examples for clarification.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "$SERVICE_OR_KEY_NAME"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "notification_medium"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Status 201"
          }
        },
        "summary": "STAGE=UNK Submit a request to be opted in.",
        "tags": [
          "optins"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/optins\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/optins\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins\"\n\n\tpayload := strings.NewReader(\"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/optins\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/optins\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/optins\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"notification_channel\": \"<ADD EXAMPLE VALUE>\",\n  \"notification_medium\": \"email\",\n  \"tokens\": {\n    \"$SERVICE_OR_KEY_NAME\": \"<ADD EXAMPLE VALUE>\"\n  }\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/optins\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/optins\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ notification_channel: '<ADD EXAMPLE VALUE>',\n  notification_medium: 'email',\n  tokens: { '$SERVICE_OR_KEY_NAME': '<ADD EXAMPLE VALUE>' } }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/optins',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { notification_channel: '<ADD EXAMPLE VALUE>',\n     notification_medium: 'email',\n     tokens: { '$SERVICE_OR_KEY_NAME': '<ADD EXAMPLE VALUE>' } },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/optins\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"notification_channel\": \"<ADD EXAMPLE VALUE>\",\n  \"notification_medium\": \"email\",\n  \"tokens\": {\n    \"$SERVICE_OR_KEY_NAME\": \"<ADD EXAMPLE VALUE>\"\n  }\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"notification_channel\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"notification_medium\": @\"email\",\n                              @\"tokens\": @{ @\"$SERVICE_OR_KEY_NAME\": @\"<ADD EXAMPLE VALUE>\" } };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/optins\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/optins\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/optins\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/optins\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/optins');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/optins');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/optins\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/optins\"\n\npayload = \"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/optins\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/optins \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}' |  \\\n  http POST https://api.directfreight.com/v1/optins \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/optins"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"notification_channel\": \"<ADD EXAMPLE VALUE>\",\n  \"notification_medium\": \"email\",\n  \"tokens\": [\"$SERVICE_OR_KEY_NAME\": \"<ADD EXAMPLE VALUE>\"]\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/optins\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "Optins",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/optins\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/optins\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/optins\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/optins\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/optins\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/optins\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/optins',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/optins\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/optins\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/optins\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/optins\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/optins\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/optins');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/optins');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/optins\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/optins\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/optins\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/optins \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/optins \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/optins"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/optins\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/optins/load_alert_sound": {
      "get": {
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        },
        "summary": "STAGE=UNK Check if a user has enabled audio notifications on the web for new load alerts.",
        "tags": [
          "optins"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/optins/load_alert_sound\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/optins/load_alert_sound\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins/load_alert_sound\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/optins/load_alert_sound\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/optins/load_alert_sound\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/optins/load_alert_sound\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/optins/load_alert_sound\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/optins/load_alert_sound\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/optins/load_alert_sound',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/optins/load_alert_sound\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/optins/load_alert_sound\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/optins/load_alert_sound\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"https://api.directfreight.com/v1/optins/load_alert_sound\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/optins/load_alert_sound\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/optins/load_alert_sound');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/optins/load_alert_sound');\n$request->setRequestMethod('GET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/optins/load_alert_sound\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/optins/load_alert_sound\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/optins/load_alert_sound\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url https://api.directfreight.com/v1/optins/load_alert_sound \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET https://api.directfreight.com/v1/optins/load_alert_sound \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/optins/load_alert_sound"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/optins/load_alert_sound\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "patch": {
        "description": "Toggle audio notifications.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "enabled": {
                  "description": "true/false",
                  "type": "boolean"
                }
              },
              "required": [
                "enabled"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Status 204"
          }
        },
        "summary": "STAGE=UNK Toggles audio notifications for web new load load alerts.",
        "tags": [
          "optins"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/optins/load_alert_sound\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"enabled\\\":false}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/optins/load_alert_sound\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"enabled\\\":false}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins/load_alert_sound\"\n\n\tpayload := strings.NewReader(\"{\\\"enabled\\\":false}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"enabled\\\":false}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/optins/load_alert_sound\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://api.directfreight.com/v1/optins/load_alert_sound\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"enabled\\\":false}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/optins/load_alert_sound\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"enabled\\\":false}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"enabled\": false\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://api.directfreight.com/v1/optins/load_alert_sound\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/optins/load_alert_sound\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ enabled: false }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://api.directfreight.com/v1/optins/load_alert_sound',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: { enabled: false },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://api.directfreight.com/v1/optins/load_alert_sound\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"enabled\": false\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"enabled\": @NO };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/optins/load_alert_sound\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/optins/load_alert_sound\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"enabled\\\":false}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://api.directfreight.com/v1/optins/load_alert_sound\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"enabled\":false}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/optins/load_alert_sound\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"enabled\\\":false}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/optins/load_alert_sound');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"enabled\":false}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"enabled\":false}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/optins/load_alert_sound');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"enabled\\\":false}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/optins/load_alert_sound\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/optins/load_alert_sound\"\n\npayload = \"{\\\"enabled\\\":false}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/optins/load_alert_sound\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"enabled\\\":false}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://api.directfreight.com/v1/optins/load_alert_sound \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"enabled\":false}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"enabled\":false}' |  \\\n  http PATCH https://api.directfreight.com/v1/optins/load_alert_sound \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"enabled\":false}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/optins/load_alert_sound"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\"enabled\": false]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/optins/load_alert_sound\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "Optins",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/optins/load_alert_sound\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins/load_alert_sound\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/optins/load_alert_sound\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/optins/load_alert_sound\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/optins/load_alert_sound\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/optins/load_alert_sound\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/optins/load_alert_sound\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/optins/load_alert_sound',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/optins/load_alert_sound\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/optins/load_alert_sound\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/optins/load_alert_sound\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/optins/load_alert_sound\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/optins/load_alert_sound\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/optins/load_alert_sound');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/optins/load_alert_sound');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/optins/load_alert_sound\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/optins/load_alert_sound\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/optins/load_alert_sound\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/optins/load_alert_sound \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/optins/load_alert_sound \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/optins/load_alert_sound"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/optins/load_alert_sound\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/optins/search_data": {
      "get": {
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        },
        "summary": "STAGE=UNK Check if a user has enabled search data opt in.",
        "tags": [
          "optins"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/optins/search_data\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/optins/search_data\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins/search_data\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/optins/search_data\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/optins/search_data\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/optins/search_data\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/optins/search_data\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/optins/search_data\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/optins/search_data',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/optins/search_data\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/optins/search_data\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/optins/search_data\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"https://api.directfreight.com/v1/optins/search_data\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/optins/search_data\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/optins/search_data');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/optins/search_data');\n$request->setRequestMethod('GET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/optins/search_data\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/optins/search_data\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/optins/search_data\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url https://api.directfreight.com/v1/optins/search_data \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET https://api.directfreight.com/v1/optins/search_data \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/optins/search_data"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/optins/search_data\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "patch": {
        "description": "Toggle search data opt in.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "enabled": {
                  "description": "true/false",
                  "type": "boolean"
                }
              },
              "required": [
                "enabled"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Status 204"
          }
        },
        "summary": "STAGE=UNK Toggle search data opt in.",
        "tags": [
          "optins"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/optins/search_data\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"enabled\\\":false}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/optins/search_data\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"enabled\\\":false}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins/search_data\"\n\n\tpayload := strings.NewReader(\"{\\\"enabled\\\":false}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"enabled\\\":false}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/optins/search_data\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://api.directfreight.com/v1/optins/search_data\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"enabled\\\":false}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/optins/search_data\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"enabled\\\":false}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"enabled\": false\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://api.directfreight.com/v1/optins/search_data\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/optins/search_data\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ enabled: false }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://api.directfreight.com/v1/optins/search_data',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: { enabled: false },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://api.directfreight.com/v1/optins/search_data\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"enabled\": false\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"enabled\": @NO };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/optins/search_data\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/optins/search_data\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"enabled\\\":false}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://api.directfreight.com/v1/optins/search_data\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"enabled\":false}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/optins/search_data\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"enabled\\\":false}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/optins/search_data');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"enabled\":false}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"enabled\":false}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/optins/search_data');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"enabled\\\":false}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/optins/search_data\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/optins/search_data\"\n\npayload = \"{\\\"enabled\\\":false}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/optins/search_data\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"enabled\\\":false}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://api.directfreight.com/v1/optins/search_data \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"enabled\":false}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"enabled\":false}' |  \\\n  http PATCH https://api.directfreight.com/v1/optins/search_data \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"enabled\":false}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/optins/search_data"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\"enabled\": false]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/optins/search_data\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "Optins",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/optins/search_data\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins/search_data\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/optins/search_data\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/optins/search_data\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/optins/search_data\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/optins/search_data\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/optins/search_data\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/optins/search_data',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/optins/search_data\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/optins/search_data\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/optins/search_data\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/optins/search_data\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/optins/search_data\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/optins/search_data');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/optins/search_data');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/optins/search_data\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/optins/search_data\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/optins/search_data\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/optins/search_data \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/optins/search_data \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/optins/search_data"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/optins/search_data\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/optins/web_push": {
      "delete": {
        "description": "Opt Out of web push notifications.",
        "parameters": [
          {
            "description": "the onesignal player_id as returned by them when a user subscribes.",
            "in": "query",
            "name": "player_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Status 204"
          }
        },
        "summary": "STAGE=UNK Opt someone out of web push notifications.",
        "tags": [
          "optins"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/optins/web_push?player_id=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://api.directfreight.com/v1/optins/web_push',\n  qs: { player_id: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://api.directfreight.com/v1/optins/web_push\");\n\nreq.query({\n  \"player_id\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"'https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/optins/web_push');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setQueryData(array(\n  'player_id' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/optins/web_push');\n$request->setRequestMethod('DELETE');\n$request->setQuery(new http\\QueryString(array(\n  'player_id' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/optins/web_push?player_id=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/optins/web_push\"\n\nquerystring = {\"player_id\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url 'https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE 'https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "The OneSignal player_id as returned by them when a user subscribes. If this parameter is not provided the API will return true if the User has any player_id subscribed.",
            "in": "query",
            "name": "player_id",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "properties": {
                "subscribed": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        },
        "summary": "STAGE=UNK Check if a users player_id is subscribed to web push notifications.",
        "tags": [
          "optins"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/optins/web_push?player_id=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/optins/web_push',\n  qs: { player_id: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/optins/web_push\");\n\nreq.query({\n  \"player_id\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/optins/web_push');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'player_id' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/optins/web_push');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'player_id' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/optins/web_push?player_id=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/optins/web_push\"\n\nquerystring = {\"player_id\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/optins/web_push?player_id=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "description": "Register a OneSignal player_id in DirectFreight for web push notifications.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "player_id": {
                  "default": "all",
                  "description": "The OneSignal player_id as returned by them when a user subscribes.",
                  "type": "string"
                }
              },
              "required": [
                "player_id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "properties": {
                "subscribed": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        },
        "summary": "STAGE=UNK Register a OneSignal player_id in the DirectFreight database.",
        "tags": [
          "optins"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/optins/web_push\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"player_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/optins/web_push\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"player_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins/web_push\"\n\n\tpayload := strings.NewReader(\"{\\\"player_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"player_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/optins/web_push\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/optins/web_push\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"player_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/optins/web_push\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"player_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"player_id\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/optins/web_push\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/optins/web_push\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ player_id: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/optins/web_push',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: { player_id: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/optins/web_push\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"player_id\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"player_id\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/optins/web_push\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/optins/web_push\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"player_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/optins/web_push\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"player_id\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/optins/web_push\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"player_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/optins/web_push');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"player_id\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"player_id\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/optins/web_push');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"player_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/optins/web_push\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/optins/web_push\"\n\npayload = \"{\\\"player_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/optins/web_push\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"player_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/optins/web_push \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"player_id\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"player_id\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http POST https://api.directfreight.com/v1/optins/web_push \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"player_id\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/optins/web_push"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\"player_id\": \"<ADD EXAMPLE VALUE>\"]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/optins/web_push\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "Optins",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/optins/web_push\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/optins/web_push\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/optins/web_push\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/optins/web_push\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/optins/web_push\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/optins/web_push\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/optins/web_push\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/optins/web_push',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/optins/web_push\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/optins/web_push\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/optins/web_push\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/optins/web_push\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/optins/web_push\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/optins/web_push');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/optins/web_push');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/optins/web_push\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/optins/web_push\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/optins/web_push\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/optins/web_push \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/optins/web_push \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/optins/web_push"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/optins/web_push\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/postings/{posting_type}": {
      "delete": {
        "description": "Will delete one or more entries. Unless the delete_all parameter is set, only 100 entries can be removed per request.",
        "parameters": [
          {
            "description": "Specifies board you are posting to.",
            "enum": [
              "loads",
              "trucks",
              "private_loads",
              "private_trucks",
              "test_loads",
              "test_trucks"
            ],
            "in": "path",
            "name": "posting_type",
            "required": true,
            "type": "string",
            "x-example": "test_loads"
          },
          {
            "description": "This parameter will be ignored if delete_all is specified, otherwise posting_id or custom_id must be specified. The 100 maximum is split between posting_id & custom_id.",
            "in": "query",
            "name": "posting_id",
            "required": false,
            "type": "integer",
            "x-example": "?posting_id=22&posting_id=23&posting_id=24"
          },
          {
            "description": "You must specify which entry to remove. Will be ignored if delete_all is specified, otherwise it or posting_id must be specified. The 100 maximum is split between posting_id & custom_id.",
            "in": "query",
            "name": "custom_id",
            "required": false,
            "type": "string",
            "x-example": "?custom_id=cats&custom_id=dogs&custom_id=parrots"
          },
          {
            "description": "If included and true, will delete all loads for the logged in user.",
            "in": "query",
            "name": "delete_all",
            "required": false,
            "type": "boolean",
            "x-example": "?delete_all=true"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "success operation"
          }
        },
        "summary": "Remove multiple postings",
        "tags": [
          "postings"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D',\n  qs: \n   { posting_id: 'SOME_INTEGER_VALUE',\n     custom_id: 'SOME_STRING_VALUE',\n     delete_all: 'SOME_BOOLEAN_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\");\n\nreq.query({\n  \"posting_id\": \"SOME_INTEGER_VALUE\",\n  \"custom_id\": \"SOME_STRING_VALUE\",\n  \"delete_all\": \"SOME_BOOLEAN_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"'https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setQueryData(array(\n  'posting_id' => 'SOME_INTEGER_VALUE',\n  'custom_id' => 'SOME_STRING_VALUE',\n  'delete_all' => 'SOME_BOOLEAN_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D');\n$request->setRequestMethod('DELETE');\n$request->setQuery(new http\\QueryString(array(\n  'posting_id' => 'SOME_INTEGER_VALUE',\n  'custom_id' => 'SOME_STRING_VALUE',\n  'delete_all' => 'SOME_BOOLEAN_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\"\n\nquerystring = {\"posting_id\":\"SOME_INTEGER_VALUE\",\"custom_id\":\"SOME_STRING_VALUE\",\"delete_all\":\"SOME_BOOLEAN_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_INTEGER_VALUE&custom_id=SOME_STRING_VALUE&delete_all=SOME_BOOLEAN_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "description": "Retrieves a list of the users posted loads or trucks. By default it retrieves all of their entries. If you specifiy multiple ids, only 100 entries can be retrieved per request.",
        "parameters": [
          {
            "description": "Specifies board you are posting to.",
            "enum": [
              "loads",
              "trucks",
              "private_loads",
              "private_trucks",
              "test_loads",
              "test_trucks"
            ],
            "in": "path",
            "name": "posting_type",
            "required": true,
            "type": "string",
            "x-example": "test_loads"
          },
          {
            "collectionFormat": "multi",
            "description": "To retrieve only a subset of entries owned by the user specify one or more posting_id(s) or custom_id(s).",
            "in": "query",
            "items": {
              "type": "integer"
            },
            "name": "posting_id",
            "required": false,
            "type": "array",
            "x-example": "?posting_id=22&posting_id=23&posting_id=24"
          },
          {
            "collectionFormat": "multi",
            "description": "To retrieve only a subset of entries owned by the user specify one or more posting_id(s) or custom_id(s).",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "custom_id",
            "required": false,
            "type": "array",
            "x-example": "?custom_id=cats&custom_id=dogs&custom_id=parrots"
          },
          {
            "collectionFormat": "multi",
            "description": "Only get loads from these department IDs. department_id can also be \"all\", to get loads of all departments under your main account. If no deparment_id is specified, the default is to return just the logged in users' postings.",
            "in": "query",
            "items": {
              "type": "integer"
            },
            "name": "department_id",
            "required": false,
            "type": "array",
            "x-example": "?department_id=22&department_id=23&department_id=24 or department_id=all"
          },
          {
            "description": "STAGE=PRIVATE Internal use only.  Retrieves all postings that match the specified whoentered.",
            "in": "query",
            "name": "whoentered",
            "required": false,
            "type": "string",
            "x-example": "?whoentered=ZZZ"
          },
          {
            "description": "Sort results by a certain field.",
            "enum": [
              "origin_city",
              "origin_state",
              "destination_city",
              "destination_state",
              "trailer_type",
              "load_size",
              "ship_date",
              "receive_date",
              "comment"
            ],
            "in": "query",
            "name": "sort_parameter",
            "required": false,
            "type": "string",
            "x-example": "?sort_parameter=origin_city"
          },
          {
            "description": "The page you want to return. Will return an empty board on an invalid page.",
            "in": "query",
            "name": "page_number",
            "required": false,
            "type": "integer",
            "x-example": "?page_number=2"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/posting_post_response"
            }
          }
        },
        "summary": "Retrieve multiple postings",
        "tags": [
          "postings"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D',\n  qs: \n   { posting_id: 'SOME_ARRAY_VALUE',\n     custom_id: 'SOME_ARRAY_VALUE',\n     department_id: 'SOME_ARRAY_VALUE',\n     whoentered: 'SOME_STRING_VALUE',\n     sort_parameter: 'SOME_STRING_VALUE',\n     page_number: 'SOME_INTEGER_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\");\n\nreq.query({\n  \"posting_id\": \"SOME_ARRAY_VALUE\",\n  \"custom_id\": \"SOME_ARRAY_VALUE\",\n  \"department_id\": \"SOME_ARRAY_VALUE\",\n  \"whoentered\": \"SOME_STRING_VALUE\",\n  \"sort_parameter\": \"SOME_STRING_VALUE\",\n  \"page_number\": \"SOME_INTEGER_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'posting_id' => 'SOME_ARRAY_VALUE',\n  'custom_id' => 'SOME_ARRAY_VALUE',\n  'department_id' => 'SOME_ARRAY_VALUE',\n  'whoentered' => 'SOME_STRING_VALUE',\n  'sort_parameter' => 'SOME_STRING_VALUE',\n  'page_number' => 'SOME_INTEGER_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'posting_id' => 'SOME_ARRAY_VALUE',\n  'custom_id' => 'SOME_ARRAY_VALUE',\n  'department_id' => 'SOME_ARRAY_VALUE',\n  'whoentered' => 'SOME_STRING_VALUE',\n  'sort_parameter' => 'SOME_STRING_VALUE',\n  'page_number' => 'SOME_INTEGER_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\"\n\nquerystring = {\"posting_id\":\"SOME_ARRAY_VALUE\",\"custom_id\":\"SOME_ARRAY_VALUE\",\"department_id\":\"SOME_ARRAY_VALUE\",\"whoentered\":\"SOME_STRING_VALUE\",\"sort_parameter\":\"SOME_STRING_VALUE\",\"page_number\":\"SOME_INTEGER_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE&custom_id=SOME_ARRAY_VALUE&department_id=SOME_ARRAY_VALUE&whoentered=SOME_STRING_VALUE&sort_parameter=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "patch": {
        "description": "Update one or more entries. Only 100 entries can be updated per request.",
        "parameters": [
          {
            "description": "Specifies board you are posting to.",
            "enum": [
              "loads",
              "trucks",
              "private_loads",
              "private_trucks",
              "test_loads",
              "test_trucks"
            ],
            "in": "path",
            "name": "posting_type",
            "required": true,
            "type": "string",
            "x-example": "test_loads"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "$ref": "#/definitions/postings_patch_object"
                  },
                  "maxItems": 100,
                  "type": "array"
                }
              },
              "required": [
                "list"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Status 202",
            "schema": {
              "properties": {
                "list": {
                  "$ref": "#/definitions/postings-post_or_patch_response"
                }
              },
              "required": [
                "list"
              ],
              "type": "object"
            }
          }
        },
        "summary": "Update multiple postings",
        "tags": [
          "postings"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\"\n\n\tpayload := strings.NewReader(\"{}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/%7Bposting_type%7D\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({}));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: {},\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{  };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/postings/%7Bposting_type%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\"\n\npayload = \"{}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://api.directfreight.com/v1/postings/%7Bposting_type%7D \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{}' |  \\\n  http PATCH https://api.directfreight.com/v1/postings/%7Bposting_type%7D \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/postings/%7Bposting_type%7D"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = []\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "description": "Only 100 entries can be created per request.",
        "parameters": [
          {
            "description": "Specifies board you are posting to.",
            "enum": [
              "loads",
              "trucks",
              "private_loads",
              "private_trucks",
              "test_loads",
              "test_trucks"
            ],
            "in": "path",
            "name": "posting_type",
            "required": true,
            "type": "string",
            "x-example": "test_loads"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "list": {
                  "items": {
                    "$ref": "#/definitions/postings_entry_object"
                  },
                  "maxItems": 100,
                  "type": "array"
                }
              },
              "required": [
                "list"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Loads accepted. Check the response for an ordered list of response.",
            "schema": {
              "$ref": "#/definitions/postings-post_or_patch_response"
            }
          }
        },
        "summary": "Create multiple postings",
        "tags": [
          "postings"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\"\n\n\tpayload := strings.NewReader(\"{}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/%7Bposting_type%7D\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({}));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: {},\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{  };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/postings/%7Bposting_type%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\"\n\npayload = \"{}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/postings/%7Bposting_type%7D \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{}' |  \\\n  http POST https://api.directfreight.com/v1/postings/%7Bposting_type%7D \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/postings/%7Bposting_type%7D"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = []\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "POSTINGS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/%7Bposting_type%7D\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/postings/%7Bposting_type%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/postings/%7Bposting_type%7D \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/postings/%7Bposting_type%7D \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/postings/%7Bposting_type%7D"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/postings/{posting_type}/{action}": {
      "post": {
        "parameters": [
          {
            "description": "Where items are being moved or copied to.",
            "enum": [
              "loads",
              "trucks",
              "private_loads",
              "private_trucks",
              "test_loads",
              "test_trucks",
              "olp_network"
            ],
            "in": "path",
            "name": "posting_type",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specified in the url.",
            "enum": [
              "copy",
              "move"
            ],
            "in": "path",
            "name": "action",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/post_posting_type_action_body"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/postings-copy_or_move_response"
            }
          }
        },
        "summary": "STAGE=PRIVATE Copy or Move a posting.",
        "tags": [
          "postings"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"new_load_custom_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"source_id\\\":0,\\\"source_posting\\\":\\\"loads\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"new_load_custom_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"source_id\\\":0,\\\"source_posting\\\":\\\"loads\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"new_load_custom_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"source_id\\\":0,\\\"source_posting\\\":\\\"loads\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"new_load_custom_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"source_id\\\":0,\\\"source_posting\\\":\\\"loads\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"new_load_custom_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"source_id\\\":0,\\\"source_posting\\\":\\\"loads\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"new_load_custom_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"source_id\\\":0,\\\"source_posting\\\":\\\"loads\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"new_load_custom_id\": \"<ADD EXAMPLE VALUE>\",\n  \"source_id\": 0,\n  \"source_posting\": \"loads\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/%7Bposting_type%7D/%7Baction%7D\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ new_load_custom_id: '<ADD EXAMPLE VALUE>',\n  source_id: 0,\n  source_posting: 'loads' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { new_load_custom_id: '<ADD EXAMPLE VALUE>',\n     source_id: 0,\n     source_posting: 'loads' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"new_load_custom_id\": \"<ADD EXAMPLE VALUE>\",\n  \"source_id\": 0,\n  \"source_posting\": \"loads\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"new_load_custom_id\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"source_id\": @0,\n                              @\"source_posting\": @\"loads\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"new_load_custom_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"source_id\\\":0,\\\"source_posting\\\":\\\"loads\\\"}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"new_load_custom_id\":\"<ADD EXAMPLE VALUE>\",\"source_id\":0,\"source_posting\":\"loads\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"new_load_custom_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"source_id\\\":0,\\\"source_posting\\\":\\\"loads\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"new_load_custom_id\":\"<ADD EXAMPLE VALUE>\",\"source_id\":0,\"source_posting\":\"loads\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"new_load_custom_id\":\"<ADD EXAMPLE VALUE>\",\"source_id\":0,\"source_posting\":\"loads\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"new_load_custom_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"source_id\\\":0,\\\"source_posting\\\":\\\"loads\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/postings/%7Bposting_type%7D/%7Baction%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\"\n\npayload = \"{\\\"new_load_custom_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"source_id\\\":0,\\\"source_posting\\\":\\\"loads\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"new_load_custom_id\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"source_id\\\":0,\\\"source_posting\\\":\\\"loads\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"new_load_custom_id\":\"<ADD EXAMPLE VALUE>\",\"source_id\":0,\"source_posting\":\"loads\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"new_load_custom_id\":\"<ADD EXAMPLE VALUE>\",\"source_id\":0,\"source_posting\":\"loads\"}' |  \\\n  http POST https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"new_load_custom_id\":\"<ADD EXAMPLE VALUE>\",\"source_id\":0,\"source_posting\":\"loads\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"new_load_custom_id\": \"<ADD EXAMPLE VALUE>\",\n  \"source_id\": 0,\n  \"source_posting\": \"loads\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "POSTINGS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/%7Bposting_type%7D/%7Baction%7D\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/postings/%7Bposting_type%7D/%7Baction%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/%7Baction%7D\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/postings/{posting_type}/replace_all": {
      "post": {
        "description": "delete and replace all entries in posting_type with the entries in {posting_type}_temp.  For example, if posting_type=loads, then source posting_type is loads_temp.",
        "parameters": [
          {
            "enum": [
              "loads",
              "trucks",
              "test_loads",
              "test_trucks"
            ],
            "in": "path",
            "name": "posting_type",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "description": "If this option is specified and its value is positive, this endpoint will additionaly return the total count of items inserted and deleted, it will also return an erray of the md5sums that were moved.",
            "in": "query",
            "name": "return_details",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "202": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/postings-replace_all_response"
            }
          }
        },
        "summary": "replace_all",
        "tags": [
          "postings"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE\")\n  .post(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all',\n  qs: { return_details: 'SOME_BOOLEAN_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all\");\n\nreq.query({\n  \"return_details\": \"SOME_BOOLEAN_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"'https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData(array(\n  'return_details' => 'SOME_BOOLEAN_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all');\n$request->setRequestMethod('POST');\n$request->setQuery(new http\\QueryString(array(\n  'return_details' => 'SOME_BOOLEAN_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all\"\n\nquerystring = {\"return_details\":\"SOME_BOOLEAN_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http POST 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all?return_details=SOME_BOOLEAN_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "POSTINGS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/%7Bposting_type%7D/replace_all\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/postings/%7Bposting_type%7D/replace_all\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/%7Bposting_type%7D/replace_all\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/postings/custom_fields/data/{posting_type}": {
      "delete": {
        "parameters": [
          {
            "description": "the field_name associated with the data you want deleted.",
            "in": "query",
            "name": "field_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "the posting_id associated with the data you want deleted.",
            "in": "query",
            "name": "posting_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "description": "Valid types are \"loads\", \"trucks\", \"private_loads\", \"private_trucks\", \"test_loads\", and \"test_trucks\"",
            "enum": [
              "test_loads",
              "test_trucks",
              "private_loads",
              "private_trucks",
              "loads",
              "trucks"
            ],
            "in": "path",
            "name": "posting_type",
            "required": true,
            "type": "string",
            "x-example": "test_loads"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "STAGE=UNK Delete data from a custom field.",
        "tags": [
          "postings/custom_fields"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D',\n  qs: \n   { field_name: 'SOME_STRING_VALUE',\n     posting_id: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\");\n\nreq.query({\n  \"field_name\": \"SOME_STRING_VALUE\",\n  \"posting_id\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"'https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setQueryData(array(\n  'field_name' => 'SOME_STRING_VALUE',\n  'posting_id' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D');\n$request->setRequestMethod('DELETE');\n$request->setQuery(new http\\QueryString(array(\n  'field_name' => 'SOME_STRING_VALUE',\n  'posting_id' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\"\n\nquerystring = {\"field_name\":\"SOME_STRING_VALUE\",\"posting_id\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url 'https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE 'https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?field_name=SOME_STRING_VALUE&posting_id=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "the posting_ids associated with the data you want to get.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "posting_id",
            "required": false,
            "type": "array",
            "x-example": "?posting_id=22&posting_id=23&posting_id=24"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "description": "Valid types are \"loads\", \"trucks\", \"private_loads\", \"private_trucks\", \"test_loads\", and \"test_trucks\"",
            "enum": [
              "test_loads",
              "test_trucks",
              "private_loads",
              "private_trucks",
              "loads",
              "trucks"
            ],
            "in": "path",
            "name": "posting_type",
            "required": true,
            "type": "string",
            "x-example": "test_loads"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/get_custom_fields_data_response"
            }
          }
        },
        "summary": "STAGE=UNK Get data for a custom field.",
        "tags": [
          "postings/custom_fields"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D',\n  qs: { posting_id: 'SOME_ARRAY_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\");\n\nreq.query({\n  \"posting_id\": \"SOME_ARRAY_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'posting_id' => 'SOME_ARRAY_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'posting_id' => 'SOME_ARRAY_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\"\n\nquerystring = {\"posting_id\":\"SOME_ARRAY_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D?posting_id=SOME_ARRAY_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "patch": {
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create_custom_field_data"
            }
          },
          {
            "description": "Valid types are \"loads\", \"trucks\", \"private_loads\", \"private_trucks\", \"test_loads\", and \"test_trucks\"",
            "enum": [
              "test_loads",
              "test_trucks",
              "private_loads",
              "private_trucks",
              "loads",
              "trucks"
            ],
            "in": "path",
            "name": "posting_type",
            "required": true,
            "type": "string",
            "x-example": "test_loads"
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          }
        },
        "summary": "STAGE=UNK Update custom field data.",
        "tags": [
          "postings/custom_fields"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"field_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"posting_id\\\":0,\\\"value\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"field_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"posting_id\\\":0,\\\"value\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"field_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"posting_id\\\":0,\\\"value\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"field_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"posting_id\\\":0,\\\"value\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"field_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"posting_id\\\":0,\\\"value\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"field_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"posting_id\\\":0,\\\"value\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"field_name\": \"<ADD EXAMPLE VALUE>\",\n  \"posting_id\": 0,\n  \"value\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/custom_fields/data/%7Bposting_type%7D\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ field_name: '<ADD EXAMPLE VALUE>',\n  posting_id: 0,\n  value: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { field_name: '<ADD EXAMPLE VALUE>',\n     posting_id: 0,\n     value: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"field_name\": \"<ADD EXAMPLE VALUE>\",\n  \"posting_id\": 0,\n  \"value\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"field_name\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"posting_id\": @0,\n                              @\"value\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"field_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"posting_id\\\":0,\\\"value\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"field_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"posting_id\\\":0,\\\"value\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"field_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"posting_id\\\":0,\\\"value\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/postings/custom_fields/data/%7Bposting_type%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\"\n\npayload = \"{\\\"field_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"posting_id\\\":0,\\\"value\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"field_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"posting_id\\\":0,\\\"value\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http PATCH https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"field_name\": \"<ADD EXAMPLE VALUE>\",\n  \"posting_id\": 0,\n  \"value\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create_custom_field_data"
            }
          },
          {
            "description": "Valid types are \"loads\", \"trucks\", \"private_loads\", \"private_trucks\", \"test_loads\", and \"test_trucks\"",
            "enum": [
              "test_loads",
              "test_trucks",
              "private_loads",
              "private_trucks",
              "loads",
              "trucks"
            ],
            "in": "path",
            "name": "posting_type",
            "required": true,
            "type": "string",
            "x-example": "test_loads"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/object_created"
          }
        },
        "summary": "STAGE=UNK add new data.",
        "tags": [
          "postings/custom_fields"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"field_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"posting_id\\\":0,\\\"value\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"field_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"posting_id\\\":0,\\\"value\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"field_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"posting_id\\\":0,\\\"value\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"field_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"posting_id\\\":0,\\\"value\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"field_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"posting_id\\\":0,\\\"value\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"field_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"posting_id\\\":0,\\\"value\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"field_name\": \"<ADD EXAMPLE VALUE>\",\n  \"posting_id\": 0,\n  \"value\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/custom_fields/data/%7Bposting_type%7D\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ field_name: '<ADD EXAMPLE VALUE>',\n  posting_id: 0,\n  value: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { field_name: '<ADD EXAMPLE VALUE>',\n     posting_id: 0,\n     value: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"field_name\": \"<ADD EXAMPLE VALUE>\",\n  \"posting_id\": 0,\n  \"value\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"field_name\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"posting_id\": @0,\n                              @\"value\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"field_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"posting_id\\\":0,\\\"value\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"field_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"posting_id\\\":0,\\\"value\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"field_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"posting_id\\\":0,\\\"value\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/postings/custom_fields/data/%7Bposting_type%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\"\n\npayload = \"{\\\"field_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"posting_id\\\":0,\\\"value\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"field_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"posting_id\\\":0,\\\"value\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http POST https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"field_name\":\"<ADD EXAMPLE VALUE>\",\"posting_id\":0,\"value\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"field_name\": \"<ADD EXAMPLE VALUE>\",\n  \"posting_id\": 0,\n  \"value\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "POSTINGS/CUSTOM_FIELDS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/custom_fields/data/%7Bposting_type%7D\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/postings/custom_fields/data/%7Bposting_type%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/custom_fields/data/%7Bposting_type%7D\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/postings/custom_fields/names/": {
      "delete": {
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "description": "column/field that you want deleted",
            "in": "query",
            "name": "field_name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "STAGE=UNK Delete a custom column/field",
        "tags": [
          "postings/custom_fields"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://api.directfreight.com/v1/postings/custom_fields/names/',\n  qs: { field_name: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://api.directfreight.com/v1/postings/custom_fields/names/\");\n\nreq.query({\n  \"field_name\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"'https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/custom_fields/names/');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setQueryData(array(\n  'field_name' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/custom_fields/names/');\n$request->setRequestMethod('DELETE');\n$request->setQuery(new http\\QueryString(array(\n  'field_name' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/custom_fields/names/\"\n\nquerystring = {\"field_name\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url 'https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE 'https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/custom_fields/names/?field_name=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/get_custom_fields_name_response"
            }
          }
        },
        "summary": "STAGE=UNK Get a list of all defined custom fields/columns.",
        "tags": [
          "postings/custom_fields"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/custom_fields/names/\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/postings/custom_fields/names/\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/custom_fields/names/\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/custom_fields/names/\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/postings/custom_fields/names/\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/custom_fields/names/\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/postings/custom_fields/names/\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/custom_fields/names/\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/postings/custom_fields/names/',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/postings/custom_fields/names/\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/custom_fields/names/\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/custom_fields/names/\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"https://api.directfreight.com/v1/postings/custom_fields/names/\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/custom_fields/names/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/custom_fields/names/');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/custom_fields/names/');\n$request->setRequestMethod('GET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/postings/custom_fields/names/\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/custom_fields/names/\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/postings/custom_fields/names/\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url https://api.directfreight.com/v1/postings/custom_fields/names/ \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET https://api.directfreight.com/v1/postings/custom_fields/names/ \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/postings/custom_fields/names/"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/custom_fields/names/\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "patch": {
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rename_custom_field"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          }
        },
        "summary": "STAGE=UNK Rename a custom field/column.",
        "tags": [
          "postings/custom_fields"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/custom_fields/names/\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/postings/custom_fields/names/\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/custom_fields/names/\"\n\n\tpayload := strings.NewReader(\"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/custom_fields/names/\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://api.directfreight.com/v1/postings/custom_fields/names/\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/custom_fields/names/\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"current_name\": \"<ADD EXAMPLE VALUE>\",\n  \"new_name\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://api.directfreight.com/v1/postings/custom_fields/names/\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/custom_fields/names/\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ current_name: '<ADD EXAMPLE VALUE>',\n  new_name: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://api.directfreight.com/v1/postings/custom_fields/names/',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { current_name: '<ADD EXAMPLE VALUE>',\n     new_name: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://api.directfreight.com/v1/postings/custom_fields/names/\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"current_name\": \"<ADD EXAMPLE VALUE>\",\n  \"new_name\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"current_name\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"new_name\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/custom_fields/names/\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/custom_fields/names/\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://api.directfreight.com/v1/postings/custom_fields/names/\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/custom_fields/names/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/custom_fields/names/');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/custom_fields/names/');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/postings/custom_fields/names/\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/custom_fields/names/\"\n\npayload = \"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/postings/custom_fields/names/\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://api.directfreight.com/v1/postings/custom_fields/names/ \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http PATCH https://api.directfreight.com/v1/postings/custom_fields/names/ \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/postings/custom_fields/names/"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"current_name\": \"<ADD EXAMPLE VALUE>\",\n  \"new_name\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/custom_fields/names/\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create_custom_field"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/object_created"
          }
        },
        "summary": "STAGE=UNK Create new custom field/column.",
        "tags": [
          "postings/custom_fields"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/custom_fields/names/\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/postings/custom_fields/names/\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/custom_fields/names/\"\n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/custom_fields/names/\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/postings/custom_fields/names/\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/custom_fields/names/\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"name\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/postings/custom_fields/names/\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/custom_fields/names/\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ name: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/postings/custom_fields/names/',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: { name: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/postings/custom_fields/names/\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"name\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"name\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/custom_fields/names/\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/custom_fields/names/\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/postings/custom_fields/names/\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"name\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/custom_fields/names/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/custom_fields/names/');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"name\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"name\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/custom_fields/names/');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/postings/custom_fields/names/\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/custom_fields/names/\"\n\npayload = \"{\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/postings/custom_fields/names/\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/postings/custom_fields/names/ \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"name\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"name\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http POST https://api.directfreight.com/v1/postings/custom_fields/names/ \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"name\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/postings/custom_fields/names/"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\"name\": \"<ADD EXAMPLE VALUE>\"]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/custom_fields/names/\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "POSTINGS/CUSTOM_FIELDS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/postings/custom_fields/names/\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/postings/custom_fields/names/\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/postings/custom_fields/names/\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/postings/custom_fields/names/\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/postings/custom_fields/names/\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/postings/custom_fields/names/\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/postings/custom_fields/names/\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/postings/custom_fields/names/',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/postings/custom_fields/names/\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/postings/custom_fields/names/\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/postings/custom_fields/names/\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/postings/custom_fields/names/\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/postings/custom_fields/names/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/postings/custom_fields/names/');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/postings/custom_fields/names/');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/postings/custom_fields/names/\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/postings/custom_fields/names/\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/postings/custom_fields/names/\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/postings/custom_fields/names/ \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/postings/custom_fields/names/ \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/postings/custom_fields/names/"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/postings/custom_fields/names/\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/profiles": {
      "delete": {
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "success operation"
          }
        },
        "summary": "STAGE=UNK Delete the profile.",
        "tags": [
          "profiles"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/profiles\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/profiles\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/profiles\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://api.directfreight.com/v1/profiles\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/profiles\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.directfreight.com/v1/profiles\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://api.directfreight.com/v1/profiles',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://api.directfreight.com/v1/profiles\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/profiles\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/profiles\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"https://api.directfreight.com/v1/profiles\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/profiles\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/profiles');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/profiles');\n$request->setRequestMethod('DELETE');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/profiles\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/profiles\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/profiles\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url https://api.directfreight.com/v1/profiles \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE https://api.directfreight.com/v1/profiles \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/profiles"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/profiles\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/profile_object"
            }
          }
        },
        "summary": "Request the logged in user's profile.",
        "tags": [
          "profiles"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/profiles\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/profiles\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/profiles\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/profiles\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/profiles\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/profiles\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/profiles',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/profiles\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/profiles\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/profiles\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"https://api.directfreight.com/v1/profiles\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/profiles\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/profiles');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/profiles');\n$request->setRequestMethod('GET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/profiles\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/profiles\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/profiles\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url https://api.directfreight.com/v1/profiles \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET https://api.directfreight.com/v1/profiles \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/profiles"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/profiles\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "patch": {
        "description": "Please send in at least one field to be updated.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/profile_object_patch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/profile_object_patch"
            }
          }
        },
        "summary": "Update profile information.",
        "tags": [
          "profiles"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/profiles\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_onboard_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_terms_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":0,\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/profiles\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_onboard_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_terms_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":0,\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles\"\n\n\tpayload := strings.NewReader(\"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_onboard_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_terms_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":0,\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_onboard_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_terms_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":0,\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/profiles\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://api.directfreight.com/v1/profiles\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_onboard_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_terms_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":0,\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/profiles\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_onboard_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_terms_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":0,\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"address\": \"<ADD EXAMPLE VALUE>\",\n  \"carrier_onboard_url\": \"<ADD EXAMPLE VALUE>\",\n  \"carrier_terms_url\": \"<ADD EXAMPLE VALUE>\",\n  \"city\": \"<ADD EXAMPLE VALUE>\",\n  \"company\": \"<ADD EXAMPLE VALUE>\",\n  \"contact_extension\": 0,\n  \"contact_name\": \"<ADD EXAMPLE VALUE>\",\n  \"contact_number\": 0,\n  \"dispatch_extension\": 0,\n  \"dispatch_number\": 0,\n  \"dot_number\": 0,\n  \"email\": \"<ADD EXAMPLE VALUE>\",\n  \"fax_number\": 0,\n  \"mc_number\": \"<ADD EXAMPLE VALUE>\",\n  \"mobile_carrier\": \"Other/Unknown\",\n  \"mobile_number\": 0,\n  \"state\": \"<ADD EXAMPLE VALUE>\",\n  \"web_page\": \"<ADD EXAMPLE VALUE>\",\n  \"zip\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://api.directfreight.com/v1/profiles\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ address: '<ADD EXAMPLE VALUE>',\n  carrier_onboard_url: '<ADD EXAMPLE VALUE>',\n  carrier_terms_url: '<ADD EXAMPLE VALUE>',\n  city: '<ADD EXAMPLE VALUE>',\n  company: '<ADD EXAMPLE VALUE>',\n  contact_extension: 0,\n  contact_name: '<ADD EXAMPLE VALUE>',\n  contact_number: 0,\n  dispatch_extension: 0,\n  dispatch_number: 0,\n  dot_number: 0,\n  email: '<ADD EXAMPLE VALUE>',\n  fax_number: 0,\n  mc_number: '<ADD EXAMPLE VALUE>',\n  mobile_carrier: 'Other/Unknown',\n  mobile_number: 0,\n  state: '<ADD EXAMPLE VALUE>',\n  web_page: '<ADD EXAMPLE VALUE>',\n  zip: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://api.directfreight.com/v1/profiles',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { address: '<ADD EXAMPLE VALUE>',\n     carrier_onboard_url: '<ADD EXAMPLE VALUE>',\n     carrier_terms_url: '<ADD EXAMPLE VALUE>',\n     city: '<ADD EXAMPLE VALUE>',\n     company: '<ADD EXAMPLE VALUE>',\n     contact_extension: 0,\n     contact_name: '<ADD EXAMPLE VALUE>',\n     contact_number: 0,\n     dispatch_extension: 0,\n     dispatch_number: 0,\n     dot_number: 0,\n     email: '<ADD EXAMPLE VALUE>',\n     fax_number: 0,\n     mc_number: '<ADD EXAMPLE VALUE>',\n     mobile_carrier: 'Other/Unknown',\n     mobile_number: 0,\n     state: '<ADD EXAMPLE VALUE>',\n     web_page: '<ADD EXAMPLE VALUE>',\n     zip: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://api.directfreight.com/v1/profiles\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"address\": \"<ADD EXAMPLE VALUE>\",\n  \"carrier_onboard_url\": \"<ADD EXAMPLE VALUE>\",\n  \"carrier_terms_url\": \"<ADD EXAMPLE VALUE>\",\n  \"city\": \"<ADD EXAMPLE VALUE>\",\n  \"company\": \"<ADD EXAMPLE VALUE>\",\n  \"contact_extension\": 0,\n  \"contact_name\": \"<ADD EXAMPLE VALUE>\",\n  \"contact_number\": 0,\n  \"dispatch_extension\": 0,\n  \"dispatch_number\": 0,\n  \"dot_number\": 0,\n  \"email\": \"<ADD EXAMPLE VALUE>\",\n  \"fax_number\": 0,\n  \"mc_number\": \"<ADD EXAMPLE VALUE>\",\n  \"mobile_carrier\": \"Other/Unknown\",\n  \"mobile_number\": 0,\n  \"state\": \"<ADD EXAMPLE VALUE>\",\n  \"web_page\": \"<ADD EXAMPLE VALUE>\",\n  \"zip\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"address\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"carrier_onboard_url\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"carrier_terms_url\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"city\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"company\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"contact_extension\": @0,\n                              @\"contact_name\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"contact_number\": @0,\n                              @\"dispatch_extension\": @0,\n                              @\"dispatch_number\": @0,\n                              @\"dot_number\": @0,\n                              @\"email\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"fax_number\": @0,\n                              @\"mc_number\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"mobile_carrier\": @\"Other/Unknown\",\n                              @\"mobile_number\": @0,\n                              @\"state\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"web_page\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"zip\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/profiles\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/profiles\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_onboard_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_terms_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":0,\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://api.directfreight.com/v1/profiles\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"email\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/profiles\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_onboard_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_terms_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":0,\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/profiles');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"email\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"email\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/profiles');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_onboard_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_terms_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":0,\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/profiles\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/profiles\"\n\npayload = \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_onboard_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_terms_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":0,\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/profiles\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_onboard_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_terms_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":0,\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"fax_number\\\":0,\\\"mc_number\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://api.directfreight.com/v1/profiles \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"email\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"email\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http PATCH https://api.directfreight.com/v1/profiles \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"email\":\"<ADD EXAMPLE VALUE>\",\"fax_number\":0,\"mc_number\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/profiles"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"address\": \"<ADD EXAMPLE VALUE>\",\n  \"carrier_onboard_url\": \"<ADD EXAMPLE VALUE>\",\n  \"carrier_terms_url\": \"<ADD EXAMPLE VALUE>\",\n  \"city\": \"<ADD EXAMPLE VALUE>\",\n  \"company\": \"<ADD EXAMPLE VALUE>\",\n  \"contact_extension\": 0,\n  \"contact_name\": \"<ADD EXAMPLE VALUE>\",\n  \"contact_number\": 0,\n  \"dispatch_extension\": 0,\n  \"dispatch_number\": 0,\n  \"dot_number\": 0,\n  \"email\": \"<ADD EXAMPLE VALUE>\",\n  \"fax_number\": 0,\n  \"mc_number\": \"<ADD EXAMPLE VALUE>\",\n  \"mobile_carrier\": \"Other/Unknown\",\n  \"mobile_number\": 0,\n  \"state\": \"<ADD EXAMPLE VALUE>\",\n  \"web_page\": \"<ADD EXAMPLE VALUE>\",\n  \"zip\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/profiles\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/profile_object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/profile_object_patch"
            }
          }
        },
        "summary": "Create a new profile.",
        "tags": [
          "profiles"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/profiles\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_onboard_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_terms_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":0,\\\"driver_per_mile\\\":0,\\\"fax_number\\\":0,\\\"fuel_capacity\\\":0,\\\"ins_permits_per_mile\\\":0,\\\"maint_per_mile\\\":0,\\\"mc_number\\\":0,\\\"miles_per_gal\\\":0,\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"truck_ownership_per_mile\\\":0,\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/profiles\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_onboard_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_terms_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":0,\\\"driver_per_mile\\\":0,\\\"fax_number\\\":0,\\\"fuel_capacity\\\":0,\\\"ins_permits_per_mile\\\":0,\\\"maint_per_mile\\\":0,\\\"mc_number\\\":0,\\\"miles_per_gal\\\":0,\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"truck_ownership_per_mile\\\":0,\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles\"\n\n\tpayload := strings.NewReader(\"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_onboard_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_terms_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":0,\\\"driver_per_mile\\\":0,\\\"fax_number\\\":0,\\\"fuel_capacity\\\":0,\\\"ins_permits_per_mile\\\":0,\\\"maint_per_mile\\\":0,\\\"mc_number\\\":0,\\\"miles_per_gal\\\":0,\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"truck_ownership_per_mile\\\":0,\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_onboard_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_terms_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":0,\\\"driver_per_mile\\\":0,\\\"fax_number\\\":0,\\\"fuel_capacity\\\":0,\\\"ins_permits_per_mile\\\":0,\\\"maint_per_mile\\\":0,\\\"mc_number\\\":0,\\\"miles_per_gal\\\":0,\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"truck_ownership_per_mile\\\":0,\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/profiles\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/profiles\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_onboard_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_terms_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":0,\\\"driver_per_mile\\\":0,\\\"fax_number\\\":0,\\\"fuel_capacity\\\":0,\\\"ins_permits_per_mile\\\":0,\\\"maint_per_mile\\\":0,\\\"mc_number\\\":0,\\\"miles_per_gal\\\":0,\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"truck_ownership_per_mile\\\":0,\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/profiles\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_onboard_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_terms_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":0,\\\"driver_per_mile\\\":0,\\\"fax_number\\\":0,\\\"fuel_capacity\\\":0,\\\"ins_permits_per_mile\\\":0,\\\"maint_per_mile\\\":0,\\\"mc_number\\\":0,\\\"miles_per_gal\\\":0,\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"truck_ownership_per_mile\\\":0,\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"address\": \"<ADD EXAMPLE VALUE>\",\n  \"carrier_onboard_url\": \"<ADD EXAMPLE VALUE>\",\n  \"carrier_terms_url\": \"<ADD EXAMPLE VALUE>\",\n  \"city\": \"<ADD EXAMPLE VALUE>\",\n  \"company\": \"<ADD EXAMPLE VALUE>\",\n  \"contact_extension\": 0,\n  \"contact_name\": \"<ADD EXAMPLE VALUE>\",\n  \"contact_number\": 0,\n  \"dispatch_extension\": 0,\n  \"dispatch_number\": 0,\n  \"dot_number\": 0,\n  \"driver_per_mile\": 0,\n  \"fax_number\": 0,\n  \"fuel_capacity\": 0,\n  \"ins_permits_per_mile\": 0,\n  \"maint_per_mile\": 0,\n  \"mc_number\": 0,\n  \"miles_per_gal\": 0,\n  \"mobile_carrier\": \"Other/Unknown\",\n  \"mobile_number\": 0,\n  \"state\": \"<ADD EXAMPLE VALUE>\",\n  \"truck_ownership_per_mile\": 0,\n  \"web_page\": \"<ADD EXAMPLE VALUE>\",\n  \"zip\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/profiles\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ address: '<ADD EXAMPLE VALUE>',\n  carrier_onboard_url: '<ADD EXAMPLE VALUE>',\n  carrier_terms_url: '<ADD EXAMPLE VALUE>',\n  city: '<ADD EXAMPLE VALUE>',\n  company: '<ADD EXAMPLE VALUE>',\n  contact_extension: 0,\n  contact_name: '<ADD EXAMPLE VALUE>',\n  contact_number: 0,\n  dispatch_extension: 0,\n  dispatch_number: 0,\n  dot_number: 0,\n  driver_per_mile: 0,\n  fax_number: 0,\n  fuel_capacity: 0,\n  ins_permits_per_mile: 0,\n  maint_per_mile: 0,\n  mc_number: 0,\n  miles_per_gal: 0,\n  mobile_carrier: 'Other/Unknown',\n  mobile_number: 0,\n  state: '<ADD EXAMPLE VALUE>',\n  truck_ownership_per_mile: 0,\n  web_page: '<ADD EXAMPLE VALUE>',\n  zip: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/profiles',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { address: '<ADD EXAMPLE VALUE>',\n     carrier_onboard_url: '<ADD EXAMPLE VALUE>',\n     carrier_terms_url: '<ADD EXAMPLE VALUE>',\n     city: '<ADD EXAMPLE VALUE>',\n     company: '<ADD EXAMPLE VALUE>',\n     contact_extension: 0,\n     contact_name: '<ADD EXAMPLE VALUE>',\n     contact_number: 0,\n     dispatch_extension: 0,\n     dispatch_number: 0,\n     dot_number: 0,\n     driver_per_mile: 0,\n     fax_number: 0,\n     fuel_capacity: 0,\n     ins_permits_per_mile: 0,\n     maint_per_mile: 0,\n     mc_number: 0,\n     miles_per_gal: 0,\n     mobile_carrier: 'Other/Unknown',\n     mobile_number: 0,\n     state: '<ADD EXAMPLE VALUE>',\n     truck_ownership_per_mile: 0,\n     web_page: '<ADD EXAMPLE VALUE>',\n     zip: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/profiles\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"address\": \"<ADD EXAMPLE VALUE>\",\n  \"carrier_onboard_url\": \"<ADD EXAMPLE VALUE>\",\n  \"carrier_terms_url\": \"<ADD EXAMPLE VALUE>\",\n  \"city\": \"<ADD EXAMPLE VALUE>\",\n  \"company\": \"<ADD EXAMPLE VALUE>\",\n  \"contact_extension\": 0,\n  \"contact_name\": \"<ADD EXAMPLE VALUE>\",\n  \"contact_number\": 0,\n  \"dispatch_extension\": 0,\n  \"dispatch_number\": 0,\n  \"dot_number\": 0,\n  \"driver_per_mile\": 0,\n  \"fax_number\": 0,\n  \"fuel_capacity\": 0,\n  \"ins_permits_per_mile\": 0,\n  \"maint_per_mile\": 0,\n  \"mc_number\": 0,\n  \"miles_per_gal\": 0,\n  \"mobile_carrier\": \"Other/Unknown\",\n  \"mobile_number\": 0,\n  \"state\": \"<ADD EXAMPLE VALUE>\",\n  \"truck_ownership_per_mile\": 0,\n  \"web_page\": \"<ADD EXAMPLE VALUE>\",\n  \"zip\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"address\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"carrier_onboard_url\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"carrier_terms_url\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"city\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"company\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"contact_extension\": @0,\n                              @\"contact_name\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"contact_number\": @0,\n                              @\"dispatch_extension\": @0,\n                              @\"dispatch_number\": @0,\n                              @\"dot_number\": @0,\n                              @\"driver_per_mile\": @0,\n                              @\"fax_number\": @0,\n                              @\"fuel_capacity\": @0,\n                              @\"ins_permits_per_mile\": @0,\n                              @\"maint_per_mile\": @0,\n                              @\"mc_number\": @0,\n                              @\"miles_per_gal\": @0,\n                              @\"mobile_carrier\": @\"Other/Unknown\",\n                              @\"mobile_number\": @0,\n                              @\"state\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"truck_ownership_per_mile\": @0,\n                              @\"web_page\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"zip\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/profiles\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/profiles\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_onboard_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_terms_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":0,\\\"driver_per_mile\\\":0,\\\"fax_number\\\":0,\\\"fuel_capacity\\\":0,\\\"ins_permits_per_mile\\\":0,\\\"maint_per_mile\\\":0,\\\"mc_number\\\":0,\\\"miles_per_gal\\\":0,\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"truck_ownership_per_mile\\\":0,\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/profiles\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"driver_per_mile\":0,\"fax_number\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"mc_number\":0,\"miles_per_gal\":0,\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"truck_ownership_per_mile\":0,\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/profiles\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_onboard_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_terms_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":0,\\\"driver_per_mile\\\":0,\\\"fax_number\\\":0,\\\"fuel_capacity\\\":0,\\\"ins_permits_per_mile\\\":0,\\\"maint_per_mile\\\":0,\\\"mc_number\\\":0,\\\"miles_per_gal\\\":0,\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"truck_ownership_per_mile\\\":0,\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/profiles');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"driver_per_mile\":0,\"fax_number\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"mc_number\":0,\"miles_per_gal\":0,\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"truck_ownership_per_mile\":0,\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"driver_per_mile\":0,\"fax_number\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"mc_number\":0,\"miles_per_gal\":0,\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"truck_ownership_per_mile\":0,\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/profiles');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_onboard_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_terms_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":0,\\\"driver_per_mile\\\":0,\\\"fax_number\\\":0,\\\"fuel_capacity\\\":0,\\\"ins_permits_per_mile\\\":0,\\\"maint_per_mile\\\":0,\\\"mc_number\\\":0,\\\"miles_per_gal\\\":0,\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"truck_ownership_per_mile\\\":0,\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/profiles\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/profiles\"\n\npayload = \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_onboard_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_terms_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":0,\\\"driver_per_mile\\\":0,\\\"fax_number\\\":0,\\\"fuel_capacity\\\":0,\\\"ins_permits_per_mile\\\":0,\\\"maint_per_mile\\\":0,\\\"mc_number\\\":0,\\\"miles_per_gal\\\":0,\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"truck_ownership_per_mile\\\":0,\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/profiles\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_onboard_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"carrier_terms_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_number\\\":0,\\\"dispatch_extension\\\":0,\\\"dispatch_number\\\":0,\\\"dot_number\\\":0,\\\"driver_per_mile\\\":0,\\\"fax_number\\\":0,\\\"fuel_capacity\\\":0,\\\"ins_permits_per_mile\\\":0,\\\"maint_per_mile\\\":0,\\\"mc_number\\\":0,\\\"miles_per_gal\\\":0,\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"truck_ownership_per_mile\\\":0,\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/profiles \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"driver_per_mile\":0,\"fax_number\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"mc_number\":0,\"miles_per_gal\":0,\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"truck_ownership_per_mile\":0,\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"driver_per_mile\":0,\"fax_number\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"mc_number\":0,\"miles_per_gal\":0,\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"truck_ownership_per_mile\":0,\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http POST https://api.directfreight.com/v1/profiles \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"address\":\"<ADD EXAMPLE VALUE>\",\"carrier_onboard_url\":\"<ADD EXAMPLE VALUE>\",\"carrier_terms_url\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_name\":\"<ADD EXAMPLE VALUE>\",\"contact_number\":0,\"dispatch_extension\":0,\"dispatch_number\":0,\"dot_number\":0,\"driver_per_mile\":0,\"fax_number\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"mc_number\":0,\"miles_per_gal\":0,\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"truck_ownership_per_mile\":0,\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/profiles"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"address\": \"<ADD EXAMPLE VALUE>\",\n  \"carrier_onboard_url\": \"<ADD EXAMPLE VALUE>\",\n  \"carrier_terms_url\": \"<ADD EXAMPLE VALUE>\",\n  \"city\": \"<ADD EXAMPLE VALUE>\",\n  \"company\": \"<ADD EXAMPLE VALUE>\",\n  \"contact_extension\": 0,\n  \"contact_name\": \"<ADD EXAMPLE VALUE>\",\n  \"contact_number\": 0,\n  \"dispatch_extension\": 0,\n  \"dispatch_number\": 0,\n  \"dot_number\": 0,\n  \"driver_per_mile\": 0,\n  \"fax_number\": 0,\n  \"fuel_capacity\": 0,\n  \"ins_permits_per_mile\": 0,\n  \"maint_per_mile\": 0,\n  \"mc_number\": 0,\n  \"miles_per_gal\": 0,\n  \"mobile_carrier\": \"Other/Unknown\",\n  \"mobile_number\": 0,\n  \"state\": \"<ADD EXAMPLE VALUE>\",\n  \"truck_ownership_per_mile\": 0,\n  \"web_page\": \"<ADD EXAMPLE VALUE>\",\n  \"zip\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/profiles\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "PROFILES",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/profiles\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/profiles\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/profiles\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/profiles\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/profiles\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/profiles',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/profiles\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/profiles\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/profiles\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/profiles\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/profiles\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/profiles');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/profiles');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/profiles\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/profiles\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/profiles\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/profiles \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/profiles \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/profiles"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/profiles\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/profiles/documents": {
      "delete": {
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "success operation"
          }
        },
        "summary": "STAGE=UNK Delete the document.",
        "tags": [
          "profiles"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/profiles/documents\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/profiles/documents\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/documents\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/profiles/documents\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://api.directfreight.com/v1/profiles/documents\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/profiles/documents\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://api.directfreight.com/v1/profiles/documents\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles/documents\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://api.directfreight.com/v1/profiles/documents',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://api.directfreight.com/v1/profiles/documents\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/profiles/documents\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/profiles/documents\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"https://api.directfreight.com/v1/profiles/documents\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/profiles/documents\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/profiles/documents');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/profiles/documents');\n$request->setRequestMethod('DELETE');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/profiles/documents\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/profiles/documents\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/profiles/documents\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url https://api.directfreight.com/v1/profiles/documents \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE https://api.directfreight.com/v1/profiles/documents \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/profiles/documents"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/profiles/documents\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "description": "Retrieve documents",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        },
        "summary": "STAGE=UNK Retrieve documents",
        "tags": [
          "profiles"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/profiles/documents\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/profiles/documents\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/documents\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/profiles/documents\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/profiles/documents\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/profiles/documents\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/profiles/documents\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles/documents\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/profiles/documents',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/profiles/documents\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/profiles/documents\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/profiles/documents\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"https://api.directfreight.com/v1/profiles/documents\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/profiles/documents\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/profiles/documents');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/profiles/documents');\n$request->setRequestMethod('GET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/profiles/documents\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/profiles/documents\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/profiles/documents\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url https://api.directfreight.com/v1/profiles/documents \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET https://api.directfreight.com/v1/profiles/documents \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/profiles/documents"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/profiles/documents\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "patch": {
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rename_document"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          }
        },
        "summary": "STAGE=UNK Rename a document.",
        "tags": [
          "profiles"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/profiles/documents\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/profiles/documents\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/documents\"\n\n\tpayload := strings.NewReader(\"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/profiles/documents\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://api.directfreight.com/v1/profiles/documents\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/profiles/documents\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"current_name\": \"<ADD EXAMPLE VALUE>\",\n  \"new_name\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://api.directfreight.com/v1/profiles/documents\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles/documents\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ current_name: '<ADD EXAMPLE VALUE>',\n  new_name: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://api.directfreight.com/v1/profiles/documents',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { current_name: '<ADD EXAMPLE VALUE>',\n     new_name: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://api.directfreight.com/v1/profiles/documents\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"current_name\": \"<ADD EXAMPLE VALUE>\",\n  \"new_name\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"current_name\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"new_name\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/profiles/documents\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/profiles/documents\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://api.directfreight.com/v1/profiles/documents\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/profiles/documents\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/profiles/documents');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/profiles/documents');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/profiles/documents\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/profiles/documents\"\n\npayload = \"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/profiles/documents\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"current_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"new_name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://api.directfreight.com/v1/profiles/documents \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http PATCH https://api.directfreight.com/v1/profiles/documents \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"current_name\":\"<ADD EXAMPLE VALUE>\",\"new_name\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/profiles/documents"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"current_name\": \"<ADD EXAMPLE VALUE>\",\n  \"new_name\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/profiles/documents\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/upload_document"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/object_created"
          }
        },
        "summary": "STAGE=UNK Upload a new document.",
        "tags": [
          "profiles"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/profiles/documents\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"filename\\\":{}}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/profiles/documents\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"filename\\\":{}}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/documents\"\n\n\tpayload := strings.NewReader(\"{\\\"filename\\\":{}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"filename\\\":{}}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/profiles/documents\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/profiles/documents\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"filename\\\":{}}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/profiles/documents\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"filename\\\":{}}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"filename\": {}\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/profiles/documents\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles/documents\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ filename: {} }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/profiles/documents',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: { filename: {} },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/profiles/documents\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"filename\": {}\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"filename\": @{  } };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/profiles/documents\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/profiles/documents\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"filename\\\":{}}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/profiles/documents\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"filename\":{}}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/profiles/documents\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"filename\\\":{}}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/profiles/documents');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"filename\":{}}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"filename\":{}}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/profiles/documents');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"filename\\\":{}}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/profiles/documents\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/profiles/documents\"\n\npayload = \"{\\\"filename\\\":{}}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/profiles/documents\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"filename\\\":{}}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/profiles/documents \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"filename\":{}}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"filename\":{}}' |  \\\n  http POST https://api.directfreight.com/v1/profiles/documents \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"filename\":{}}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/profiles/documents"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\"filename\": []]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/profiles/documents\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "PROFILES",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/profiles/documents\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/documents\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/profiles/documents\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/profiles/documents\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/profiles/documents\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/profiles/documents\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles/documents\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/profiles/documents',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/profiles/documents\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/profiles/documents\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/profiles/documents\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/profiles/documents\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/profiles/documents\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/profiles/documents');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/profiles/documents');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/profiles/documents\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/profiles/documents\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/profiles/documents\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/profiles/documents \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/profiles/documents \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/profiles/documents"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/profiles/documents\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/profiles/fmcsa": {
      "get": {
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/fmcsa_profile_object"
            }
          }
        },
        "summary": "STAGE=PRIVATE Returns the FMCSA information of this profiles' DOT number.",
        "tags": [
          "profiles"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/profiles/fmcsa\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/profiles/fmcsa\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/fmcsa\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/profiles/fmcsa\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/profiles/fmcsa\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/profiles/fmcsa\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/profiles/fmcsa\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles/fmcsa\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/profiles/fmcsa',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/profiles/fmcsa\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/profiles/fmcsa\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/profiles/fmcsa\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"https://api.directfreight.com/v1/profiles/fmcsa\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/profiles/fmcsa\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/profiles/fmcsa');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/profiles/fmcsa');\n$request->setRequestMethod('GET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/profiles/fmcsa\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/profiles/fmcsa\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/profiles/fmcsa\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url https://api.directfreight.com/v1/profiles/fmcsa \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET https://api.directfreight.com/v1/profiles/fmcsa \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/profiles/fmcsa"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/profiles/fmcsa\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "PROFILES",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/profiles/fmcsa\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/fmcsa\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/profiles/fmcsa\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/profiles/fmcsa\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/profiles/fmcsa\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/profiles/fmcsa\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles/fmcsa\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/profiles/fmcsa',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/profiles/fmcsa\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/profiles/fmcsa\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/profiles/fmcsa\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/profiles/fmcsa\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/profiles/fmcsa\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/profiles/fmcsa');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/profiles/fmcsa');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/profiles/fmcsa\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/profiles/fmcsa\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/profiles/fmcsa\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/profiles/fmcsa \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/profiles/fmcsa \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/profiles/fmcsa"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/profiles/fmcsa\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/profiles/fmcsa/verification": {
      "get": {
        "description": "STAGE=PRIVATE Checks if the logged in user is FMCSA verified.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "properties": {
                "last_verification_date": {
                  "type": "string"
                },
                "status": {
                  "type": "boolean"
                },
                "verified_via": {
                  "type": "string"
                }
              }
            }
          }
        },
        "summary": "STAGE=PRIVATE Checks if the logged in user is FMCSA verified.",
        "tags": [
          "profiles"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/profiles/fmcsa/verification\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/profiles/fmcsa/verification\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/fmcsa/verification\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/profiles/fmcsa/verification\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/profiles/fmcsa/verification\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/profiles/fmcsa/verification\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/profiles/fmcsa/verification\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles/fmcsa/verification\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/profiles/fmcsa/verification',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/profiles/fmcsa/verification\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/profiles/fmcsa/verification\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/profiles/fmcsa/verification\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"https://api.directfreight.com/v1/profiles/fmcsa/verification\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/profiles/fmcsa/verification\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/profiles/fmcsa/verification');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/profiles/fmcsa/verification');\n$request->setRequestMethod('GET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/profiles/fmcsa/verification\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/profiles/fmcsa/verification\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/profiles/fmcsa/verification\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url https://api.directfreight.com/v1/profiles/fmcsa/verification \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET https://api.directfreight.com/v1/profiles/fmcsa/verification \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/profiles/fmcsa/verification"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/profiles/fmcsa/verification\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "PROFILES",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/profiles/fmcsa/verification\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/fmcsa/verification\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/profiles/fmcsa/verification\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/profiles/fmcsa/verification\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/profiles/fmcsa/verification\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/profiles/fmcsa/verification\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles/fmcsa/verification\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/profiles/fmcsa/verification',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/profiles/fmcsa/verification\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/profiles/fmcsa/verification\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/profiles/fmcsa/verification\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/profiles/fmcsa/verification\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/profiles/fmcsa/verification\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/profiles/fmcsa/verification');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/profiles/fmcsa/verification');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/profiles/fmcsa/verification\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/profiles/fmcsa/verification\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/profiles/fmcsa/verification\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/profiles/fmcsa/verification \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/profiles/fmcsa/verification \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/profiles/fmcsa/verification"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/profiles/fmcsa/verification\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/profiles/fmcsa/verification/check": {
      "get": {
        "description": "STAGE=PRIVATE Checks a verification code challenge.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "description": "6 Digit verification code.",
            "in": "query",
            "name": "code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        },
        "summary": "STAGE=PRIVATE Checks FMCSA verification challenge",
        "tags": [
          "profiles"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/profiles/fmcsa/verification/check',\n  qs: { code: 'SOME_NUMBER_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/profiles/fmcsa/verification/check\");\n\nreq.query({\n  \"code\": \"SOME_NUMBER_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/profiles/fmcsa/verification/check');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'code' => 'SOME_NUMBER_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/profiles/fmcsa/verification/check');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'code' => 'SOME_NUMBER_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/profiles/fmcsa/verification/check\"\n\nquerystring = {\"code\":\"SOME_NUMBER_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/profiles/fmcsa/verification/check?code=SOME_NUMBER_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "PROFILES",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/profiles/fmcsa/verification/check\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/fmcsa/verification/check\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/profiles/fmcsa/verification/check\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/profiles/fmcsa/verification/check\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/profiles/fmcsa/verification/check\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/profiles/fmcsa/verification/check\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles/fmcsa/verification/check\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/profiles/fmcsa/verification/check',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/profiles/fmcsa/verification/check\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/profiles/fmcsa/verification/check\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/profiles/fmcsa/verification/check\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/profiles/fmcsa/verification/check\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/profiles/fmcsa/verification/check\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/profiles/fmcsa/verification/check');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/profiles/fmcsa/verification/check');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/profiles/fmcsa/verification/check\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/profiles/fmcsa/verification/check\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/profiles/fmcsa/verification/check\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/profiles/fmcsa/verification/check \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/profiles/fmcsa/verification/check \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/profiles/fmcsa/verification/check"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/profiles/fmcsa/verification/check\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/profiles/fmcsa/verification/send": {
      "get": {
        "description": "STAGE=PRIVATE Sends a verification challenge to the email or phone number associated with this FMCSA Dot number.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "description": "Must be one of: email, call or text.",
            "in": "query",
            "name": "method",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        },
        "summary": "STAGE=PRIVATE Sends FMCSA verification challenge",
        "tags": [
          "profiles"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/profiles/fmcsa/verification/send',\n  qs: { method: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/profiles/fmcsa/verification/send\");\n\nreq.query({\n  \"method\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/profiles/fmcsa/verification/send');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'method' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/profiles/fmcsa/verification/send');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'method' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/profiles/fmcsa/verification/send\"\n\nquerystring = {\"method\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/profiles/fmcsa/verification/send?method=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "PROFILES",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/profiles/fmcsa/verification/send\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/fmcsa/verification/send\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/profiles/fmcsa/verification/send\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/profiles/fmcsa/verification/send\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/profiles/fmcsa/verification/send\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/profiles/fmcsa/verification/send\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles/fmcsa/verification/send\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/profiles/fmcsa/verification/send',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/profiles/fmcsa/verification/send\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/profiles/fmcsa/verification/send\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/profiles/fmcsa/verification/send\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/profiles/fmcsa/verification/send\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/profiles/fmcsa/verification/send\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/profiles/fmcsa/verification/send');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/profiles/fmcsa/verification/send');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/profiles/fmcsa/verification/send\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/profiles/fmcsa/verification/send\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/profiles/fmcsa/verification/send\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/profiles/fmcsa/verification/send \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/profiles/fmcsa/verification/send \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/profiles/fmcsa/verification/send"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/profiles/fmcsa/verification/send\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/profiles/truck_info": {
      "get": {
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/truck_info_object"
            }
          }
        },
        "summary": "Request the logged in user's truck info. STAGE=Private",
        "tags": [
          "profiles"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/profiles/truck_info\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/profiles/truck_info\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/truck_info\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/profiles/truck_info\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/profiles/truck_info\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/profiles/truck_info\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/profiles/truck_info\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles/truck_info\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/profiles/truck_info',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/profiles/truck_info\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/profiles/truck_info\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/profiles/truck_info\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"https://api.directfreight.com/v1/profiles/truck_info\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/profiles/truck_info\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/profiles/truck_info');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/profiles/truck_info');\n$request->setRequestMethod('GET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/profiles/truck_info\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/profiles/truck_info\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/profiles/truck_info\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url https://api.directfreight.com/v1/profiles/truck_info \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET https://api.directfreight.com/v1/profiles/truck_info \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/profiles/truck_info"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/profiles/truck_info\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "patch": {
        "description": "Please send in at least one field to be updated.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/truck_info_object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/truck_info_object"
            }
          }
        },
        "summary": "Update truck information. STAGE=Private",
        "tags": [
          "profiles"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/profiles/truck_info\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"deadhead_per_mile\\\":0,\\\"driver_per_mile\\\":0,\\\"fuel_capacity\\\":0,\\\"ins_permits_per_mile\\\":0,\\\"maint_per_mile\\\":0,\\\"miles_per_gal\\\":0,\\\"truck_ownership_per_mile\\\":0}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/profiles/truck_info\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"deadhead_per_mile\\\":0,\\\"driver_per_mile\\\":0,\\\"fuel_capacity\\\":0,\\\"ins_permits_per_mile\\\":0,\\\"maint_per_mile\\\":0,\\\"miles_per_gal\\\":0,\\\"truck_ownership_per_mile\\\":0}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/truck_info\"\n\n\tpayload := strings.NewReader(\"{\\\"deadhead_per_mile\\\":0,\\\"driver_per_mile\\\":0,\\\"fuel_capacity\\\":0,\\\"ins_permits_per_mile\\\":0,\\\"maint_per_mile\\\":0,\\\"miles_per_gal\\\":0,\\\"truck_ownership_per_mile\\\":0}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"deadhead_per_mile\\\":0,\\\"driver_per_mile\\\":0,\\\"fuel_capacity\\\":0,\\\"ins_permits_per_mile\\\":0,\\\"maint_per_mile\\\":0,\\\"miles_per_gal\\\":0,\\\"truck_ownership_per_mile\\\":0}\");\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/profiles/truck_info\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://api.directfreight.com/v1/profiles/truck_info\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"deadhead_per_mile\\\":0,\\\"driver_per_mile\\\":0,\\\"fuel_capacity\\\":0,\\\"ins_permits_per_mile\\\":0,\\\"maint_per_mile\\\":0,\\\"miles_per_gal\\\":0,\\\"truck_ownership_per_mile\\\":0}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/profiles/truck_info\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"deadhead_per_mile\\\":0,\\\"driver_per_mile\\\":0,\\\"fuel_capacity\\\":0,\\\"ins_permits_per_mile\\\":0,\\\"maint_per_mile\\\":0,\\\"miles_per_gal\\\":0,\\\"truck_ownership_per_mile\\\":0}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"deadhead_per_mile\": 0,\n  \"driver_per_mile\": 0,\n  \"fuel_capacity\": 0,\n  \"ins_permits_per_mile\": 0,\n  \"maint_per_mile\": 0,\n  \"miles_per_gal\": 0,\n  \"truck_ownership_per_mile\": 0\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://api.directfreight.com/v1/profiles/truck_info\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles/truck_info\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ deadhead_per_mile: 0,\n  driver_per_mile: 0,\n  fuel_capacity: 0,\n  ins_permits_per_mile: 0,\n  maint_per_mile: 0,\n  miles_per_gal: 0,\n  truck_ownership_per_mile: 0 }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://api.directfreight.com/v1/profiles/truck_info',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { deadhead_per_mile: 0,\n     driver_per_mile: 0,\n     fuel_capacity: 0,\n     ins_permits_per_mile: 0,\n     maint_per_mile: 0,\n     miles_per_gal: 0,\n     truck_ownership_per_mile: 0 },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://api.directfreight.com/v1/profiles/truck_info\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"deadhead_per_mile\": 0,\n  \"driver_per_mile\": 0,\n  \"fuel_capacity\": 0,\n  \"ins_permits_per_mile\": 0,\n  \"maint_per_mile\": 0,\n  \"miles_per_gal\": 0,\n  \"truck_ownership_per_mile\": 0\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"deadhead_per_mile\": @0,\n                              @\"driver_per_mile\": @0,\n                              @\"fuel_capacity\": @0,\n                              @\"ins_permits_per_mile\": @0,\n                              @\"maint_per_mile\": @0,\n                              @\"miles_per_gal\": @0,\n                              @\"truck_ownership_per_mile\": @0 };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/profiles/truck_info\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/profiles/truck_info\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"deadhead_per_mile\\\":0,\\\"driver_per_mile\\\":0,\\\"fuel_capacity\\\":0,\\\"ins_permits_per_mile\\\":0,\\\"maint_per_mile\\\":0,\\\"miles_per_gal\\\":0,\\\"truck_ownership_per_mile\\\":0}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://api.directfreight.com/v1/profiles/truck_info\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"deadhead_per_mile\":0,\"driver_per_mile\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"miles_per_gal\":0,\"truck_ownership_per_mile\":0}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/profiles/truck_info\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"deadhead_per_mile\\\":0,\\\"driver_per_mile\\\":0,\\\"fuel_capacity\\\":0,\\\"ins_permits_per_mile\\\":0,\\\"maint_per_mile\\\":0,\\\"miles_per_gal\\\":0,\\\"truck_ownership_per_mile\\\":0}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/profiles/truck_info');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"deadhead_per_mile\":0,\"driver_per_mile\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"miles_per_gal\":0,\"truck_ownership_per_mile\":0}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"deadhead_per_mile\":0,\"driver_per_mile\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"miles_per_gal\":0,\"truck_ownership_per_mile\":0}');\n\n$request->setRequestUrl('https://api.directfreight.com/v1/profiles/truck_info');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\npayload = \"{\\\"deadhead_per_mile\\\":0,\\\"driver_per_mile\\\":0,\\\"fuel_capacity\\\":0,\\\"ins_permits_per_mile\\\":0,\\\"maint_per_mile\\\":0,\\\"miles_per_gal\\\":0,\\\"truck_ownership_per_mile\\\":0}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/profiles/truck_info\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/profiles/truck_info\"\n\npayload = \"{\\\"deadhead_per_mile\\\":0,\\\"driver_per_mile\\\":0,\\\"fuel_capacity\\\":0,\\\"ins_permits_per_mile\\\":0,\\\"maint_per_mile\\\":0,\\\"miles_per_gal\\\":0,\\\"truck_ownership_per_mile\\\":0}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/profiles/truck_info\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"deadhead_per_mile\\\":0,\\\"driver_per_mile\\\":0,\\\"fuel_capacity\\\":0,\\\"ins_permits_per_mile\\\":0,\\\"maint_per_mile\\\":0,\\\"miles_per_gal\\\":0,\\\"truck_ownership_per_mile\\\":0}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://api.directfreight.com/v1/profiles/truck_info \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"deadhead_per_mile\":0,\"driver_per_mile\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"miles_per_gal\":0,\"truck_ownership_per_mile\":0}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"deadhead_per_mile\":0,\"driver_per_mile\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"miles_per_gal\":0,\"truck_ownership_per_mile\":0}' |  \\\n  http PATCH https://api.directfreight.com/v1/profiles/truck_info \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"deadhead_per_mile\":0,\"driver_per_mile\":0,\"fuel_capacity\":0,\"ins_permits_per_mile\":0,\"maint_per_mile\":0,\"miles_per_gal\":0,\"truck_ownership_per_mile\":0}' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/profiles/truck_info"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"deadhead_per_mile\": 0,\n  \"driver_per_mile\": 0,\n  \"fuel_capacity\": 0,\n  \"ins_permits_per_mile\": 0,\n  \"maint_per_mile\": 0,\n  \"miles_per_gal\": 0,\n  \"truck_ownership_per_mile\": 0\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/profiles/truck_info\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "PROFILES",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/profiles/truck_info\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/profiles/truck_info\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/profiles/truck_info\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/profiles/truck_info\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/profiles/truck_info\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/profiles/truck_info\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles/truck_info\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/profiles/truck_info',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/profiles/truck_info\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/profiles/truck_info\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/profiles/truck_info\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/profiles/truck_info\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/profiles/truck_info\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/profiles/truck_info');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/profiles/truck_info');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/profiles/truck_info\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/profiles/truck_info\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/profiles/truck_info\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/profiles/truck_info \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/profiles/truck_info \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/profiles/truck_info"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/profiles/truck_info\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/validations/email_exists": {
      "get": {
        "description": "Enter an e-mail to see if it is available. Can be used as ?email=xxx or as a JSON request.",
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/get_email_exists_response"
            }
          }
        },
        "summary": "STAGE=UNK Check if an e-mail exists.",
        "tags": [
          "validations"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/validations/email_exists?email=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/validations/email_exists',\n  qs: { email: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/validations/email_exists\");\n\nreq.query({\n  \"email\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/validations/email_exists');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'email' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/validations/email_exists');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'email' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/validations/email_exists?email=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/validations/email_exists\"\n\nquerystring = {\"email\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/validations/email_exists?email=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "VALIDATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/validations/email_exists\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/validations/email_exists\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/validations/email_exists\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/validations/email_exists\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/validations/email_exists\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/validations/email_exists\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/validations/email_exists\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/validations/email_exists',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/validations/email_exists\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/validations/email_exists\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/validations/email_exists\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/validations/email_exists\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/validations/email_exists\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/validations/email_exists');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/validations/email_exists');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/validations/email_exists\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/validations/email_exists\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/validations/email_exists\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/validations/email_exists \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/validations/email_exists \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/validations/email_exists"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/validations/email_exists\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/validations/trailers": {
      "get": {
        "parameters": [
          {
            "description": "The custom type that the poster is trying to submit.",
            "in": "query",
            "name": "customer_type",
            "required": true,
            "type": "string",
            "x-example": "FLAT53"
          },
          {
            "in": "query",
            "name": "partner",
            "required": false,
            "type": "string",
            "x-example": "parade"
          },
          {
            "description": "We assume only posters will be using this endpoint. We will use their end-user-token to match for a customer specific match first, and fall back to a general one if it doesn't exist.",
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "properties": {
                "comment": {
                  "description": "the public comment that should be attached to the load being entered.",
                  "type": "string"
                },
                "other_trailer_type": {
                  "description": "what should be put in the other_trailer_types field when posting the load.",
                  "type": "string"
                },
                "trailer_type": {
                  "$ref": "#/definitions/trailer_type"
                }
              },
              "required": [
                "trailer_type"
              ],
              "type": "object"
            }
          }
        },
        "summary": "STAGE=PRIVATE-LIVE Find an official type to match to the customer submitted one.",
        "tags": [
          "validations"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://api.directfreight.com/v1/validations/trailers',\n  qs: \n   { customer_type: 'SOME_STRING_VALUE',\n     partner: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://api.directfreight.com/v1/validations/trailers\");\n\nreq.query({\n  \"customer_type\": \"SOME_STRING_VALUE\",\n  \"partner\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/validations/trailers');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'customer_type' => 'SOME_STRING_VALUE',\n  'partner' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/validations/trailers');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'customer_type' => 'SOME_STRING_VALUE',\n  'partner' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/validations/trailers\"\n\nquerystring = {\"customer_type\":\"SOME_STRING_VALUE\",\"partner\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/validations/trailers?customer_type=SOME_STRING_VALUE&partner=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "VALIDATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/validations/trailers\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/validations/trailers\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/validations/trailers\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/validations/trailers\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/validations/trailers\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/validations/trailers\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/validations/trailers\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/validations/trailers',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/validations/trailers\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/validations/trailers\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/validations/trailers\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/validations/trailers\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/validations/trailers\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/validations/trailers');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/validations/trailers');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/validations/trailers\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/validations/trailers\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/validations/trailers\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/validations/trailers \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/validations/trailers \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/validations/trailers"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/validations/trailers\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/webhooks/apple_appstore_notification": {
      "post": {
        "description": "Save the apple notification to mysql  STAGE=private",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "summary": "Save the apple notification to mysql  STAGE=private",
        "tags": [
          "webhooks"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\")\n  .post(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/webhooks/apple_appstore_notification\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/webhooks/apple_appstore_notification',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/webhooks/apple_appstore_notification');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/webhooks/apple_appstore_notification');\n$request->setRequestMethod('POST');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/webhooks/apple_appstore_notification\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/webhooks/apple_appstore_notification \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http POST https://api.directfreight.com/v1/webhooks/apple_appstore_notification \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/webhooks/apple_appstore_notification"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "WEBHOOKS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/webhooks/apple_appstore_notification\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/webhooks/apple_appstore_notification',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/webhooks/apple_appstore_notification');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/webhooks/apple_appstore_notification');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/webhooks/apple_appstore_notification\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/webhooks/apple_appstore_notification \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/webhooks/apple_appstore_notification \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/webhooks/apple_appstore_notification"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/webhooks/apple_appstore_notification\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/webhooks/google_playstore_notification": {
      "post": {
        "description": "Save the google notification to mysql  STAGE=private",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "summary": "Save the google notification to mysql  STAGE=private",
        "tags": [
          "webhooks"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/webhooks/google_playstore_notification\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://api.directfreight.com/v1/webhooks/google_playstore_notification\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/webhooks/google_playstore_notification\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/webhooks/google_playstore_notification\")\n  .post(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://api.directfreight.com/v1/webhooks/google_playstore_notification\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/webhooks/google_playstore_notification\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://api.directfreight.com/v1/webhooks/google_playstore_notification\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/webhooks/google_playstore_notification\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://api.directfreight.com/v1/webhooks/google_playstore_notification',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://api.directfreight.com/v1/webhooks/google_playstore_notification\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/webhooks/google_playstore_notification\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/webhooks/google_playstore_notification\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://api.directfreight.com/v1/webhooks/google_playstore_notification\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/webhooks/google_playstore_notification\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/webhooks/google_playstore_notification');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/webhooks/google_playstore_notification');\n$request->setRequestMethod('POST');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/webhooks/google_playstore_notification\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/webhooks/google_playstore_notification\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.directfreight.com/v1/webhooks/google_playstore_notification\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://api.directfreight.com/v1/webhooks/google_playstore_notification \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http POST https://api.directfreight.com/v1/webhooks/google_playstore_notification \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/webhooks/google_playstore_notification"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/webhooks/google_playstore_notification\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "WEBHOOKS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://api.directfreight.com/v1/webhooks/google_playstore_notification\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.directfreight.com/v1/webhooks/google_playstore_notification\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.directfreight.com/v1/webhooks/google_playstore_notification\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://api.directfreight.com/v1/webhooks/google_playstore_notification\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://api.directfreight.com/v1/webhooks/google_playstore_notification\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://api.directfreight.com/v1/webhooks/google_playstore_notification\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"api.directfreight.com\",\n  \"port\": null,\n  \"path\": \"/v1/webhooks/google_playstore_notification\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://api.directfreight.com/v1/webhooks/google_playstore_notification',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://api.directfreight.com/v1/webhooks/google_playstore_notification\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://api.directfreight.com/v1/webhooks/google_playstore_notification\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://api.directfreight.com/v1/webhooks/google_playstore_notification\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://api.directfreight.com/v1/webhooks/google_playstore_notification\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://api.directfreight.com/v1/webhooks/google_playstore_notification\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://api.directfreight.com/v1/webhooks/google_playstore_notification');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://api.directfreight.com/v1/webhooks/google_playstore_notification');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.directfreight.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/webhooks/google_playstore_notification\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://api.directfreight.com/v1/webhooks/google_playstore_notification\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://api.directfreight.com/v1/webhooks/google_playstore_notification\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://api.directfreight.com/v1/webhooks/google_playstore_notification \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://api.directfreight.com/v1/webhooks/google_playstore_notification \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://api.directfreight.com/v1/webhooks/google_playstore_notification"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://api.directfreight.com/v1/webhooks/google_playstore_notification\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    }
  },
  "definitions": {
    "alert_list": {
      "description": "A hash containing a list of objects. Each entry should have 1 alert object, and 1 search object, and 2 integer counts. One for the number of new loads, and one for the number of total loads that match the search critera.",
      "example": "{\n  \"alerts\": [\n    \"{}\",\n    \"{}\"\n  ]\n}",
      "properties": {
        "alerts": {
          "items": {
            "$ref": "#/definitions/alert_response_item"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "ALERTS"
      }
    },
    "alert_response_item": {
      "properties": {
        "alert_active": {
          "description": "Identifies whether an alert meets the criteria to send notifications by one of the notification methods.  Alert activation is  primarily controlled by the datetime field expires_after.  This field is a convenience method to eliminate the need to determine the users time zone and verify server time.",
          "type": "boolean"
        },
        "alert_id": {
          "description": "The ID of the alert",
          "type": "integer"
        },
        "days_of_week": {
          "description": "Limit the days that alerts are sent to the days listed.",
          "items": {
            "enum": [
              "Sun",
              "Mon",
              "Tue",
              "Wed",
              "Thu",
              "Fri",
              "Sat"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "end_hour": {
          "description": "A  corresponding to the hour of the day.",
          "maximum": 21,
          "minimum": 3,
          "type": "integer"
        },
        "expires_after": {
          "description": "The last day the alert will be valid. Valid time frames are from today until one year into the future.",
          "example": "2019-12-30T00:00:00.000Z",
          "format": "date",
          "type": "string"
        },
        "last_modified": {
          "description": "The last time this alert was modified.",
          "example": "2019-11-20T10:05:35.000Z",
          "format": "datetime",
          "type": "string"
        },
        "last_search": {
          "description": "The last time this alert was used in a boards request.",
          "example": "2019-11-20T10:05:35.000Z",
          "format": "datetime",
          "type": "string"
        },
        "last_sent": {
          "description": "The last time this alert was sent.",
          "example": "2019-11-20T10:05:35.000Z",
          "format": "datetime",
          "type": "string"
        },
        "list_type": {
          "description": "This specify the type of list that is returned, including disabling the list from being sent at all. Valid values are 'complete-list','only-new', 'only-new-free' and 'not-active'.",
          "enum": [
            "complete-list",
            "only-new",
            "only-new-free",
            "not-active"
          ],
          "type": "string"
        },
        "minute_frequency": {
          "description": "How many minutes to wait before sending another alert. Valid values are '15','30','60','120','240','480', and '1440'.",
          "type": "integer"
        },
        "previous_search": {
          "description": "The second to last time this alert was used in a boards request.",
          "example": "2019-11-20T10:05:35.000Z",
          "format": "datetime",
          "type": "string"
        },
        "search": {
          "description": "Refer to the boards documentation for the full list of restrictions for each field.",
          "properties": {
            "destination_city": {
              "type": "string"
            },
            "destination_radius": {
              "type": "integer"
            },
            "destination_state": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "full_load": {
              "type": "boolean"
            },
            "origin_city": {
              "type": "string"
            },
            "origin_radius": {
              "type": "integer"
            },
            "origin_state": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "search_id": {
              "type": "integer"
            },
            "search_type": {
              "type": "string"
            },
            "ship_date": {
              "items": {
                "format": "date",
                "type": "string"
              },
              "type": "array"
            },
            "sort_parameter": {
              "type": "string"
            },
            "trailer_type": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "send_type": {
          "description": "What method to send the alert list.",
          "enum": [
            "email",
            "text",
            "push",
            "desktop"
          ],
          "type": "string"
        },
        "start_hour": {
          "description": "A  corresponding to the hour of the day.",
          "maximum": 21,
          "minimum": 3,
          "type": "integer"
        },
        "time_zone": {
          "description": "A number between -1 and 2. -1 = EST, 0 = CST, 1 = MST, 2 = PST",
          "maximum": 2,
          "minimum": -1,
          "type": "integer"
        },
        "user_id": {
          "description": "The ID of the user",
          "type": "integer"
        }
      },
      "required": [
        "days_of_week",
        "end_hour",
        "expires_after",
        "list_type",
        "minute_frequency",
        "search",
        "send_type",
        "start_hour",
        "time_zone"
      ],
      "type": "object",
      "x-restlet": {
        "section": "ALERTS"
      }
    },
    "alert_search_response": {
      "properties": {
        "alert_id": {
          "description": "Alert ID.",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "alert": {
      "properties": {
        "alert_id": {
          "description": "Allowed as a convenience to create consistency with a boards request, but is ignored during alert creation.",
          "type": "integer"
        },
        "days_of_week": {
          "description": "Limit the days that alerts are sent to the days listed.",
          "items": {
            "enum": [
              "Sun",
              "Mon",
              "Tue",
              "Wed",
              "Thu",
              "Fri",
              "Sat"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "end_hour": {
          "description": "A  corresponding to the hour of the day. (This field will accept 23 however there is a known logic issue for values over 21 with time zone set to 2)",
          "maximum": 23,
          "minimum": 3,
          "type": "integer"
        },
        "expires_after": {
          "description": "The last day and time the alert will be valid. Valid time frames are from today until one year into the future.  This field will accept date only or a date and time.  If the date only is submitted the time will default to 23:59:59",
          "example": "2020-01-01T14:30:24.000Z",
          "format": "date time",
          "type": "string"
        },
        "item_count": {
          "description": "Allowed as a convenience to create consistency with a boards request, but is ignored during alert creation.",
          "example": 25,
          "maximum": 100,
          "minimum": 1,
          "type": "integer"
        },
        "list_type": {
          "description": "This specify the type of list that is returned, including disabling the list from being sent at all. Valid values are 'complete-list','only-new', 'only-new-free' and 'not-active'.",
          "enum": [
            "complete-list",
            "only-new",
            "only-new-free",
            "not-active"
          ],
          "type": "string"
        },
        "minute_frequency": {
          "description": "How many minutes to wait before sending another alert. Valid values are '15','30','60','120','240','480', and '1440'.",
          "type": "integer"
        },
        "page_number": {
          "description": "Allowed as a convenience to create consistency with a boards request, but is ignored during alert creation.",
          "minimum": 1,
          "type": "integer"
        },
        "return_count": {
          "description": "Allowed as a convenience to create consistency with a boards request, but is ignored during alert creation. ",
          "type": "boolean"
        },
        "search": {
          "description": "Refer to the boards documentation for the full list of restrictions for each field.",
          "properties": {
            "destination_city": {
              "type": "string"
            },
            "destination_radius": {
              "type": "integer"
            },
            "destination_state": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "full_load": {
              "type": "boolean"
            },
            "origin_city": {
              "type": "string"
            },
            "origin_radius": {
              "type": "integer"
            },
            "origin_state": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "return_only": {
              "description": "Allowed as a convenience to create consistency with a boards request, but is ignored during alert creation. ",
              "type": "string"
            },
            "ship_date": {
              "items": {
                "format": "date",
                "type": "string"
              },
              "type": "array"
            },
            "sort_parameter": {
              "type": "string"
            },
            "tier": {
              "description": "Allowed as a convenience to create consistency with a boards request, but is ignored during alert creation. ",
              "type": "string"
            },
            "trailer_type": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "send_type": {
          "description": "What method to send the alert list.",
          "enum": [
            "email",
            "text",
            "push",
            "desktop"
          ],
          "type": "string"
        },
        "start_hour": {
          "description": "A  corresponding to the hour of the day.  (This field will accept 23 however there is a known logic issue for values over 21 with time zone set to 2)",
          "maximum": 23,
          "minimum": 3,
          "type": "integer"
        },
        "time_zone": {
          "description": "A number between -1 and 2. -1 = EST, 0 = CST, 1 = MST, 2 = PST",
          "maximum": 2,
          "minimum": -1,
          "type": "integer"
        }
      },
      "required": [
        "days_of_week",
        "end_hour",
        "expires_after",
        "list_type",
        "minute_frequency",
        "search",
        "send_type",
        "start_hour",
        "time_zone"
      ],
      "type": "object",
      "x-restlet": {
        "section": "ALERTS"
      }
    },
    "autocomplete_response": {
      "example": "{\n  \"city\": \"city\",\n  \"state_abbreviation\": \"{}\",\n  \"state_name\": \"{}\"\n}",
      "properties": {
        "city": {
          "description": "The name of the city.  Only returned if record_type is city or postal",
          "type": "string"
        },
        "postal_code": {
          "description": "The postal code of the city.  Only returned if match type is postal.",
          "type": "string"
        },
        "record_type": {
          "enum": [
            "country",
            "state",
            "province",
            "city",
            "postal"
          ],
          "type": "string"
        },
        "region_code": {
          "type": "string"
        },
        "region_name": {
          "type": "string"
        }
      },
      "required": [
        "record_type",
        "region_code",
        "region_name"
      ],
      "type": "object",
      "x-restlet": {
        "section": "LOCATIONS"
      }
    },
    "board_request": {
      "example": {
        "destination_city": "chicago",
        "destination_radius": 300,
        "destination_state": [
          "IL"
        ],
        "full_load": true,
        "google_recaptcha_score": 0.7,
        "max_age": 2000,
        "max_length": 300,
        "max_pay_rate": 200,
        "max_weight": 40000,
        "min_age": 50,
        "min_length": 15,
        "min_pay_rate": 50,
        "min_weight": 1000,
        "origin_city": "Kansas City",
        "origin_radius": 300,
        "origin_state": [
          "MO"
        ],
        "page_number": 1,
        "ship_date": [
          "2020-05-06T00:00:00.000Z"
        ],
        "sort_direction": "asc",
        "sort_parameter": "age",
        "trailer_type": [
          "V",
          "R"
        ]
      },
      "properties": {
        "alert_id": {
          "description": "By specifying an alert_id we will record the loads or trucks seen by this user, and associate it with their alert.   See /alerts documentation for more information on setting up alerts.",
          "example": 1155,
          "type": "integer",
          "x-example": "undefined"
        },
        "company_name": {
          "description": "Search only for loads posted by this company. STAGE=Private",
          "type": "string"
        },
        "destination_city": {
          "description": "If used, this field must be accompanied by a destination_state.",
          "example": "chicago",
          "minLength": 2,
          "type": "string"
        },
        "destination_radius": {
          "description": "If both the destination city and state are specified, this field will limit the search to results to within # miles of the specified destination city.   If this field is omitted during a search that includes a destination city a default value of 30 miles will be used.",
          "example": 100,
          "maximum": 300,
          "minimum": 1,
          "type": "integer"
        },
        "destination_state": {
          "description": "If the destination_city field is is used, this field should contain the state for that city.  For searches without a specified destination_city this field may contain an array list of state abbreviations.",
          "example": [
            "IL",
            "HI",
            "NY",
            "KS",
            "TX",
            "MO",
            "AL"
          ],
          "items": {
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "type": "array"
        },
        "full_load": {
          "description": "This is only valid when requesting a loads board. Omitting this field will return both full and partial loads. A true value will limit results to full loads only.  False will return partial loads only.",
          "example": true,
          "type": "boolean"
        },
        "google_recaptcha_score": {
          "description": "STAGE=PRIVATE Google ReCAPTCHA score, for logging purposes. This field is optional. Should be a decimal number between 0 and 1.",
          "type": "number"
        },
        "item_count": {
          "description": "This argument adjusts how many items per page will be returned.  Omitting this field will return the default of 50 items per page",
          "example": 25,
          "maximum": 100,
          "minimum": 1,
          "type": "integer"
        },
        "max_age": {
          "description": "Return items that are at most this many minutes old.",
          "example": 300,
          "type": "integer"
        },
        "max_length": {
          "description": "Return items no longer than this.",
          "example": 300,
          "type": "integer"
        },
        "max_pay_rate": {
          "description": "Return items that pay at most this amount.",
          "example": 300,
          "type": "integer"
        },
        "max_weight": {
          "description": "Return items that weight less than this.",
          "example": 40000,
          "type": "integer"
        },
        "md5": {
          "description": "Return only this specific MD5 ID. STAGE=Private  DEPRECATED DO NOT USE",
          "example": "850FBE52A5345119FD9C79FDE4E27308",
          "type": "string"
        },
        "min_age": {
          "description": "Return items that are at least this many minutes old.",
          "example": 50,
          "type": "integer"
        },
        "min_length": {
          "description": "Return items at least this long.",
          "example": 15,
          "type": "integer"
        },
        "min_pay_rate": {
          "description": "Return items that pay at least this amount.",
          "example": 50,
          "type": "integer"
        },
        "min_weight": {
          "description": "Return items that weight at least this much.",
          "example": 1000,
          "type": "integer"
        },
        "origin_city": {
          "description": "If used, this field must be accompanied by an origin_state.",
          "example": "Kansas City",
          "minLength": 2,
          "type": "string"
        },
        "origin_radius": {
          "description": "If both the origin city and state are specified, this field will limit the search to results to within # miles of the specified origin city. If this field is omitted during a search that includes an origin city a default value of 25 miles will be used.",
          "example": 150,
          "maximum": 300,
          "minimum": 1,
          "type": "integer"
        },
        "origin_state": {
          "description": "If the origin_city field is is used, this field should contain the state for that city. For searches without a specified origin_city this field may contain an array list of state abbreviations.",
          "example": [
            "MO",
            "IL",
            "TX",
            "CA"
          ],
          "items": {
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "type": "array"
        },
        "page_number": {
          "description": "The page you want to return. Will return an empty board on an invalid page.",
          "minimum": 1,
          "type": "integer"
        },
        "partner": {
          "description": "Used to customize API response for integration partners. This field should only be used in coordination with developers at Direct Freight Services",
          "type": "string"
        },
        "return_count": {
          "description": "If included this will return a total count instead of a list.",
          "type": "boolean"
        },
        "return_only": {
          "description": "STAGE=PRIVATE  This field is an additional filter that limits the boards response for attributes that are not defined by the load record. Currently the following attributes are valid for this field.\n\nunviewed-loads that have not been viewed by the user (Loads will continue to be returned by boards as unviewed until a GET is requested from the alerts endpoint.  Requesting the alerts resets the timestamp for determining when a load is new to the time of the last search).\n\nunsent-Loads that have not been sent to or viewed by a user.\n\nnewtag- Loads that are given a new tag.  The new tag is only given to loads that are new since the previous search if the 2 searches are both done in the same day.",
          "enum": [
            "unviewed",
            "unsent",
            "newtag"
          ],
          "type": "string"
        },
        "return_web_url": {
          "description": "If included this will return a \"search_url\" property that has a URL that can be used to perform this same search on the DirectFreight Website.",
          "type": "boolean"
        },
        "ship_date": {
          "description": "Limits results to specified ship date(s).",
          "items": {
            "description": "Please use the YYYY-MM-DD format.",
            "format": "date",
            "type": "string"
          },
          "type": "array"
        },
        "sort_direction": {
          "default": "asc",
          "description": "The system automatically chooses the most common order based on the parameter chosen. Use this option if you want a specific sort direction.",
          "enum": [
            "asc",
            "desc"
          ],
          "example": "asc",
          "type": "string"
        },
        "sort_parameter": {
          "default": "age",
          "description": "The system automatically chooses the most common order based on the parameter chosen.  Sort order can be specified by using the \"sort_direction\" parameter.",
          "enum": [
            "origin_city",
            "origin_state",
            "destination_city",
            "destination_state",
            "trailer_type",
            "load_size",
            "pay_rate",
            "rate_per_mile_est",
            "credit_score",
            "age",
            "trip_miles",
            "dead_head",
            "length",
            "weight",
            "company_name",
            "ship_date",
            "receive_date",
            "tia_user",
            "green_light",
            "new",
            "book_now",
            "avg_market_rate",
            "posting_type"
          ],
          "example": "age",
          "type": "string"
        },
        "tier": {
          "description": "STAGE=PRIVATE  DEPRECATED  This field is an optional filter that limits board response to 'free' or 'premium' loads. If this field is not specified it defaults to 'all' loads.\nfree loads - are loads that are more than 2 hours old. contact information and comments are visible even if this request comes from an unsubscribed account.\npremium loads - loads that are less than 2 hours old. contact information and comments are only visible for premium accounts.   ",
          "enum": [
            "all",
            "free",
            "premium"
          ],
          "type": "string"
        },
        "trailer_type": {
          "description": "A string array of valid trailer types to limit the search. ",
          "example": [
            "F",
            "F+T",
            "F+S",
            "V"
          ],
          "items": {
            "enum": [
              "V",
              "VINT",
              "SD",
              "MX",
              "HS",
              "AC",
              "LB",
              "F+T",
              "F",
              "FINT",
              "DD",
              "V+V",
              "V+A",
              "CRG",
              "HB",
              "LA",
              "PO",
              "R",
              "RINT",
              "RGN",
              "CV",
              "DT",
              "TNK",
              "F+S",
              "PNEU",
              "CONT",
              "OTHER"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "BOARDS"
      }
    },
    "board_response_item": {
      "properties": {
        "age": {
          "description": "Time in minutes since load/truck was first posted. NULL is returned for values less than 1 minute.",
          "example": 15,
          "type": "integer"
        },
        "avg_market_rate": {
          "description": "Average rate for this type of load during the last 28 days.  Returns either \"$X.XX\" or \"Upgrade\" or \"Sign Up\"",
          "type": "string"
        },
        "booking_info": {
          "description": "Information about booking this load online.  Currently only returned by the single load endpoint.",
          "properties": {
            "book_button_action": {},
            "book_button_data": {
              "description": "data associated with the action. For example a url or a phone number. Only returned if book_button_action is call, external_browser, or internal_browser",
              "example": "https://www.truckersearch.com",
              "type": "string"
            },
            "book_button_label": {
              "example": "Book Now",
              "type": "string"
            },
            "book_header_label": {
              "example": "Book Now",
              "type": "string"
            },
            "book_message": {
              "example": "You must call 888-894-4198 before booking online",
              "type": "string"
            },
            "df_reference_code": {
              "example": "tJJB-cQQDh19nkmyOn5xzjfdGSQao3bskaRDzc5r2IaX3_EBROT34pQ~",
              "type": "string"
            },
            "quote_button_action": {},
            "quote_button_data": {
              "description": "data associated with the action. For example a url or a phone number. Only returned if quote_button_action is call, external_browser, or internal_browser",
              "example": "https://www.truckersearch.com",
              "type": "string"
            },
            "quote_button_label": {
              "example": "Send Quote",
              "type": "string"
            },
            "quote_header_label": {
              "example": "Quote this Load",
              "type": "string"
            },
            "quote_message": {
              "example": "Please enter the dollar amount you are willing to book this load at",
              "type": "string"
            },
            "show_book_rate": {
              "example": true,
              "type": "boolean"
            },
            "show_or_label": {
              "example": true,
              "type": "boolean"
            },
            "show_quote_input": {
              "example": true,
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "comment": {
          "description": "This field is only returned for an end_user_token that has the subscribed access level.",
          "example": "Test Load",
          "type": "string"
        },
        "commodity": {
          "description": "the type of cargo.  Currently only returned by the single load endpoint.",
          "type": "string"
        },
        "company_name": {
          "description": "This field is only returned for an end_user_token that has the subscribed access level.",
          "example": "ABC Company",
          "type": "string"
        },
        "credit_report_key": {
          "description": "This field is only returned for an end_user_token that has access to credit reports.\n\nTo access the credit report associated with the company for this item, use the key returned with the following url. https://www.directfreight.com/home/credit_report?refid=$credit_report_key",
          "type": "string"
        },
        "credit_score": {
          "description": "The credit score for the company associated with this item.  Returns \"XX\" or \"Upgrade\" or \"Signup\"",
          "example": "99",
          "type": "string"
        },
        "dead_head": {
          "description": "Distance between request body origin_city, and response item origin_city. This field will be undefined if no origin_city is specified in the request body or if distance cannot be calculated.",
          "example": 87,
          "type": "integer"
        },
        "destination_city": {
          "description": "This field may be returned as null.",
          "minLength": 2,
          "type": "string"
        },
        "destination_state": {
          "description": "This field may be returned as null.",
          "example": "MO",
          "type": "string"
        },
        "entry_id": {
          "description": "unique identifier for this item.",
          "example": "55555555",
          "type": "string"
        },
        "full_load": {
          "description": "Specifies whether load is full or partial.  Will always return true for trucks.",
          "example": true,
          "type": "boolean"
        },
        "green_light": {
          "description": "Indicates whether broker/shipper for item is pre-approved for Rivera Finance factoring program.",
          "example": true,
          "type": "boolean"
        },
        "height": {
          "description": "Height in feet.  Will be null if empty.",
          "type": "number"
        },
        "length": {
          "description": "Length in feet.  Will be null if empty.",
          "type": "number"
        },
        "origin_city": {
          "description": "Origin city of item.",
          "example": "Chicago",
          "minLength": 2,
          "type": "string"
        },
        "origin_state": {
          "description": "Origin state of item",
          "example": "IL",
          "type": "string"
        },
        "pay_rate": {
          "description": "Will be null if empty.",
          "type": "number"
        },
        "phone_extension": {
          "description": "This field is only returned for an end_user_token that has the subscribed access level.   Will return null if empty.",
          "example": 123,
          "type": "integer"
        },
        "phone_number": {
          "description": "This field is only returned for an end_user_token that has the subscribed access level.",
          "example": "555-555-5555",
          "type": "string"
        },
        "rate_per_mile_est": {
          "description": "Rate per mile estimate",
          "example": 1.5,
          "type": "number"
        },
        "receive_date": {
          "example": "2018-09-24T00:00:00.000Z",
          "format": "date",
          "type": "string"
        },
        "results_book_button_color": {
          "type": "string"
        },
        "results_book_button_label": {
          "type": "string"
        },
        "ship_date": {
          "description": "The date the load is scheduled to be picked up.  For trucks this is the date the truck is available.",
          "example": "2018-09-20T00:00:00.000Z",
          "format": "date",
          "type": "string"
        },
        "stops": {
          "description": "a summary of the stops.  Currently only returned by the single load endpoint.",
          "items": {
            "$ref": "#/definitions/stop_item"
          },
          "type": "array"
        },
        "tags": {
          "description": "Indicates special characteristics of a load record.  This field may be returned as a blank array.  Tags=  new, book_now_or_quote, unviewed",
          "example": "new",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "trade_orgs": {
          "description": "Approved Trade Organizations",
          "properties": {
            "tia_approved": {
              "description": "TIA Approved (yes/no)",
              "type": "string"
            }
          },
          "type": "object"
        },
        "trailer_type": {
          "description": "A string array of valid trailer types.",
          "example": "V",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "trailer_type_details": {
          "description": "A description of the trailer type.  This might also be a custom trailer type or a customer specified trailer type."
        },
        "trip_miles": {
          "description": "Distance between origin and destination.  This field will be null if distance cannot be calculated.",
          "example": 523,
          "type": "integer"
        },
        "user_hid": {
          "description": "This field is only returned for an end_user_token that has the subscribed or posting access level. The value when true represents that the user wishes the entry hidden. Refer to boards/hidden_entries/ documentation for more information on how to set and update this value.",
          "example": false,
          "type": "boolean"
        },
        "weight": {
          "description": "Weight in pounds.  Will be null if empty.",
          "type": "integer"
        },
        "width": {
          "description": "Width in feet.  Will be null if empty.",
          "type": "number"
        }
      },
      "required": [
        "age",
        "credit_score",
        "dead_head",
        "destination_city",
        "destination_state",
        "entry_id",
        "full_load",
        "green_light",
        "height",
        "length",
        "origin_city",
        "origin_state",
        "pay_rate",
        "receive_date",
        "ship_date",
        "trailer_type",
        "trip_miles",
        "weight",
        "width"
      ],
      "type": "object"
    },
    "board_response": {
      "example": "{\n  \"list\": \"{}\",\n  \"page_number\": \"{}\",\n  \"total_items\": \"{}\",\n  \"total_pages\": 0,\n  \"total_new\": 0,\n  \"search_url\": \"https://www.directfreight.com/...\"\n}",
      "properties": {
        "list": {
          "description": "A list of entries for this board.",
          "items": {
            "$ref": "#/definitions/board_response_item"
          },
          "type": "array"
        },
        "page_number": {
          "description": "The page you are on.",
          "type": "integer"
        },
        "search_url": {
          "description": "URL that can be used to perform this same search on the DirectFreight Website. Will only be returned if return_web_url is requested.",
          "type": "string"
        },
        "total_items": {
          "description": "A count of all the entry objects for the specified search.",
          "type": "integer"
        },
        "total_pages": {
          "description": "A count of the # of pages based on the search parameters.",
          "type": "integer"
        },
        "total_unviewed_plus_viewed": {
          "description": "STAGE=PRIVATE  This is the total number of loads that would be returned by this boards request if the boards request ignored the return_only \"unviewed\" attribute. The return_only field is an advanced field that allows for additional filter options.  Please contact Direct Freight for more information on gaining access to this field",
          "type": "integer"
        }
      },
      "required": [
        "list"
      ],
      "type": "object",
      "x-restlet": {
        "section": "BOARDS"
      }
    },
    "boards_accept_offer_response": {
      "properties": {
        "header": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "BOARDS"
      }
    },
    "boards_freight_rate_response": {
      "description": "There is some debug trailer types. They are formatted as TRAILER_TYPE_$subsection. They will most likely be removed at the same time as the below mentioned debug variables.",
      "properties": {
        "TRAILER_TYPE": {
          "description": "Currently there is some debug keys that alos exist. Don't rely on these. They will most likely be removed in before Winter 2024.",
          "properties": {
            "payrate": {
              "description": "This will return a list of dates, single key of newest_payrate",
              "properties": {
                "CURRENT_DATE": {
                  "format": "date",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "payrates_25th": {
              "description": "This will return a list of dates, single key of newest_payrate",
              "properties": {
                "CURRENT_DATE": {
                  "format": "date",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "payrates_75th": {
              "description": "This will return a list of dates, single key of newest_payrate",
              "properties": {
                "CURRENT_DATE": {
                  "format": "date",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "payrates_max": {
              "description": "This will return a list of dates, single key of newest_payrate",
              "properties": {
                "CURRENT_DATE": {
                  "format": "date",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "payrates_min": {
              "description": "This will return a list of dates, single key of newest_payrate",
              "properties": {
                "CURRENT_DATE": {
                  "format": "date",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "total_rates": {
              "description": "This will return a list of dates, single key of total rates found for this day",
              "properties": {
                "CURRENT_DATE": {
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "x-restlet": {
        "section": "BOARDS"
      }
    },
    "boards_offer_driver_list_response": {
      "properties": {
        "item_count": {
          "type": "integer"
        },
        "list": {
          "items": {
            "properties": {},
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "BOARDS"
      }
    },
    "boards_offer_driver_response": {
      "properties": {
        "driver_contact_info": {
          "type": "string"
        },
        "load_info_when_quoted": {
          "properties": {
            "age": {
              "format": "int32",
              "type": "integer"
            },
            "allowed_actions": {
              "type": "string"
            },
            "booking_info": {
              "properties": {
                "book_button_action": {
                  "type": "string"
                },
                "book_button_label": {
                  "type": "string"
                },
                "book_header_label": {
                  "type": "string"
                },
                "book_message": {
                  "type": "string"
                },
                "df_reference_code": {
                  "type": "string"
                },
                "quote_button_action": {
                  "type": "string"
                },
                "quote_button_label": {
                  "type": "string"
                },
                "quote_header_label": {
                  "type": "string"
                },
                "quote_message": {
                  "type": "string"
                },
                "show_book_rate": {
                  "format": "int32",
                  "type": "integer"
                },
                "show_or_label": {
                  "format": "int32",
                  "type": "integer"
                },
                "show_quote_input": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "booking_partner": {
              "type": "string"
            },
            "broker_user_id": {
              "format": "int32",
              "type": "integer"
            },
            "comment": {
              "format": "nullable",
              "type": "string"
            },
            "company_name": {
              "type": "string"
            },
            "credit_report_key": {
              "type": "string"
            },
            "credit_score": {
              "format": "nullable",
              "type": "string"
            },
            "custom_id": {
              "type": "string"
            },
            "destination_city": {
              "type": "string"
            },
            "destination_state": {
              "type": "string"
            },
            "details_url": {
              "format": "nullable",
              "type": "string"
            },
            "entry_id": {
              "type": "string"
            },
            "full_load": {
              "type": "boolean"
            },
            "green_light": {
              "type": "boolean"
            },
            "height": {
              "format": "nullable",
              "type": "string"
            },
            "length": {
              "format": "nullable",
              "type": "string"
            },
            "origin_city": {
              "type": "string"
            },
            "origin_state": {
              "type": "string"
            },
            "other_trailer_types": {
              "format": "nullable",
              "type": "string"
            },
            "pay_rate": {
              "format": "int32",
              "type": "integer"
            },
            "phone_extension": {
              "format": "int32",
              "type": "integer"
            },
            "phone_number": {
              "format": "int64",
              "type": "integer"
            },
            "rate_per_mile_est": {
              "type": "number"
            },
            "receive_date": {
              "format": "nullable",
              "type": "string"
            },
            "ship_date": {
              "format": "date",
              "type": "string"
            },
            "tags": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "trade_orgs": {
              "properties": {
                "tia_approved": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "trailer_type": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "trip_miles": {
              "format": "int32",
              "type": "integer"
            },
            "user_hid": {
              "type": "boolean"
            },
            "weight": {
              "format": "nullable",
              "type": "string"
            },
            "width": {
              "format": "nullable",
              "type": "string"
            }
          },
          "type": "object"
        },
        "quote_amount": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "BOARDS"
      }
    },
    "boards_profit_response": {
      "example": {
        "executive_summary": "Based on all of the information we have about your truck and this load we believe this load would have a net profit of $-736.27 after you paid the driver(yourself) and all of the expenses. Fuel costs vary across your route you might consider buying fuel in MO, where fuel costs are $0.458 lower than the average fuel price along this route. ",
        "load_info": {
          "destination_city": "New York",
          "destination_state": "NY",
          "driver_cost": 2011.68,
          "fuel_cost": 7275.58,
          "fuel_per_gallon": "2.55",
          "fuel_used": "429.85",
          "gross_profit": -6892.52,
          "ins_permits": 363.22,
          "maint_cost": 474.98,
          "net_profit": -4482.25,
          "origin_city": "San Diego",
          "origin_state": "CA",
          "other_trip_costs_total": 555.22,
          "pay_rate": "6000",
          "rate_per_mile_est": 2.15,
          "toll_cost": 1,
          "total_trip_cost": 12892.52,
          "trip_miles": 2794,
          "truck_ownership": 2766.06
        },
        "route_info": {
          "avg_fuel_price_trip": 2.604,
          "fuel_by_state": [
            {
              "avg_fuel_price": 2.625,
              "miles": 544,
              "state": "AZ"
            },
            {
              "avg_fuel_price": 3.218,
              "miles": 166,
              "state": "CA"
            },
            {
              "avg_fuel_price": 2.452,
              "miles": 465,
              "state": "CO"
            },
            {
              "avg_fuel_price": 2.454,
              "miles": 155,
              "state": "IL"
            },
            {
              "avg_fuel_price": 2.558,
              "miles": 156,
              "state": "IN"
            },
            {
              "avg_fuel_price": 2.351,
              "miles": 479,
              "state": "KS"
            },
            {
              "avg_fuel_price": 2.146,
              "miles": 247,
              "state": "MO"
            },
            {
              "avg_fuel_price": 2.725,
              "miles": 70,
              "state": "NJ"
            },
            {
              "avg_fuel_price": 2.809,
              "miles": 4,
              "state": "NY"
            },
            {
              "avg_fuel_price": 2.531,
              "miles": 225,
              "state": "OH"
            },
            {
              "avg_fuel_price": 2.831,
              "miles": 336,
              "state": "PA"
            },
            {
              "avg_fuel_price": 2.544,
              "miles": 14,
              "state": "WV"
            }
          ]
        },
        "truck_info": {
          "deadhead_per_mile": 1.29,
          "driver_per_mile": 0.72,
          "fuel_capacity": 200,
          "ins_permits_per_mile": 0.13,
          "maint_per_mile": 0.17,
          "miles_per_gal": 6.5,
          "truck_ownership_per_mile": 0.27
        }
      },
      "properties": {
        "executive_summary": {
          "description": "Executive summary of trip profitability.",
          "type": "string"
        },
        "load_info": {
          "properties": {
            "destination_city": {
              "description": "Origin City, returned as a convinience.",
              "type": "string"
            },
            "destination_state": {
              "description": "Two letter origin state abbreviation, returned as a convinience.",
              "type": "string"
            },
            "driver_cost": {
              "description": "Estimated driver costs.",
              "type": "integer"
            },
            "fuel_cost": {
              "description": "Estimated cost of fuel.  fuel_used x avg_fuel_price_trip",
              "type": "integer"
            },
            "fuel_used": {
              "description": "Estimated fuel needed for trip.",
              "type": "integer"
            },
            "gross_profit": {
              "description": "Pay Rate - total_trip_cost",
              "type": "number"
            },
            "ins_permits": {
              "description": "Estimated INS permit cost.",
              "type": "integer"
            },
            "maint_cost": {
              "description": "Estimated maintenance costs.",
              "type": "integer"
            },
            "net_profit": {
              "description": "Pay Rate - total_trip_cost - driver_cost",
              "type": "number"
            },
            "origin_city": {
              "description": "Origin City, returned as a convinience.",
              "type": "string"
            },
            "origin_state": {
              "description": "Two letter origin state abbreviation, returned as a convinience.",
              "type": "string"
            },
            "other_trip_costs_total": {
              "description": "Tolls + Maintenance + Truck Ownership + INS/Permits.",
              "type": "integer"
            },
            "pay_rate": {
              "description": "Returned as a convenience or \"N/A\" if value was not submitted.",
              "type": "number"
            },
            "rate_per_mile_est": {
              "description": "Calculated using the same method as a boards load request.",
              "type": "integer"
            },
            "toll_cost": {
              "description": "Estimated cost of tolls.",
              "type": "number"
            },
            "total_trip_cost": {
              "description": "Total trip cost.",
              "type": "integer"
            },
            "trip_miles": {
              "description": "Calculated distance, same value as when load was posted.",
              "type": "integer"
            },
            "truck_ownership_per_mile": {
              "description": "Estimated truck ownership costs.",
              "type": "integer"
            }
          },
          "type": "object"
        },
        "route_info": {
          "properties": {
            "avg_dest_rate": {
              "type": "integer"
            },
            "avg_fuel_price_trip": {
              "description": "Simple avgerage of all state average fuel prices for trip.  Does not account for miles traveled in each state.",
              "type": "integer"
            },
            "avg_lane_rate_30": {
              "type": "integer"
            },
            "avg_lane_rate_7": {
              "type": "integer"
            },
            "avg_lane_rate_90": {
              "type": "integer"
            }
          },
          "type": "object"
        },
        "truck_info": {
          "properties": {
            "deadhead_per_mile": {
              "description": "Retrieved from user profile.",
              "type": "integer"
            },
            "driver_per_mile": {
              "description": "Retrieved from user profile.",
              "type": "integer"
            },
            "fuel_capacity": {
              "description": "Retrieved from user profile.",
              "type": "integer"
            },
            "ins_permits_per_mile": {
              "description": "Retrieved from user profile.",
              "type": "integer"
            },
            "maint_per_mile": {
              "description": "Retrieved from user profile.",
              "type": "integer"
            },
            "miles_per_gal": {
              "description": "Retrieved from user profile.",
              "type": "integer"
            },
            "truck_ownership_per_mile": {
              "description": "Retrieved from user profile.",
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "BOARDS"
      }
    },
    "boards_saved_lanes_response": {
      "description": "Each saved lane entry is a key/value object in the list.",
      "example": {
        "list": [
          {
            "destination_city": "Atlanta",
            "destination_state": "GA",
            "distance": 456,
            "flat_gross": 111,
            "flat_per_mile": 1.11,
            "lane_id": 123,
            "origin_city": "Dallas",
            "origin_state": "TX",
            "reefer_gross": 333,
            "reefer_per_mile": 3.33,
            "van_gross": 222,
            "van_per_mile": 2.22
          }
        ]
      },
      "properties": {
        "list": {
          "properties": {
            "destination_city": {
              "type": "string"
            },
            "destination_state": {
              "type": "string"
            },
            "distance": {
              "type": "integer"
            },
            "flat_gross": {
              "type": "number"
            },
            "flat_per_mile": {
              "type": "number"
            },
            "lane_id": {
              "type": "integer"
            },
            "origin_city": {
              "type": "string"
            },
            "origin_state": {
              "type": "string"
            },
            "reefer_gross": {
              "type": "number"
            },
            "reefer_per_mile": {
              "type": "number"
            },
            "van_gross": {
              "type": "number"
            },
            "van_per_mile": {
              "type": "number"
            }
          },
          "type": "object"
        }
      },
      "x-restlet": {
        "section": "BOARDS"
      }
    },
    "boards_submit_offer_response": {
      "properties": {
        "header": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "BOARDS"
      }
    },
    "create_custom_field_data": {
      "properties": {
        "field_name": {
          "description": "Custom field name.",
          "type": "string"
        },
        "posting_id": {
          "description": "Posting ID.",
          "type": "integer"
        },
        "value": {
          "description": "Value.",
          "type": "string"
        }
      },
      "required": [
        "field_name",
        "posting_id",
        "value"
      ],
      "type": "object"
    },
    "create_custom_field": {
      "properties": {
        "name": {
          "description": "Custom field name.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "create_notes": {
      "properties": {
        "body": {
          "type": "string"
        },
        "entry_id": {
          "description": "The entry to associate the note with. ",
          "type": "string"
        },
        "title": {
          "description": "Subject of the note. ",
          "type": "string"
        }
      },
      "required": [
        "body",
        "entry_id",
        "title"
      ],
      "type": "object",
      "x-restlet": {
        "section": "BOARDS"
      }
    },
    "create_status_alert": {
      "properties": {
        "alert_id": {
          "type": "integer"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "common_definitions"
      }
    },
    "create_status": {
      "properties": {
        "success": {
          "type": "integer"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "common_definitions"
      }
    },
    "department_users_response": {
      "example": "{\n  \"department_users\": [\n    {\n      \"id\": 1234,\n      \"access_level\": \"read-only\",\n      \"contact_name\": \"...\",\n      \"dispatch_number\": \"(123) 123-4567\",\n      \"mc_number\": \"12312312\",\n      \"dot_number\": \"45645645\",\n      \"username\": \"...\",\n      \"email\": \"user@domain.com\"\n    }\n  ]\n}",
      "properties": {
        "sub_accounts": {
          "items": {
            "properties": {
              "access_level": {
                "description": "The access_level of the user.",
                "type": "string"
              },
              "contact_name": {
                "type": "string"
              },
              "dispatch_number": {
                "type": "string"
              },
              "dot_number": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "id": {
                "description": "The ID of the department user.",
                "type": "integer"
              },
              "mc_number": {
                "type": "string"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS"
      }
    },
    "departments_response": {
      "example": "{\n    \"departments\": [\n        {\n            \"id\": 8,\n            \"name\": \"West Coast\"\n        }\n    ]\n}",
      "properties": {
        "departments": {
          "items": {
            "properties": {
              "id": {
                "description": "The ID of the department.",
                "type": "integer"
              },
              "name": {
                "description": "The name of the department.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS"
      }
    },
    "end-user-token": {
      "properties": {
        "book_now": {
          "description": "STAGE=private This is used for realm users",
          "type": "boolean"
        },
        "comment": {
          "description": "STAGE=private This is used for realm users",
          "type": "string"
        },
        "end-user-token": {
          "description": "On success an end-user-token is returned.",
          "example": "XX423ASOEUHT4AESUTH",
          "type": "string"
        },
        "last_login": {
          "description": "STAGE=private This is used for realm users",
          "format": "date",
          "type": "string"
        },
        "submit_quote": {
          "description": "STAGE=private This is used for realm users",
          "type": "boolean"
        },
        "user_id": {
          "description": "STAGE=private This is used for realm users",
          "type": "integer"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS"
      }
    },
    "error_object": {
      "example": "{\n  \"code\": 1,\n  \"error\": \"Generic Validation\",\n  \"description\": [ \"The e-mail address must be valid.\" ]\n}",
      "properties": {
        "code": {
          "type": "integer"
        },
        "description": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "code",
        "description",
        "error"
      ],
      "type": "object",
      "x-restlet": {
        "section": "common_definitions"
      }
    },
    "fmcsa_profile_object": {
      "properties": {
        "add_date": {
          "type": "string"
        },
        "authorized_for_hire": {
          "format": "int32",
          "type": "integer"
        },
        "carrier_operation": {
          "type": "string"
        },
        "dba_name": {
          "type": "string"
        },
        "dot_number": {
          "type": "string"
        },
        "driver_total": {
          "type": "string"
        },
        "email_address": {
          "type": "string"
        },
        "exempt_for_hire": {
          "format": "int32",
          "type": "integer"
        },
        "fax": {
          "type": "string"
        },
        "federal_government": {
          "format": "int32",
          "type": "integer"
        },
        "hm_flag": {
          "format": "int32",
          "type": "integer"
        },
        "indian_tribe": {
          "format": "int32",
          "type": "integer"
        },
        "insert_date": {
          "format": "date",
          "type": "string"
        },
        "legal_name": {
          "type": "string"
        },
        "local_government": {
          "format": "int32",
          "type": "integer"
        },
        "mailing_city": {
          "type": "string"
        },
        "mailing_country": {
          "type": "string"
        },
        "mailing_state": {
          "type": "string"
        },
        "mailing_street": {
          "type": "string"
        },
        "mailing_zip": {
          "type": "string"
        },
        "mcs150_date": {
          "type": "string"
        },
        "mcs150_mileage": {
          "type": "string"
        },
        "mcs150_mileage_year": {
          "type": "string"
        },
        "migrant": {
          "format": "int32",
          "type": "integer"
        },
        "nbr_power_unit": {
          "type": "string"
        },
        "oic_state": {
          "type": "string"
        },
        "op_other": {
          "type": "string"
        },
        "pc_flag": {
          "format": "int32",
          "type": "integer"
        },
        "phy_city": {
          "type": "string"
        },
        "phy_country": {
          "type": "string"
        },
        "phy_state": {
          "type": "string"
        },
        "phy_street": {
          "type": "string"
        },
        "phy_zip": {
          "type": "string"
        },
        "private_only": {
          "format": "int32",
          "type": "integer"
        },
        "private_passenger_business": {
          "format": "int32",
          "type": "integer"
        },
        "private_passenger_nonbusiness": {
          "format": "int32",
          "type": "integer"
        },
        "private_property": {
          "format": "int32",
          "type": "integer"
        },
        "recent_mileage": {
          "type": "string"
        },
        "recent_mileage_year": {
          "type": "string"
        },
        "state_government": {
          "format": "int32",
          "type": "integer"
        },
        "telephone": {
          "type": "string"
        },
        "us_mail": {
          "format": "int32",
          "type": "integer"
        },
        "vmt_source_id": {
          "type": "string"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "PROFILES"
      }
    },
    "get_boards_notes_response": {
      "properties": {
        "list": {
          "description": "A list of requested notes",
          "items": {
            "$ref": "#/definitions/notes_response_item"
          },
          "type": "array"
        }
      },
      "required": [
        "list"
      ],
      "type": "object",
      "x-restlet": {
        "section": "BOARDS"
      }
    },
    "get_custom_fields_data_response": {
      "example": "{\n  \"load_id\": [\n    \"field1\" : \"data1\",\n    \"field2\" : \"data2\"\n  ]\n}",
      "properties": {
        "lists": {
          "description": "A list of each custom field, type and it's corresponding position.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "not categorized yet"
      }
    },
    "get_custom_fields_name_response": {
      "example": "{\n  \"list\": [\n    \"field1\",\n    \"field2\"\n  ]\n}",
      "properties": {
        "lists": {
          "description": "A list of each custom field, type and it's corresponding position.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "not categorized yet"
      }
    },
    "get_email_exists_response": {
      "example": "{\n  \"exists\": true\n}",
      "properties": {
        "exists": {
          "description": "Returns a true value if it is associated with an account.",
          "type": "boolean"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "not categorized yet"
      }
    },
    "get_hidden_companies_response": {
      "example": "{\n  \"company_name\": [\n    \"company_name\",\n    \"company_name\"\n  ]\n}",
      "properties": {
        "company_name": {
          "description": "A subset of companies that need to be marked as hidden.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "not categorized yet"
      }
    },
    "get_hidden_entries": {
      "example": {
        "entry_id": [
          "entry_id",
          "entry_id"
        ]
      },
      "properties": {
        "entry_id": {
          "description": "A subset of entries that need to be marked as hidden.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "not categorized yet"
      }
    },
    "get_state_list_response": {
      "example": "{\n  \"list\": { \n    \"AZ\": { \n      \"inbound\": 10, \n      \"outbound\": 5, \n      \"outbound_percentage\": 50,\n      \"outbound_color\": \"#43434334\",\n      \"freight_rates\": {\n        \"inbound\": {\n          \"ALL\": \"5.95\"\n        },\n        \"outbound\": {\n          \"ALL\": \"5.95\"\n        }\n      }\n    } \n  }\n}",
      "properties": {
        "list": {
          "description": "A hash of state totals.",
          "example": "{ \"AZ\": { \"inbound\": 10, \"outbound\": 5, \"outbound_percentage\": 50, \"freight_rates\": {} }",
          "properties": {
            "list": {
              "additionalProperties": {
                "description": "state name",
                "properties": {
                  "freight_rates": {
                    "properties": {
                      "inbound": {
                        "properties": {
                          "FLAT": {
                            "type": "string"
                          },
                          "VAN": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "outbound": {
                        "properties": {
                          "FLAT": {
                            "type": "string"
                          },
                          "VAN": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "inbound": {
                    "type": "integer"
                  },
                  "outbound": {
                    "type": "integer"
                  },
                  "outbound_color": {
                    "description": "This is an optional color code you can use to shade the map.",
                    "type": "string"
                  },
                  "outbound_percentage": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "x-restlet": {
        "section": "BOARDS"
      }
    },
    "hidden_entry_object": {
      "properties": {
        "entry_id": {
          "description": "The entry(s) that need to be marked as hidden.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "entry_id"
      ],
      "type": "object",
      "x-restlet": {
        "section": "BOARDS"
      }
    },
    "login_credentials": {
      "properties": {
        "login": {
          "description": "The e-mail, or username information needed to log in. ",
          "type": "string"
        },
        "realm": {
          "description": "This specifies who to log in with. If left blank we will assume email/password. Valid realms are username, email, facebook(not implemneted), google(not implemented), and linkedin(not implemented). ",
          "enum": [
            "username",
            "email"
          ],
          "type": "string"
        },
        "secret": {
          "description": "The password, or token required for this login. ",
          "type": "string"
        }
      },
      "required": [
        "login",
        "realm",
        "secret"
      ],
      "type": "object",
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS"
      }
    },
    "mark_hidden_companies": {
      "properties": {
        "company_name": {
          "description": "The company that need to be marked as hidden.",
          "type": "string"
        }
      },
      "required": [
        "company_name"
      ],
      "type": "object",
      "x-restlet": {
        "section": "not categorized yet"
      }
    },
    "note_create_status": {
      "properties": {
        "note_id": {
          "description": "Id of the note.",
          "type": "integer"
        },
        "success": {
          "type": "integer"
        }
      },
      "required": [
        "note_id"
      ],
      "type": "object",
      "x-restlet": {
        "section": "common_definitions"
      }
    },
    "notes_response_item": {
      "example": "test",
      "properties": {
        "body": {
          "description": "Body of the note",
          "example": "This is a test note.",
          "type": "string"
        },
        "date_added": {
          "description": "The date the note was created.",
          "example": "2019-08-23T00:00:00.000Z",
          "format": "date",
          "type": "string"
        },
        "date_modified": {
          "description": "Date of the last update to this note",
          "example": "2019-08-24T00:00:00.000Z",
          "format": "date",
          "type": "string"
        },
        "deleted": {
          "description": "Not sure what this field is?  Is this the date the note was deleted or the status of the load?",
          "type": "string"
        },
        "entry_id": {
          "description": "Entry id of the load associated with this note.",
          "example": "93b30df654ccd860eb34775214877921",
          "type": "string"
        },
        "id": {
          "description": "The id of the note.",
          "example": 55551,
          "type": "integer"
        },
        "important": {
          "description": "Identifies notes marked as important.",
          "example": true,
          "type": "boolean"
        },
        "title": {
          "description": "Title of note.",
          "example": "MO",
          "type": "string"
        }
      },
      "required": [
        "body",
        "date_added",
        "date_modified",
        "deleted",
        "entry_id",
        "id",
        "important",
        "title"
      ],
      "type": "object",
      "x-restlet": {
        "section": "BOARDS"
      }
    },
    "patch_alert_properties": {
      "properties": {
        "alert_id": {
          "description": "Specify which alert you are updating.",
          "type": "integer"
        },
        "days_of_week": {
          "description": "Limit the days that alerts are sent to the days listed.",
          "items": {
            "enum": [
              "Sun",
              "Mon",
              "Tue",
              "Wed",
              "Thu",
              "Fri",
              "Sat"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "end_hour": {
          "description": "A value corresponding to the hour of the day.",
          "maximum": 21,
          "minimum": 3,
          "type": "integer"
        },
        "expires_after": {
          "description": "The last day the alert will be valid. Valid time frames are from today until one year into the future. Cannot be changed if alert is inactive.",
          "format": "date",
          "type": "string"
        },
        "list_type": {
          "description": "This specify the type of list that is returned, including disabling the list from being sent at all.",
          "enum": [
            "complete-list",
            "only-new",
            "only-new-free",
            "not-active"
          ],
          "type": "string"
        },
        "minute_frequency": {
          "description": "How many minutes to wait before sending another alert.",
          "type": "integer"
        },
        "send_type": {
          "description": "What method to send the alert list.",
          "enum": [
            "email",
            "text",
            "push",
            "desktop"
          ],
          "type": "string"
        },
        "start_hour": {
          "description": "A value corresponding to the hour of the day.",
          "maximum": 21,
          "minimum": 3,
          "type": "integer"
        },
        "time_zone": {
          "description": "A number between -1 and 2. -1 = EST, 0 = CST, 1 = MST, 2 = PST",
          "maximum": 2,
          "minimum": -1,
          "type": "integer"
        }
      },
      "required": [
        "alert_id"
      ],
      "type": "object",
      "x-restlet": {
        "section": "ALERTS"
      }
    },
    "post_posting_type_action_body": {
      "properties": {
        "new_load_custom_id": {
          "description": "Optionally specify the custom_id that should be assigned to the new load. This is required for the copy command, for the move command it will be auto-generated if one is not specified.",
          "type": "string"
        },
        "source_id": {
          "description": "The posting id of the posting you are moving or copying.",
          "type": "integer"
        },
        "source_posting": {
          "description": "Where the items are coming from. Loads can not be moved or copied to trucks and trucks can not be moved or copied to loads.",
          "enum": [
            "loads",
            "trucks",
            "private_loads",
            "private_trucks",
            "test_loads",
            "test_trucks"
          ],
          "type": "string"
        }
      },
      "required": [
        "source_id",
        "source_posting"
      ],
      "type": "object",
      "x-restlet": {
        "section": "not categorized yet"
      }
    },
    "posting_post_response": {
      "example": "{\n  \"list\": [\n    .....\n  ]\n}",
      "properties": {
        "list": {
          "description": "A list of posting objects you can iterate over.",
          "items": {
            "$ref": "#/definitions/postings_post_response_item"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "POSTINGS"
      }
    },
    "postings_entry_object": {
      "example": {
        "allowed_actions": [
          "call"
        ],
        "booking_partner": "...",
        "comment": "hello world",
        "custom_id": "abc123",
        "destination_city": "San Francisco",
        "destination_state": "CA",
        "details_url": "https://www.example.com/?loadnumber=1234",
        "dispatch_email": "dispatch@directfreight.com",
        "dispatch_mobile_number": 7777777777,
        "full_load": true,
        "height": 22,
        "length": 22,
        "origin_city": "seattle",
        "origin_state": "WA",
        "other_trailer_types": "Lowboy",
        "pay_rate": 0.22,
        "phone_extension": 666,
        "phone_number": 7777777777,
        "real_age": "2025-07-07T00:00:00.000Z",
        "receive_date": "2020-05-06T00:00:00.000Z",
        "ship_date": "2020-05-06T00:00:00.000Z",
        "trailer_type": [
          "R"
        ],
        "weight": 2200,
        "width": 22
      },
      "properties": {
        "allowed_actions": {
          "description": "What actions are available for this load, defaults to \"call\".",
          "items": {
            "enum": [
              "send_quote",
              "book_now",
              "request_info",
              "call",
              "email",
              "text",
              "desktop_push",
              "mobile_push",
              "no_call",
              "no_email",
              "no_text",
              "url_direct_book",
              "url_details",
              "no_call_unverified"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "booking_partner": {
          "description": "Booking partner.",
          "type": "string"
        },
        "category": {
          "description": "This option only applies to \"private_loads\", \"private_trucks\"",
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "custom_id": {
          "description": "An identifier that can be provided for your own records.  (i.e.-Company load number) This field can be used to retrieve loads via GET.  This value must be unique. Custom Id's can have a maximum of 25 characters.",
          "type": "string"
        },
        "custom_md5sum": {
          "description": "A custom checksum to identify the original string processed by the directfreight spiders.",
          "type": "string"
        },
        "destination_city": {
          "description": "Delivery location city of load/truck. For truck type entries this field is optional or can be used to specify a region.",
          "type": "string"
        },
        "destination_state": {
          "description": "Delivery location state of load/truck. For truck type entries this field is optional.",
          "type": "string"
        },
        "details_url": {
          "description": "An optional URL with additional information about this load.",
          "type": "string"
        },
        "dispatch_email": {
          "description": "Dispatch e-Mail.",
          "type": "string"
        },
        "dispatch_mobile_number": {
          "description": "Dispatch mobile number.",
          "type": "string"
        },
        "full_load": {
          "description": "The load will be assumed to be full if this argument isn't included and marked to true.",
          "type": "boolean"
        },
        "height": {
          "description": "height in feet.",
          "type": "number"
        },
        "length": {
          "description": "length in feet.",
          "type": "number"
        },
        "origin_city": {
          "description": "Origin city location of load or truck.  Required for all entry types.",
          "type": "string"
        },
        "origin_state": {
          "description": "Origin state location of load or truck.  Use the 2 digit state abbreviation.",
          "maxLength": 2,
          "minLength": 2,
          "type": "string"
        },
        "other_trailer_types": {
          "description": "Can be used to specify custom trailer types.",
          "type": "string"
        },
        "pay_rate": {
          "description": "This field will accept either the per mile rate, or gross rate.",
          "type": "number"
        },
        "phone_extension": {
          "description": "If not provided we will use the contact info associated with the users profile.",
          "type": "integer"
        },
        "phone_number": {
          "description": "If not provided we will use the contact info associated with the users profile.",
          "type": "integer"
        },
        "real_age": {
          "description": "When this item was created.  STAGE=PRIVATE",
          "format": "date",
          "type": "string"
        },
        "receive_date": {
          "description": "The date the load/truck should deliver.",
          "format": "date",
          "type": "string"
        },
        "ship_date": {
          "description": "When posting loads this is the date the load should be picked up.  When posting trucks this is the date the truck is available to be loaded.",
          "format": "date",
          "type": "string"
        },
        "trailer_type": {
          "description": "This can have 1 or more standard trailer types.",
          "items": {
            "enum": [
              "V",
              "VINT",
              "SD",
              "MX",
              "HS",
              "AC",
              "LB",
              "F+T",
              "F",
              "FINT",
              "DD",
              "V+V",
              "V+A",
              "CRG",
              "HB",
              "LA",
              "PO",
              "R",
              "RINT",
              "RGN",
              "CV",
              "DT",
              "TNK",
              "F+S",
              "PNEU",
              "CONT",
              "OTHER"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "weight": {
          "description": "weight in pounds.",
          "type": "integer"
        },
        "width": {
          "description": "width in feet.",
          "type": "number"
        }
      },
      "required": [
        "custom_id",
        "origin_city",
        "origin_state",
        "ship_date",
        "trailer_type"
      ],
      "type": "object",
      "x-restlet": {
        "section": "POSTINGS"
      }
    },
    "postings_patch_object": {
      "example": {
        "allowed_actions": [
          "call"
        ],
        "booking_partner": "...",
        "comment": "hello world",
        "custom_id": "abc123",
        "destination_city": "cincinnati",
        "destination_state": "OH",
        "details_url": "https://www.example.com/?loadnumber=1234",
        "dispatch_email": "dispatch@directfreight.com",
        "dispatch_mobile_number": 7777777777,
        "full_load": true,
        "height": 11,
        "length": 11,
        "origin_city": "pittsburg",
        "origin_state": "PA",
        "other_trailer_types": "hot shot",
        "pay_rate": 11,
        "phone_extension": 777,
        "phone_number": 777777777,
        "real_age": "2025-07-01T00:00:00.000Z",
        "receive_date": "2020-05-07T00:00:00.000Z",
        "ship_date": "2020-05-06T00:00:00.000Z",
        "trailer_type": [
          "V+V"
        ],
        "weight": 1100,
        "width": 11
      },
      "properties": {
        "allowed_actions": {
          "description": "What actions are available for this load, defaults to \"call\".",
          "items": {
            "enum": [
              "send_quote",
              "book_now",
              "request_info",
              "call",
              "email",
              "text",
              "desktop_push",
              "mobile_push",
              "no_call",
              "no_email",
              "no_text",
              "url_direct_book",
              "url_details",
              "no_call_unverified"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "booking_partner": {
          "description": "Booking partner.",
          "type": "string"
        },
        "category": {
          "description": "This option only applies to \"private_loads\", \"private_trucks\"",
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "custom_id": {
          "description": "An identifier that can be provided for your own records. (i.e.-Company load number) This field can be used to retrieve loads via GET. This value must be unique.\nYou cannot update a custom_id once it is set. Please delete and reenter the load to change the custom_id.  Either posting_id or custom_id is required.",
          "type": "string"
        },
        "custom_md5sum": {
          "description": "A custom checksum to identify the original string processed by the directfreight spiders.",
          "type": "string"
        },
        "destination_city": {
          "description": "Delivery location city of load/truck.",
          "type": "string"
        },
        "destination_state": {
          "description": "Delivery location city of load/truck.",
          "type": "string"
        },
        "details_url": {
          "description": "An optional URL with additional information about this load.",
          "type": "string"
        },
        "dispatch_email": {
          "description": "Dispatch e-Mail.",
          "type": "string"
        },
        "dispatch_mobile_number": {
          "description": "Dispatch mobile number.",
          "type": "string"
        },
        "full_load": {
          "description": "This should only be used with loads.",
          "type": "boolean"
        },
        "height": {
          "description": "height in feet.",
          "type": "number"
        },
        "length": {
          "description": "length in feet.",
          "type": "number"
        },
        "origin_city": {
          "description": "Origin city location of load or truck",
          "type": "string"
        },
        "origin_state": {
          "description": "Origin state location of load or truck",
          "type": "string"
        },
        "other_trailer_types": {
          "description": "Can be used to specify custom trailer types.",
          "type": "string"
        },
        "pay_rate": {
          "description": "This field will accept either the per mile rate, or gross rate.",
          "type": "number"
        },
        "phone_extension": {
          "description": "If not provided we will use the contact info associated with the users profile.",
          "type": "integer"
        },
        "phone_number": {
          "description": "If not provided we will use the contact info associated with the users profile. Can be a string such as \"Online Only\", \"View Details\" depending on the load and the account type.",
          "type": "string"
        },
        "posting_id": {
          "description": "A unique id for each entry.  This value is returned via GET. \nEither posting_id or custom_id is required.",
          "type": "integer"
        },
        "real_age": {
          "description": "The date the entry was created.  STAGE=PRIVATE",
          "format": "date",
          "type": "string"
        },
        "receive_date": {
          "description": "The date the load/truck should deliver.",
          "format": "date",
          "type": "string"
        },
        "ship_date": {
          "description": "When posting loads this is the date the load should be picked up.  When posting trucks this is the date the truck is available to be loaded.",
          "format": "date",
          "type": "string"
        },
        "trailer_type": {
          "description": "This can have 1 or more standard trailer types.",
          "items": {
            "enum": [
              "V",
              "VINT",
              "SD",
              "MX",
              "HS",
              "AC",
              "LB",
              "F+T",
              "F",
              "FINT",
              "DD",
              "V+V",
              "V+A",
              "CRG",
              "HB",
              "LA",
              "PO",
              "R",
              "RINT",
              "RGN",
              "CV",
              "DT",
              "TNK",
              "F+S",
              "PNEU",
              "CONT",
              "OTHER"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "weight": {
          "description": "weight in pounds.",
          "type": "integer"
        },
        "width": {
          "description": "width in feet.",
          "type": "number"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "POSTINGS"
      }
    },
    "postings_post_response_item": {
      "properties": {
        "allowed_actions": {
          "description": "What actions are available for this load, defaults to \"call\".",
          "items": {
            "enum": [
              "send_quote",
              "book_now",
              "request_info",
              "call",
              "email",
              "text",
              "desktop_push",
              "mobile_push",
              "no_call",
              "no_email",
              "no_text",
              "url_direct_book",
              "url_details",
              "no_call_unverified"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "comment": {
          "type": "string"
        },
        "contact_name": {
          "description": "This is generated from the logged in users profile information.",
          "type": "string"
        },
        "custom_id": {
          "description": "A unique identifier a user can provide for their own records.",
          "type": "integer"
        },
        "destination_city": {
          "description": "Delivery location city of load/truck.",
          "type": "string"
        },
        "destination_state": {
          "description": "Delivery location state of load/truck.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "full_load": {
          "description": "For trucks this will always be false.",
          "type": "boolean"
        },
        "height": {
          "description": "height in feet.",
          "type": "number"
        },
        "length": {
          "description": "length in feet.",
          "type": "number"
        },
        "origin_city": {
          "description": "Origin city location of load or truck",
          "type": "string"
        },
        "origin_state": {
          "description": "Origin state location of load or truck.",
          "type": "string"
        },
        "other_trailer_types": {
          "description": "To include custom trailer types.",
          "type": "string"
        },
        "pay_rate": {
          "description": "We expect one of 2 formats. either the per mile, or total sum.",
          "type": "number"
        },
        "phone_extension": {
          "description": "If not supplied and not in the user's profile this will be null.",
          "type": "integer"
        },
        "phone_number": {
          "description": "If not supplied, this is generated from the logged in users profile information.",
          "type": "integer"
        },
        "posting_id": {
          "description": "This is the unique ID of this post.",
          "type": "integer"
        },
        "receive_date": {
          "description": "The date the load/truck should deliver.",
          "format": "date",
          "type": "string"
        },
        "ship_date": {
          "description": "The date you wish the load to be shipped.",
          "format": "date",
          "type": "string"
        },
        "trailer_type": {
          "description": "This can have 1 or more standard trailer types.",
          "items": {
            "enum": [
              "V",
              "VINT",
              "SD",
              "MX",
              "HS",
              "AC",
              "LB",
              "F+T",
              "F",
              "FINT",
              "DD",
              "V+V",
              "V+A",
              "CRG",
              "HB",
              "LA",
              "PO",
              "R",
              "RINT",
              "RGN",
              "CV",
              "DT",
              "TNK",
              "F+S",
              "PNEU",
              "CONT",
              "OTHER"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "username": {
          "description": "STAGE=private only returned if a whoentered is specified.",
          "type": "string"
        },
        "weight": {
          "description": "weight in pounds.",
          "type": "integer"
        },
        "width": {
          "description": "width in feet.",
          "type": "number"
        }
      },
      "required": [
        "comment",
        "contact_name",
        "custom_id",
        "destination_city",
        "destination_state",
        "full_load",
        "height",
        "length",
        "origin_city",
        "origin_state",
        "other_trailer_types",
        "pay_rate",
        "phone_extension",
        "phone_number",
        "posting_id",
        "receive_date",
        "ship_date",
        "trailer_type",
        "weight",
        "width"
      ],
      "type": "object",
      "x-restlet": {
        "section": "POSTINGS"
      }
    },
    "postings-copy_or_move_response": {
      "properties": {
        "success": {
          "properties": {
            "message": {
              "description": "An explanation of what each code means.",
              "type": "string"
            },
            "posting_id": {
              "type": "integer"
            },
            "status": {
              "type": "integer"
            }
          },
          "required": [
            "message",
            "posting_id",
            "status"
          ],
          "type": "object"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "POSTINGS"
      }
    },
    "postings-post_or_patch_response": {
      "example": "Success",
      "properties": {
        "list": {
          "items": {
            "properties": {
              "code": {
                "type": "integer"
              },
              "description": {
                "description": "An explanation of what each code means.",
                "type": "string"
              },
              "status": {
                "enum": [
                  "Success",
                  "Error"
                ],
                "type": "string"
              }
            },
            "required": [
              "status"
            ],
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "list"
      ],
      "type": "object",
      "x-restlet": {
        "section": "POSTINGS"
      }
    },
    "postings-replace_all_response": {
      "properties": {
        "delete_count": {
          "description": "Total number of items deleted from source.",
          "type": "number"
        },
        "insert_count": {
          "description": "Total number of items inserted into destination.",
          "type": "number"
        },
        "message": {
          "description": "Operation Successful.",
          "type": "string"
        },
        "replaced_entries": {
          "description": "List of entry ids that were replaced.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "POSTINGS"
      }
    },
    "profile_object_patch": {
      "example": {
        "address": "11 Wall Street",
        "carrier_onboard_url": "www.carrier.com/onboard",
        "carrier_terms_url": "www.carrier.com/terms",
        "city": "New York",
        "company": "NY Stock Exchange",
        "contact_extension": 111,
        "contact_name": "J.P. Morgan",
        "contact_number": 8885559999,
        "dispatch_extension": 123,
        "dispatch_number": 4445556666,
        "dot_number": "12345678",
        "email": "test@directfreight.com",
        "fax_number": 1112223333,
        "mc_number": "12345678",
        "mobile_carrier": "Sprint",
        "mobile_number": 4445556666,
        "state": "NY",
        "web_page": "www.directfreight.com",
        "zip": "12345"
      },
      "properties": {
        "address": {
          "type": "string"
        },
        "carrier_onboard_url": {
          "type": "string"
        },
        "carrier_terms_url": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "company": {
          "description": "Company name. ",
          "type": "string"
        },
        "contact_extension": {
          "type": "integer"
        },
        "contact_name": {
          "description": "Contact name. ",
          "type": "string"
        },
        "contact_number": {
          "type": "integer"
        },
        "dispatch_extension": {
          "description": "Limited to 3 integers",
          "type": "integer"
        },
        "dispatch_number": {
          "type": "integer"
        },
        "dot_number": {
          "description": "Maximum 8 numbers.",
          "type": "number"
        },
        "email": {
          "type": "string"
        },
        "fax_number": {
          "type": "integer"
        },
        "mc_number": {
          "type": "string"
        },
        "mobile_carrier": {
          "enum": [
            "Other/Unknown",
            "AT&T",
            "Verizon",
            "Sprint",
            "T-Mobile",
            "US Cellular",
            "Nextel",
            "Virgin Mobile",
            "Boost Mobile",
            "Straight Talk",
            "Tracfone",
            "NET10",
            "Metro PCS",
            "Cricket",
            "Rogers",
            "Fido",
            "Bell Mobility",
            "Telus",
            "Clearnet",
            "Solo Mobile",
            "Koodo Mobile"
          ],
          "type": "string"
        },
        "mobile_number": {
          "type": "integer"
        },
        "state": {
          "type": "string"
        },
        "web_page": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "PROFILES"
      }
    },
    "profile_object": {
      "example": {
        "address": "11 Wall Street",
        "carrier_onboard_url": "www.carrier.com/onboard",
        "carrier_terms_url": "www.carrier.com/terms",
        "city": "New York",
        "company": "NY Stock Exchange",
        "contact_extension": 111,
        "contact_name": "J.P. Morgan",
        "contact_number": 8885559999,
        "deadhead_per_mile": 1.29,
        "dispatch_extension": 123,
        "dispatch_number": 4445556666,
        "dot_number": "12345678",
        "driver_per_mile": 0.72,
        "fax_number": 1112223333,
        "fuel_capacity": 200,
        "ins_permits_per_mile": 0.13,
        "maint_per_mile": 0.17,
        "mc_number": "12345678",
        "miles_per_gal": 6.5,
        "mobile_carrier": "Sprint",
        "mobile_number": 4445556666,
        "state": "NY",
        "truck_ownership_per_mile": 0.27,
        "web_page": "www.directfreight.com",
        "zip": "12345"
      },
      "properties": {
        "address": {
          "type": "string"
        },
        "carrier_onboard_url": {
          "type": "string"
        },
        "carrier_terms_url": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "company": {
          "description": "Company name.",
          "type": "string"
        },
        "contact_extension": {
          "type": "integer"
        },
        "contact_name": {
          "description": "Contact name.",
          "type": "string"
        },
        "contact_number": {
          "type": "integer"
        },
        "dispatch_extension": {
          "description": "Limited to 3 integers",
          "type": "integer"
        },
        "dispatch_number": {
          "type": "integer"
        },
        "dot_number": {
          "description": "Maximum 8 numbers.",
          "type": "number"
        },
        "driver_per_mile": {
          "description": "STAGE=Private",
          "type": "number"
        },
        "fax_number": {
          "type": "integer"
        },
        "fuel_capacity": {
          "description": "STAGE=Private",
          "type": "number"
        },
        "ins_permits_per_mile": {
          "description": "STAGE=Private",
          "type": "number"
        },
        "maint_per_mile": {
          "description": "STAGE=Private",
          "type": "number"
        },
        "mc_number": {
          "description": "Maximum 8 numbers.",
          "type": "number"
        },
        "miles_per_gal": {
          "description": "STAGE=Private",
          "type": "number"
        },
        "mobile_carrier": {
          "enum": [
            "Other/Unknown",
            "AT&T",
            "Verizon",
            "Sprint",
            "T-Mobile",
            "US Cellular",
            "Nextel",
            "Virgin Mobile",
            "Boost Mobile",
            "Straight Talk",
            "Tracfone",
            "NET10",
            "Metro PCS",
            "Cricket",
            "Rogers",
            "Fido",
            "Bell Mobility",
            "Telus",
            "Clearnet",
            "Solo Mobile",
            "Koodo Mobile"
          ],
          "type": "string"
        },
        "mobile_number": {
          "type": "integer"
        },
        "state": {
          "type": "string"
        },
        "truck_ownership_per_mile": {
          "description": "STAGE=Private",
          "type": "number"
        },
        "web_page": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "PROFILES"
      }
    },
    "rename_custom_field": {
      "properties": {
        "current_name": {
          "description": "The field/column to be renamed. ",
          "type": "string"
        },
        "new_name": {
          "description": "Replacement name. ",
          "type": "string"
        }
      },
      "required": [
        "current_name",
        "new_name"
      ],
      "type": "object",
      "x-restlet": {
        "section": "PROFILES"
      }
    },
    "rename_document": {
      "properties": {
        "current_name": {
          "description": "The document to be renamed. ",
          "type": "string"
        },
        "new_name": {
          "description": "Replacement name. ",
          "type": "string"
        }
      },
      "required": [
        "current_name",
        "new_name"
      ],
      "type": "object",
      "x-restlet": {
        "section": "PROFILES"
      }
    },
    "reverse_geocode_response": {
      "properties": {
        "city": {
          "type": "string"
        },
        "region_code": {
          "type": "string"
        },
        "region_name": {
          "type": "string"
        }
      },
      "required": [
        "city",
        "region_code",
        "region_name"
      ],
      "type": "object",
      "x-restlet": {
        "section": "LOCATIONS"
      }
    },
    "social_login_credentials": {
      "properties": {
        "create_missing_account": {
          "default": false,
          "description": "If true the endpoint will create the users account in case it doesnt already exist.",
          "type": "boolean"
        },
        "referrer": {
          "description": "Optional referrer to save with new account creation.",
          "type": "string"
        },
        "search_term": {
          "description": "Optional search term to save with new account creation.",
          "type": "string"
        },
        "service": {
          "description": "Takes a social login service name,",
          "enum": [
            "google",
            "facebook",
            "facebook-code",
            "apple"
          ],
          "type": "string"
        },
        "token": {
          "description": " The token returned by the social login service. For Google the value expected is : data.code For Facebook the value expected is : data.authResponse.accessToken For Apple the value expected is : data.detail.authorization.id_token",
          "type": "string"
        }
      },
      "required": [
        "service",
        "token"
      ],
      "type": "object",
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS"
      }
    },
    "social-login-end-user-token": {
      "properties": {
        "email": {
          "description": "The email address that was used to login.",
          "example": "example@directfreight.com",
          "type": "string"
        },
        "end-user-token": {
          "description": "On success and end-user-token is returned.",
          "example": "XX423ASOEUHT4AESUTH",
          "type": "string"
        },
        "new_account": {
          "description": "Indicates if a new account was created or an existing one was used to login.",
          "example": false,
          "type": "boolean"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS"
      }
    },
    "stop_item": {
      "properties": {
        "label": {
          "description": "Label for this field.",
          "example": "Pickup #1",
          "type": "string"
        },
        "summary": {
          "description": "Summary of this field.",
          "example": "411 Locust Chillicothe, MO 64601 on 03-02-2023",
          "type": "string"
        }
      }
    },
    "sub_account_response": {
      "example": "{\n  \"sub_accounts\": [\n    {\n      \"id\": 1234,\n      \"status\": \"invited\",\n      \"contact_name\": \"...\",\n      \"dispatch_number\": \"(123) 123-4567\",\n      \"mc_number\": \"12312312\",\n      \"dot_number\": \"45645645\",\n      \"username\": \"...\",\n      \"email\": \"user@domain.com\",\n      \"department_id\": 5,\n      \"department_name\": \"West Coast\"\n    }\n  ],\n  \"subscriptions_purchased\": 5,\n  \"active_sub_accounts\": 3\n}",
      "properties": {
        "active_sub_accounts": {
          "description": "Number of licenses used.",
          "type": "integer"
        },
        "sub_accounts": {
          "items": {
            "properties": {
              "contact_name": {
                "type": "string"
              },
              "department_id": {
                "type": "integer"
              },
              "department_name": {
                "type": "string"
              },
              "dispatch_number": {
                "type": "string"
              },
              "dot_number": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "id": {
                "description": "The ID of the additional user.",
                "type": "integer"
              },
              "mc_number": {
                "type": "string"
              },
              "status": {
                "description": "The status of the sub-account.",
                "type": "string"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "subscriptions_purchased": {
          "description": "Number of licenses purchased.",
          "type": "integer"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS"
      }
    },
    "toggle_hidden_companies": {
      "properties": {
        "company_name": {
          "description": "The company name that need to be toggled. ",
          "type": "string"
        }
      },
      "required": [
        "company_name"
      ],
      "type": "object",
      "x-restlet": {
        "section": "not categorized yet"
      }
    },
    "toggle_hidden_entries": {
      "properties": {
        "entry_id": {
          "description": "The entry that need to be toggled. ",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "entry_id"
      ],
      "type": "object",
      "x-restlet": {
        "section": "BOARDS"
      }
    },
    "trailer_type": {
      "description": "These are the officially supported trailer types.",
      "items": {
        "enum": [
          "V",
          "VINT",
          "SD",
          "MX",
          "HS",
          "AC",
          "LB",
          "F+T",
          "F",
          "FINT",
          "DD",
          "V+V",
          "V+A",
          "CRG",
          "HB",
          "LA",
          "PO",
          "R",
          "RINT",
          "RGN",
          "CV",
          "DT",
          "TNK",
          "F+S",
          "PNEU",
          "CONT",
          "OTHER"
        ],
        "type": "string"
      },
      "type": "array",
      "x-restlet": {
        "section": "common_definitions"
      }
    },
    "truck_info_object": {
      "example": {
        "deadhead_per_mile": 1.29,
        "driver_per_mile": 0.72,
        "fuel_capacity": 200,
        "ins_permits_per_mile": 0.13,
        "maint_per_mile": 0.17,
        "miles_per_gal": 6.5,
        "truck_ownership_per_mile": 0.27
      },
      "properties": {
        "deadhead_per_mile": {
          "type": "number"
        },
        "driver_per_mile": {
          "type": "number"
        },
        "fuel_capacity": {
          "type": "number"
        },
        "ins_permits_per_mile": {
          "type": "number"
        },
        "maint_per_mile": {
          "type": "number"
        },
        "miles_per_gal": {
          "type": "number"
        },
        "truck_ownership_per_mile": {
          "type": "number"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "PROFILES"
      }
    },
    "update_notes_status": {
      "properties": {
        "success": {
          "type": "integer"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "common_definitions"
      }
    },
    "update_notes": {
      "properties": {
        "body": {
          "type": "string"
        },
        "note_id": {
          "description": "Id of the note",
          "type": "integer"
        },
        "title": {
          "description": "Subject of the note. ",
          "type": "string"
        }
      },
      "required": [
        "body",
        "note_id",
        "title"
      ],
      "type": "object",
      "x-restlet": {
        "section": "BOARDS"
      }
    },
    "upload_document": {
      "properties": {
        "filename": {
          "description": "The file to be uploaded. ",
          "properties": {},
          "type": "object"
        }
      },
      "required": [
        "filename"
      ],
      "type": "object",
      "x-restlet": {
        "section": "PROFILES"
      }
    },
    "user": {
      "properties": {
        "email": {
          "description": "This must be a valid e-mail. ",
          "type": "string"
        },
        "partner": {
          "description": "Optional partner string to be associated with the new account.",
          "type": "string"
        },
        "password": {
          "description": "Currently this is a 6-10 digit alphanumeric password. ",
          "type": "string"
        }
      },
      "required": [
        "email",
        "password"
      ],
      "type": "object",
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS"
      }
    }
  }
}
